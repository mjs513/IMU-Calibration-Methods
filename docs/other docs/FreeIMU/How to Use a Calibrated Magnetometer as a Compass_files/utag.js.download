//tealium universal tag - utag.loader ut4.49.202407311733, Copyright 2024 Tealium.com Inc. All Rights Reserved.

var utag_condload=false;window.__tealium_twc_switch=false;try{ try{
// 415 - Do Not Track and Configuration
// Remove old cookie-tracking

var domain = location.hostname.match(/\.digikey\..*/)[0]
domain.toLowerCase() === '.digikey.com' ? window['ga-disable-G-D3YXGNSYYE'] = true : ''

document.cookie = "udo-data=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;domain=" + domain + ";"
document.cookie = "wt-tracking=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;domain=" + domain + ";"
window.utag_data = window.utag_data || {}
var xj
for (xj in window.utag_data) {
    if (typeof window.utag_data[xj] === 'string') {
        try {
            window.utag_data[xj] = decodeURIComponent(window.utag_data[xj])
        } catch (e) {
        }
    }
}

window.utag_cfg_ovrd = window.utag_cfg_ovrd || {}
window.utag_cfg_ovrd.load_rules_at_wait = true
window.utag_cfg_ovrd.ga_noview = false

var dkDom = window.location.hostname.toLowerCase()
var dkDomCtry = dkDom.substring(dkDom.length - 3).replace(/\.|\//g, '')
var dk_test = (/digikeytest\.digikey/i.test(dkDom) || /digikeydev\.digikey/i.test(dkDom) || /preprod\.digikey/i.test(dkDom)) ? true : false;

window.utag_checkDoNotTrack = function() {
    var tmpVal = 'no'
    if (window.utag_dkOTPerformance() === false && window.utag_dkOTFunctional === false && window.utag_dkOTTargeting === false ) {
        tmpVal = 'yes'
    }
    utag_data['js_page.myApp.page.do_not_track'] = tmpVal
    return tmpVal
}

// added for load rules checking for a value
if (utag_data['do_not_track_for_consent'] == null) {
    utag_data['do_not_track_for_consent'] = ''
}

utag_data['one_trust_country'] = 'yes'
if (window.localStorage.getItem('gdpr_cookie_consent') === null) {
    // Override GDPR Code for OneTrust Countries
    var gdpr = { 'acceptedOn': new Date() }
    window.localStorage.setItem("gdpr_cookie_consent", JSON.stringify({ "acceptedOn": new Date() }))
    utag_data['do_not_track'] = 'no'
}

if (document.cookie.indexOf('OptanonConsent') === -1) {
    // OneTrust Code
    window.utag_cfg_ovrd.noview = true
    utag_cfg_ovrd = {}
    window.utag_cfg_ovrd.ga_noview = false
    window.utag_cfg_ovrd.load_rules_at_wait = true
    var wait_for_onetrust = setInterval(function () {
        if (document.cookie.indexOf('OptanonConsent') > -1) {
            utag.view(utag_data)
            clearInterval(wait_for_onetrust)
        }
    }, 1000)
}

if (location.hostname.indexOf("digikey.com.cn") > -1 || location.hostname.indexOf("digikey.cn") > -1) {
    if (location.pathname.indexOf(/products/) > -1) { window.utag_cfg_ovrd.noview = true }
    if (location.hostname.indexOf("digikeytest") > -1 || location.hostname.indexOf("digikeydev") > -1) {
        utag_cfg_ovrd.path = utag_cfg_ovrd.path ? utag_cfg_ovrd.path : "//tags.tiqcdn.cn/utag/digikey/main/qa/"
    } else {
        utag_cfg_ovrd.path = utag_cfg_ovrd.path ? utag_cfg_ovrd.path : "//tags.tiqcdn.cn/utag/digikey/main/prod/"
    }
}

utag_cfg_ovrd.view_processed = false
window.utag_evergageCampaigns = function (evergageCampaigns) {
    try {
        utag_cfg_ovrd.evergageCampaigns = evergageCampaigns
        if (utag_cfg_ovrd.view_processed) {
            utag.framework.processEvergageCampaigns(utag_cfg_ovrd.evergageCampaigns)
            utag_cfg_ovrd.evergageCampaigns = ""
        }
    } catch (e) { utag.DB(e) }
}

window.utag_dkOTPerformance = function() {
    var value = "; " + document.cookie
    var parts = value.split("; OptanonConsent=")
    if (parts.length == 2) {
        var tmp = decodeURIComponent(parts.pop().split(";").shift())
        if (tmp.includes('C0002:1')) {
            return true
        } else {
            return false
        }
    }
}

window.utag_dkOTFunctional = function() {
    var value = "; " + document.cookie
    var parts = value.split("; OptanonConsent=")
    if (parts.length == 2) {
        var tmp = decodeURIComponent(parts.pop().split(";").shift())
        if (tmp.includes('C0003:1')) {
            return true
        } else {
            return false
        }
    }
}

window.utag_dkOTTargeting = function() {
    var value = "; " + document.cookie
    var parts = value.split("; OptanonConsent=")
    if (parts.length == 2) {
        var tmp = decodeURIComponent(parts.pop().split(";").shift())
        if (tmp.includes('C0004:1')) {
            return true
        } else {
            return false
        }
    }
}
try {
    var ccpa_ls = localStorage.getItem('ccpa_do_not_track') !== null ? 'yes' : 'no'
} catch(e) {
    var ccpa_ls = 'no'
}
var ccpa = window.utag_dkOTTargeting() === false || window.utag_dkOTPerformance() === false || ccpa_ls !== 'no' ? 'yes' : 'no'
utag_data['ccpa_do_not_track'] = ccpa
var myApp = { page: { ccpa: ccpa } }

} catch(e){ console.log(e) } }catch(e){console.log(e);}

if(!utag_condload){try{ try{
// 501 - YouTube Video Tracking
// Tealium Tracking Code for YouTube iframe embeds - All domains except China
if (!(domain.includes('digikey.cn')) && window.utag_dkOTPerformance() ) {
    // Read the identifiers on the YouTube iframes. If not present, then add ids
    var iFrames = document.querySelectorAll('iframe[src*="youtube.com"]')
    if( iFrames.length > 0 ) {
        var i = 0, id;
        window.iframe_id = [];
        for (var i = 0; i < iFrames.length; i++) {
            var item = iFrames[i]
            if (item.hasAttribute('id')) {
                id = item.getAttribute('id')
                window.iframe_id.push(id)
            } else {
                id = 'tealium_youtube' + i;
                item.setAttribute('id', id)
                window.iframe_id.push(id);
            }
        }
    }

    // Configure Milestones
    function setMileStones(i) {
        // Set the intervals here as you want them reported, in % viewed, each number separated by a comma
        // If you do not want mileStones set mileStones[i] = [] ;
        mileStones[i] = [10, 25, 50, 75, 90];
    }
    var mileStones = [];
    if (window.iframe_id) {
        for (i = 0; i < window.iframe_id.length; i++) {
            setMileStones(i);
        }
    }

    // Load the YouTube iframe library
    var yt_script = document.querySelectorAll('script[src*="youtube.com/iframe_api"]')
    var yt_slider = document.querySelectorAll('#youtube-video-slider')
    if( yt_script.length === 0 && yt_slider.length === 0 ) {
        var ytapi = document.createElement('script');
        ytapi.src = "https://ww" + "w.youtube" + ".com/iframe_api";
        var scriptref = document.getElementsByTagName('script')[0];
        scriptref.parentNode.insertBefore(ytapi, scriptref);
    }

    window.players = [];
    window.onYouTubeIframeAPIReady = function () {
        // Confirm existing ID or set ID in the iframe for each video on the page
        for (var i = 0; i < iFrames.length; i++) {
            var item = iFrames[i]
            var id = item.getAttribute('id')
            window.players[id] = new YT.Player(id, {
                events: {
                    'onReady': onPlayerReady,
                    'onStateChange': onPlayerStateChange
                }
            })
        }
    }

    window.start = [];
    window.onPlayerReady = function (event) {
        //Log that the video is ready/open
        var idx;
        for (i = 0; i < window.iframe_id.length; i++) {
            if (window.iframe_id[i] === event.target.getIframe().id) {
                idx = i;
            }
            window.start.push(true);
        }
        if (event.target.getPlayerState() === YT.PlayerState.CUED) {
            var player = event.target;
            var player_data = player.getVideoData();
            var data = {};
            data['event_category'] = 'yt_video';
            data['event_label'] = player_data.title;
            data['ref_page_event'] = 'video_load';
            data['playlist_id'] = '(Not Set)';
            data['video_id'] = player_data.video_id;
            data['page_type'] = 'VI';
            data['page_sub_type'] = 'YT';
            data['page_content_group'] = 'Video';
            data['page_content_sub_group'] = 'YouTube';
            utag.assignVideoSource(data);
            data['video_source'] = utag.data['video_source'];
            utag.dklink(data);
        }
    }

    var playerCheckInterval, event;
    window.onPlayerStateChange = function (event) {
        player = event.target;
        var playhead, idx;
        for (i = 0; i < window.iframe_id.length; i++) {
            if (window.iframe_id[i] === event.target.getIframe().id) {
                idx = i;
            }
        }
        ref_page_event = "";
        if (event.data == YT.PlayerState.PLAYING) {
            if (start[idx]) {
                if (mileStones[idx].length > 0) {
                    playerCheckInterval = setInterval(mileStoneCheck, 50);
                }
                ref_page_event = "mediaStart";
                playhead = 0;
            } else {
                //This will catch when the video playback is changed from not playing to playing
                ref_page_event = "mediaBegin";
                playhead = player.getCurrentTime().toString();
            }
            start[idx] = false;

        } else if (event.data == YT.PlayerState.PAUSED) {
            ref_page_event = "mediaPause";
            playhead = player.getCurrentTime().toString();

        } else if (event.data == YT.PlayerState.ENDED) {
            if (mileStones[idx].length > 0) {
                clearInterval(playerCheckInterval);
                // reset in case visitor replays the video
                playerCheckInterval = 0;
                setMileStones(idx);
            }
            ref_page_event = "mediaComplete"; // utag
            playhead = Math.round(player.getDuration()).toString();
        }

        if (ref_page_event) {
            utag.DB("Video event: " + ref_page_event + ", video ID: " + window.iframe_id[idx]);
            var player_data = player.getVideoData();
            var data = {};
            data['event_category'] = 'yt_video';
            data['event_label'] = player_data.title;
            data['ref_page_event'] = ref_page_event;
            data['playlist_id'] = '(Not Set)';
            data['video_id'] = player_data.video_id;
            data['page_type'] = 'VI';
            data['page_sub_type'] = 'YT';
            data['page_content_group'] = 'Video';
            data['page_content_sub_group'] = 'YouTube';
            utag.assignVideoSource(data);
            data['video_source'] = utag.data['video_source'];
            utag.dklink(data);
        }

        function mileStoneCheck() {
            var idx;
            for (i = 0; i < window.iframe_id.length; i++) {
                if (window.iframe_id[i] === player.getIframe().id) {
                    idx = i;
                }
            }
            var duration = Math.round(player.getDuration());
            var playhead = parseInt(player.getCurrentTime());
            var percComplete = (playhead / duration) * 100;
            var ms_len = mileStones[idx].length;
            if (ms_len > 0) {
                var next_ms = mileStones[idx][0];
                if (next_ms <= percComplete) {
                    mileStones[idx].shift();
                    utag.DB("Video event: video_milestone, video ID: " + window.iframe_id[idx] + ", Milestone=" + percComplete.toFixed());
                    var player_data = player.getVideoData();
                    var data = {};
                    data['event_category'] = 'yt_video';
                    data['event_label'] = player_data.title;
                    data['ref_page_event'] = 'video_milestone';
                    data['playlist_id'] = '(Not Set)';
                    data['video_id'] = player_data.video_id;
                    data['page_type'] = 'VI';
                    data['page_sub_type'] = 'YT';
                    data['page_content_group'] = 'Video';
                    data['page_content_sub_group'] = 'YouTube';
                    utag.assignVideoSource(data);
                    data['video_source'] = utag.data['video_source'];
                    utag.dklink(data);
                }
            }
        }
    }
}

} catch(e){ console.log(e) } }catch(e){console.log(e);}}

if (typeof utag == "undefined" && !utag_condload) {
  var utag = {
    id:"digikey.main",
    o:{},
    sender: {},
    send: {},
    rpt: {
      ts: {
        a: new Date()
      }
    },
    dbi: [],
    db_log : [],
    loader: {
      q: [],
      lc: 0,
      f: {},
      p: 0,
      ol: 0,
      wq: [],
      lq: [],
      bq: {},
      bk: {},
      rf: 0,
      ri: 0,
      rp: 0,
      rq: [],
      ready_q : [], 
      sendq :{"pending":0},
      run_ready_q : function(){
        for(var i=0;i<utag.loader.ready_q.length;i++){
          utag.DB("READY_Q:"+i);
          try{utag.loader.ready_q[i]()}catch(e){utag.DB(e)};
        }
      },
      lh: function(a, b, c) {
        a = "" + location.hostname;
        b = a.split(".");
        c = (/\.co\.|\.com\.|\.org\.|\.edu\.|\.net\.|\.asn\.|\...\.jp$/.test(a)) ? 3 : 2;
        return b.splice(b.length - c, c).join(".");
      },
      WQ: function(a, b, c, d, g) {
        utag.DB('WQ:' + utag.loader.wq.length);
        try {
          // this picks up a utag_data items added after utag.js was loaded
          // Gotcha: Data layer set after utag.js will not overwrite something already set via an extension.  Only "new" values are copied from utag_data
          // for case where utag_data is set after utag.js is loaded
          if(utag.udoname && utag.udoname.indexOf(".")<0){
            utag.ut.merge(utag.data,window[utag.udoname],0);
          }

          // TBD: utag.handler.RE('view',utag.data,"bwq");
          // process load rules again if this flag is set
          if(utag.cfg.load_rules_at_wait){
            utag.handler.LR(utag.data);
          }
        } catch (e) {utag.DB(e)};
	
	d=0;
        g=[]; 
        for (a = 0; a < utag.loader.wq.length; a++) {
          b = utag.loader.wq[a];
	  b.load = utag.loader.cfg[b.id].load;
          if (b.load == 4){
            //LOAD the bundled tag set to wait here
            this.f[b.id]=0;
            utag.loader.LOAD(b.id)
          }else if (b.load > 0) {
            g.push(b);
            //utag.loader.AS(b); // moved: defer loading until flags cleared
	    d++;
          }else{
            // clear flag for those set to wait that were not actually loaded
            this.f[b.id]=1;
          }
        }
        for (a = 0; a < g.length; a++) {
          utag.loader.AS(g[a]);
        }

	if(d==0){
	  utag.loader.END();
	}
      },
      AS: function(a, b, c, d) {
        utag.send[a.id] = a;
        if (typeof a.src == 'undefined' || !utag.ut.hasOwn(a,'src')) {
          a.src = utag.cfg.path + ((typeof a.name != 'undefined') ? a.name : 'ut' + 'ag.' + a.id + '.js')
        }
        a.src += (a.src.indexOf('?') > 0 ? '&' : '?') + 'utv=' + (a.v?utag.cfg.template+a.v:utag.cfg.v);
        utag.rpt['l_' + a.id] = a.src;
        b = document;
        this.f[a.id]=0;
        if (a.load == 2) {
          utag.DB("Attach sync: "+a.src);
          a.uid=a.id;
          b.write('<script id="utag_' + a.id + '" src="' + a.src + '"></scr' + 'ipt>')
          if(typeof a.cb!='undefined')a.cb();
        } else if(a.load==1 || a.load==3) {
          if (b.createElement) {
            c = 'utag_digikey.main_'+a.id;
            if (!b.getElementById(c)) {
	      d = {
	        src:a.src,
		id:c,
                uid:a.id,
		loc:a.loc
              }
              if(a.load == 3){d.type="iframe"};
	      if(typeof a.cb!='undefined')d.cb=a.cb;
              utag.ut.loader(d);
            }
          }
        }
      },
      GV: function(a, b, c) {
        b = {};
        for (c in a) {
          if (a.hasOwnProperty(c) && typeof a[c] != "function") b[c] = a[c];
        }
        return b
      },
      OU: function(tid, tcat, a, b, c, d, f, g) {
        g = {};
        utag.loader.RDcp(g);
        try {
          if (typeof g['cp.OPTOUTMULTI'] != 'undefined') {
            c = utag.loader.cfg;
            a = utag.ut.decode(g['cp.OPTOUTMULTI']).split('|');
            for (d = 0; d < a.length; d++) {
              b = a[d].split(':');
              if (b[1] * 1 !== 0) {
                if (b[0].indexOf('c') == 0) {
                  for (f in utag.loader.GV(c)) {
                    if (c[f].tcat == b[0].substring(1)) c[f].load = 0;
                    // if we know the tid but don't know the category and this is a category opt out...
                    if (c[f].tid == tid && c[f].tcat == b[0].substring(1)) return true; 
                  }
                  if (tcat == b[0].substring(1)) return true;
                } else if (b[0] * 1 == 0) {
                  utag.cfg.nocookie = true
                } else {
                  for (f in utag.loader.GV(c)) {
                    if (c[f].tid == b[0]) c[f].load = 0
                  }
                  if (tid == b[0]) return true;
                }
              }
            }
          }
        } catch (e) {utag.DB(e)}
        return false;
      },
      RDdom: function(o){
        var d = document || {}, l = location || {};
        o["dom.referrer"] = d.referrer;
        o["dom.title"] = "" + d.title;
        o["dom.domain"] = "" + l.hostname;
        o["dom.query_string"] = ("" + l.search).substring(1);
        o["dom.hash"] = ("" + l.hash).substring(1);
        o["dom.url"] = "" + d.URL;
        o["dom.pathname"] = "" + l.pathname;
        o["dom.viewport_height"] = window.innerHeight || (d.documentElement?d.documentElement.clientHeight:960);
        o["dom.viewport_width"] = window.innerWidth || (d.documentElement?d.documentElement.clientWidth:960);
      },
      RDcp: function(o, b, c, d){
        b = utag.loader.RC();
        for (d in b) {
          if (d.match(/utag_(.*)/)) {
            for (c in utag.loader.GV(b[d])) {
              o["cp.utag_" + RegExp.$1 + "_" + c] = b[d][c];
            }
          }
        }
        for (c in utag.loader.GV((utag.cl && !utag.cl['_all_']) ? utag.cl : b)) {
          if (c.indexOf("utag_") < 0 && typeof b[c] != "undefined") o["cp." + c] = b[c];
        }
      },
      RDqp: function(o, a, b, c){
        a = location.search + (location.hash+'').replace("#","&");
        if(utag.cfg.lowerqp){a=a.toLowerCase()};
        if (a.length > 1) {
          b = a.substring(1).split('&');
          for (a = 0; a < b.length; a++) {
            c = b[a].split("=");
            if(c.length>1){
              o["qp." + c[0]] = utag.ut.decode(c[1])
            }
          }
        }
      },
      RDmeta: function(o, a, b, h){
        a = document.getElementsByTagName("meta");
        for (b = 0; b < a.length; b++) {
          try{
            h = a[b].name || a[b].getAttribute("property") || ""; 
          }catch(e){h="";utag.DB(e)};
          if (utag.cfg.lowermeta){h=h.toLowerCase()};
          if (h != ""){o["meta." + h] = a[b].content}
        }
      },
      RDva: function(o){
        // Read visitor attributes in local storage
        var readAttr = function(o, l ){
          var a = "", b;
          a = localStorage.getItem(l);
          if(!a || a=="{}")return;
          b = utag.ut.flatten({va : JSON.parse(a)});
          utag.ut.merge(o,b,1);
        }
        try{
          readAttr(o, "tealium_va" );
          readAttr(o, "tealium_va_" + o["ut.account"] + "_" + o["ut.profile"] );
        }catch(e){ utag.DB(e) }
      },
      RDut: function(o, a){
        // Add built-in data types to the data layer for use in mappings, extensions and RDva function.
        var t = {};
        var d = new Date();
        var m = ( utag.ut.typeOf(d.toISOString) == "function" );
        o["ut.domain"] = utag.cfg.domain;
        o["ut.version"] = utag.cfg.v;
        // i.e. "view" or "link"
        t["tealium_event"] = o["ut.event"] = a || "view";
        t["tealium_visitor_id"] = o["ut.visitor_id"]=o["cp.utag_main_v_id"];
        t["tealium_session_id"] = o["ut.session_id"]=o["cp.utag_main_ses_id"];
        t["tealium_session_number"] = o["cp.utag_main__sn"];
        t["tealium_session_event_number"] = o["cp.utag_main__se"];
        try{
          t["tealium_datasource"] = utag.cfg.datasource;
          t["tealium_account"] = o["ut.account"] = utag.cfg.utid.split("/")[0];
          t["tealium_profile"] = o["ut.profile"] = utag.cfg.utid.split("/")[1];
          t["tealium_environment"] = o["ut.env"] = "prod";
        }catch(e){ utag.DB(e) }

        t["tealium_random"] = Math.random().toFixed(16).substring(2);
        t["tealium_library_name"] = "ut"+"ag.js";
        t["tealium_library_version"] = ( utag.cfg.template + "0" ).substring(2);
        t["tealium_timestamp_epoch"] = Math.floor( d.getTime() / 1000 );
        t["tealium_timestamp_utc"] = ( m ? d.toISOString() : "");
        // Adjust date to local time
        d.setHours( d.getHours() - ( d.getTimezoneOffset() / 60 ) );
        t["tealium_timestamp_local"] = ( m ? d.toISOString().replace( "Z","" ) : "" );

        // Any existing data elements with "tealium_" will not be overwritten
        utag.ut.merge( o, t, 0 );
      },
      RDses: function( o, a, c ) {
        a = (new Date()).getTime();
        c = ( a + parseInt( utag.cfg.session_timeout ) ) + "";

        // cp.utag_main_ses_id will not be in the data layer when it has expired or this is first page view of all time
	if ( !o["cp.utag_main_ses_id"] ) {
          o["cp.utag_main_ses_id"] = a + "";
          o["cp.utag_main__ss"] = "1";
          o["cp.utag_main__se"] = "1";
          o["cp.utag_main__sn"] = ( 1 + parseInt( o["cp.utag_main__sn"] || 0 ) ) + "";
        } else {
          o["cp.utag_main__ss"] = "0";
          o["cp.utag_main__se"] = ( 1 + parseInt( o["cp.utag_main__se"] || 0 ) ) + "";
        }

        o["cp.utag_main__pn"] = o["cp.utag_main__pn"] || "1";
        o["cp.utag_main__st"] = c;

        utag.loader.SC( "utag_main", { "_sn": ( o["cp.utag_main__sn"] || 1 ), "_se": o["cp.utag_main__se"], "_ss": o["cp.utag_main__ss"], "_st": c, "ses_id": ( o["cp.utag_main_ses_id"] || a ) + ";exp-session", "_pn": o["cp.utag_main__pn"] + ";exp-session" } );
      },
      RDpv: function( o ) {
        if ( typeof utag.pagevars == "function" ) {
          utag.DB("Read page variables");
          utag.pagevars(o);
        }
      },
      RDlocalStorage: function(o) {
        if (utag.cfg.ignoreLocalStorage) {
          return;
        }
        Object.keys(window.localStorage).forEach(function(localStorageKey) {
          o["ls." + localStorageKey] = window.localStorage[localStorageKey];
        });
      },
      RDsessionStorage: function(o) {
        if (utag.cfg.ignoreSessionStorage) {
          return;
        }
        Object.keys(window.sessionStorage).forEach(function(sessionStorageKey) {
          o["ss." + sessionStorageKey] = window.sessionStorage[sessionStorageKey];
        });
      },
      RD: function( o, a ) {
        utag.DB("utag.loader.RD");
        utag.DB(o);

        utag.loader.RDcp(o);

        if ( !utag.loader.rd_flag ) {
          utag.loader.rd_flag = 1;
          o["cp.utag_main_v_id"] = o["cp.utag_main_v_id"] || utag.ut.vi((new Date()).getTime());
          o["cp.utag_main__pn"] = ( 1 + parseInt( o["cp.utag_main__pn"] || 0 ) ) + "";
          // the _st value is not-yet-set for first page view so we'll need wait to write in _pn value (which is exp-session)
          // The SC function expires (removes) cookie values that expired with the session
          utag.loader.SC( "utag_main", { "v_id": o["cp.utag_main_v_id"] } );
          utag.loader.RDses(o);
        }

        // first utag.track call for noview should not clear session start (_ss) value
        if(a && !utag.cfg.noview)utag.loader.RDses(o);
        utag.loader.RDqp(o);
        utag.loader.RDmeta(o);
        utag.loader.RDdom(o);
        utag.loader.RDut(o, a || "view");
        utag.loader.RDpv(o);
        utag.loader.RDva(o);
        utag.loader.RDlocalStorage(o);
        utag.loader.RDsessionStorage(o);
      },
      RC: function(a, x, b, c, d, e, f, g, h, i, j, k, l, m, n, o, v, ck, cv, r, s, t) {
        o = {};
        b = ("" + document.cookie != "") ? (document.cookie).split("; ") : [];
        r = /^(.*?)=(.*)$/;
        s = /^(.*);exp-(.*)$/;
        t = (new Date()).getTime();
        for (c = 0; c < b.length; c++) {
          if (b[c].match(r)) {
            ck = RegExp.$1;
            cv = RegExp.$2;
          }
          e = utag.ut.decode(cv);
          if (typeof ck!="undefined"){
            if (ck.indexOf("ulog") == 0 || ck.indexOf("utag_") == 0) {
              e = cv.split("$");
              g = [];
              j = {};
              for (f = 0; f < e.length; f++) {
                try{
                  g = e[f].split(":");
                  if (g.length > 2) {
                    g[1] = g.slice(1).join(":");
                  }
                  v = "";
                  if (("" + g[1]).indexOf("~") == 0) {
                    h = g[1].substring(1).split("|");
                    for (i = 0; i < h.length; i++) h[i] = utag.ut.decode(h[i]);
                    v = h
                  } else v = utag.ut.decode(g[1]);
                  j[g[0]] = v;
                }catch(er){utag.DB(er)};
              }
              o[ck] = {};
              for (f in utag.loader.GV(j)) {
                if (utag.ut.typeOf(j[f]) == "array") {
                  n = [];
                  for (m = 0; m < j[f].length; m++) {
                    if (j[f][m].match(s)){
                      k = (RegExp.$2 == "session") ? (typeof j._st != "undefined" ? j._st : t - 1) : parseInt(RegExp.$2);
                      if (k > t) n[m] = (x == 0) ? j[f][m] : RegExp.$1;
                    }
                  }
                  j[f] = n.join("|");
                } else {
                  j[f] = "" + j[f];
                  if (j[f].match(s)) {
                    k = (RegExp.$2 == "session") ? (typeof j._st != "undefined" ? j._st : t - 1) : parseInt(RegExp.$2);
                    j[f] = (k < t) ? null : (x == 0 ? j[f] : RegExp.$1);
                  }
                }
                if (j[f]) o[ck][f] = j[f];
              }
            } else if (utag.cl[ck] || utag.cl['_all_']) {
              o[ck] = e
            }
          }
        }
        return (a) ? (o[a] ? o[a] : {}) : o;
      },
      SC: function(a, b, c, d, e, f, g, h, i, j, k, x, v) {
        if (!a) return 0;
        if (a=="utag_main" && utag.cfg.nocookie) return 0;
        v = "";
        var date = new Date();
        var exp = new Date();
        exp.setTime(date.getTime()+(365*24*60*60*1000));
        x = exp.toGMTString();
        if (c && c == "da") {
          x = "Thu, 31 Dec 2009 00:00:00 GMT";
        } else if (a.indexOf("utag_") != 0 && a.indexOf("ulog") != 0) {
          if (typeof b != "object") {
            v = b
          }
        } else {
          d = utag.loader.RC(a, 0);
          for (e in utag.loader.GV(b)) {
            f = "" + b[e];
            if (f.match(/^(.*);exp-(\d+)(\w)$/)) {
              g = date.getTime() + parseInt(RegExp.$2) * ((RegExp.$3 == "h") ? 3600000 : 86400000);
              if (RegExp.$3 == "u") g = parseInt(RegExp.$2);
              f = RegExp.$1 + ";exp-" + g;
            }
            if (c == "i") {
              if (d[e] == null) d[e] = f;
            } else if (c == "d") delete d[e];
            else if (c == "a") d[e] = (d[e] != null) ? (f - 0) + (d[e] - 0) : f;
            else if (c == "ap" || c == "au") {
              if (d[e] == null) d[e] = f;
              else {
                if (d[e].indexOf("|") > 0) {
                  d[e] = d[e].split("|")
                }
                g = (utag.ut.typeOf(d[e]) == "array") ? d[e] : [d[e]];
                g.push(f);
                if (c == "au") {
                  h = {};
                  k = {};
                  for (i = 0; i < g.length; i++) {
                    if (g[i].match(/^(.*);exp-(.*)$/)) {
                      j = RegExp.$1;
                    }
                    if (typeof k[j] == "undefined") {
                      k[j] = 1;
                      h[g[i]] = 1;
                    }
                  }
                  g = [];
                  for (i in utag.loader.GV(h)) {
                    g.push(i);
                  }
                }
                d[e] = g
              }
            } else d[e] = f;
          }
          h = new Array();
          for (g in utag.loader.GV(d)) {
            if (utag.ut.typeOf(d[g]) == "array") {
              for (c = 0; c < d[g].length; c++) {
                d[g][c] = encodeURIComponent(d[g][c])
              }
              h.push(g + ":~" + d[g].join("|"))
            } else h.push((g + ":").replace(/[\,\$\;\?]/g,"") + encodeURIComponent(d[g]))
          }
          if (h.length == 0) {
            h.push("");
            x = ""
          }
          v = (h.join("$"));
        }
        document.cookie = a + "=" + v + ";path=/;domain=" + utag.cfg.domain + ";expires=" + x + (utag.cfg.secure_cookie?";secure":"");
        return 1
      },
      LOAD: function(a, b, c, d) {
        //utag.DB('utag.loader.LOAD:' + a);
        if(!utag.loader.cfg){
           return
        }
	if(this.ol==0){
          if(utag.loader.cfg[a].block && utag.loader.cfg[a].cbf){
            this.f[a] = 1;
	    delete utag.loader.bq[a];
          }
	  for(b in utag.loader.GV(utag.loader.bq)){
            if(utag.loader.cfg[a].load==4 && utag.loader.cfg[a].wait==0){
              utag.loader.bk[a]=1;
              utag.DB("blocked: "+ a);
            }
	    utag.DB("blocking: " + b);
	    return;
	  }
	  utag.loader.INIT();
	  return;
	}
        utag.DB('utag.loader.LOAD:' + a);

        if (this.f[a] == 0) {
          this.f[a] = 1;
      	
	  if(utag.cfg.noview!=true){
	    if(utag.loader.cfg[a].send){
              utag.DB("SENDING: "+a);
              try{
                if (utag.loader.sendq.pending > 0 && utag.loader.sendq[a]) {
                  utag.DB("utag.loader.LOAD:sendq: "+a);
                  while( d = utag.loader.sendq[a].shift() ) {
                    utag.DB(d);
                    utag.sender[a].send(d.event, utag.handler.C(d.data));
                    utag.loader.sendq.pending--;
                  }
                } else {
                  utag.sender[a].send('view',utag.handler.C(utag.data));
                }
		utag.rpt['s_' + a] = 0;
	      } catch (e) {
                utag.DB(e);
	        utag.rpt['s_' + a] = 1;
	      }
	    }
	  }
	  if(utag.loader.rf==0)return;
          for (b in utag.loader.GV(this.f)) {
            if (this.f[b] == 0 || this.f[b] == 2) return
          }
	  utag.loader.END();
        }
      },
      EV: function(a, b, c, d) {
        if (b == "ready") {
          if(!utag.data){
            try {
              utag.cl = {'_all_': 1};
              utag.loader.initdata();    
              utag.loader.RD(utag.data);
            }catch(e){ utag.DB(e) };
          }
          if ( (document.attachEvent || utag.cfg.dom_complete) ? document.readyState === "complete" : document.readyState !== "loading" ) setTimeout(c, 1);
          else {
            utag.loader.ready_q.push(c);
            var RH;

            if(utag.loader.ready_q.length<=1){
              if (document.addEventListener) {
                RH = function() {
                  document.removeEventListener("DOMContentLoaded", RH, false);
                  utag.loader.run_ready_q()
                };
                if(!utag.cfg.dom_complete)document.addEventListener("DOMContentLoaded", RH, false);
                window.addEventListener("load", utag.loader.run_ready_q, false);
              } else if (document.attachEvent) {
                RH = function() {
                  if (document.readyState === "complete") {
                    document.detachEvent("onreadystatechange", RH);
                    utag.loader.run_ready_q()
                  }
                };
                document.attachEvent("onreadystatechange", RH);
                window.attachEvent("onload", utag.loader.run_ready_q);
              }
            }
          }
        } else {
          if (a.addEventListener) {
            a.addEventListener(b, c, false)
          } else if (a.attachEvent) {
            a.attachEvent(((d == 1) ? "" : "on") + b, c)
          }
        }
      },
      END: function(b, c, d, e, v, w){
        if(this.ended){return};
        this.ended=1;
	utag.DB("loader.END");
        b = utag.data;
        // add the default values for future utag.link/view calls
	if(utag.handler.base && utag.handler.base!='*'){
          e = utag.handler.base.split(",");
          for (d = 0; d < e.length; d++) {
            if (typeof b[e[d]] != "undefined") utag.handler.df[e[d]] = b[e[d]]
          }
        }else if (utag.handler.base=='*'){
           utag.ut.merge(utag.handler.df,b,1);
        }

        utag.rpt['r_0']="t";
	for(var r in utag.loader.GV(utag.cond)){
          utag.rpt['r_'+r]=(utag.cond[r])?"t":"f";
        }

        utag.rpt.ts['s'] = new Date();
	

        v = utag.cfg.path;
        // both .tiqcdn.com and .tiqcdn.cn supported
        w = v.indexOf(".tiqcdn.");
        if(w>0 && b["cp.utag_main__ss"]==1 && !utag.cfg.no_session_count)utag.ut.loader({src:v.substring(0,v.indexOf("/ut"+"ag/")+6)+"tiqapp/ut"+"ag.v.js?a="+utag.cfg.utid+(utag.cfg.nocookie?"&nocookie=1":"&cb="+(new Date).getTime()),id:"tiqapp"})
        
        if(utag.cfg.noview!=true)utag.handler.RE('view',b,"end");
	utag.handler.INIT();
      }
    },
    DB: function(a, b) {
      // return right away if we've already checked the cookie
      if(utag.cfg.utagdb===false){
        return;
      }else if(typeof utag.cfg.utagdb=="undefined"){
        b = document.cookie+'';
        utag.cfg.utagdb=((b.indexOf('utagdb=true') >= 0)?true:false);
      }
      if(utag.cfg.utagdb===true){
        var t;
        if(utag.ut.typeOf(a) == "object"){
          t=utag.handler.C(a)
        }else{
          t=a
        }
        utag.db_log.push(t);
        try{if(!utag.cfg.noconsole)console.log(t)}catch(e){}
      }
    },
    RP: function(a, b, c) {
      if (typeof a != 'undefined' && typeof a.src != 'undefined' && a.src != '') {
        b = [];
        for (c in utag.loader.GV(a)) {
          if (c != 'src') b.push(c + '=' + escape(a[c]))
        }
        this.dbi.push((new Image()).src = a.src + '?utv=' + utag.cfg.v + '&utid=' + utag.cfg.utid + '&' + (b.join('&')))
      }
    },
    view: function(a,c,d) {
      return this.track({event:'view', data:a || {}, cfg:{cb:c,uids:d}})
    },
    link: function(a,c,d) {
      return this.track({event:'link', data:a || {}, cfg:{cb:c,uids:d}})
    },
    track: function(a,b,c,d,e) {
      a = a || {};
      if (typeof a == "string") {
        a = { event: a, data: b || {}, cfg:{cb:c,uids:d} } 
      }

      // track called directly also supports a 3rd option where first param (a) is data layer and second param (b) is cb function
      for(e in utag.loader.GV(utag.o)){
        utag.o[e].handler.trigger(a.event || "view", a.data || a, a.cfg || {cb:b,uids:c})
      }
      a.cfg = a.cfg || {cb:b};
      if(typeof a.cfg.cb == "function")a.cfg.cb();

      return true
    },
    handler: {
      base: "page_site,page_language,page_title,page_content_group,page_content_sub_group,page_type,page_sub_type",
      df: {},
      o: {},
      send: {},
      iflag: 0,
      INIT: function(a, b, c) {
        utag.DB('utag.handler.INIT');
        if(utag.initcatch){
          utag.initcatch=0;
          return
        }
        this.iflag = 1;
        a = utag.loader.q.length;
        if (a > 0) {
          utag.DB("Loader queue");
          for (b = 0; b < a; b++) {
            c = utag.loader.q[b];
            utag.handler.trigger(c.a, c.b, c.c)
          }
        }
        //##UTABSOLUTELAST##
      },
      test: function() {
        return 1
      },
      // reset and run load rules
      LR: function(b){
        utag.DB("Load Rules");
        for(var d in utag.loader.GV(utag.cond)){
          utag.cond[d]=false;
        }
        utag.DB(b);
        utag.loader.loadrules(b);
        utag.DB(utag.cond);
        utag.loader.initcfg();
        // use the OPTOUTMULTI cookie value to override load rules
        utag.loader.OU();
	for(var r in utag.loader.GV(utag.cond)){
          utag.rpt['r_'+r]=(utag.cond[r])?"t":"f";
        }
      },
      // The third param "c" is a string that defines the location i.e. "blr" == before load rules
      RE:function(a,b,c,d,e,f,g){
        if(c!="alr" && !this.cfg_extend){
          return 0; 
        }
        utag.DB("RE: "+c);
        if(c=="alr")utag.DB("All Tags EXTENSIONS");
        utag.DB(b);
        if(typeof this.extend != "undefined"){
          g=0;
          for (d = 0; d < this.extend.length; d++) {
            try {
              /* Extension Attributes */
              e=0;
              if(typeof this.cfg_extend!="undefined"){
                f=this.cfg_extend[d];
                if(typeof f.count == "undefined")f.count=0;
                if(f[a]==0 || (f.once==1 && f.count>0) || f[c]==0){
                  e=1
                }else{
                  if(f[c]==1){g=1};
                  f.count++
                }
              }
              if(e!=1){
                this.extend[d](a, b);
                utag.rpt['ex_' + d] = 0
              }
            } catch (er) {
              utag.DB(er);
              utag.rpt['ex_' + d] = 1;
	      utag.ut.error({e:er.message,s:utag.cfg.path+'utag.js',l:d,t:'ge'});
            }
          }
          utag.DB(b);
          return g;
        }
      },
      trigger: function(a, b, c, d, e, f) {
        utag.DB('trigger:'+a+(c && c.uids?":"+c.uids.join(","):""));
        b = b || {};
        utag.DB(b);

        if (!this.iflag) {
          utag.DB("trigger:called before tags loaded");
          for (d in utag.loader.f) {
            if (!(utag.loader.f[d] === 1)) utag.DB('Tag '+d+' did not LOAD')
          }
          utag.loader.q.push({
            a: a,
            b: utag.handler.C(b),
            c: c
          });
          return;
        }

        // update all values for AJAX pages
        utag.ut.merge(b,this.df,0);
        utag.loader.RD( b, a );

        // clearing noview flag after the RD function call
        utag.cfg.noview = false;

        function sendTag(a, b, d){
          try {
            if(typeof utag.sender[d]!="undefined"){
              utag.DB("SENDING: "+d);
              utag.sender[d].send(a, utag.handler.C(b));
	      utag.rpt['s_' + d] = 0;
            }else if (utag.loader.cfg[d].load!=2){
              // utag.link calls can load in new tags
              utag.loader.sendq[d] = utag.loader.sendq[d] || [];
              utag.loader.sendq[d].push({"event":a, "data":utag.handler.C(b)});
              utag.loader.sendq.pending++;
              utag.loader.AS({id : d, load : 1}); 
            }
          }catch (e) {
              utag.data.sendErr = e;    // Digi-Key customization.  Capture error to send error tag.
              utag.DB(e);
          }
        }
        
        // utag.track( { event : "view", data: {myvar : "myval" }, cfg: { uids : [1,2,10] } } );
        if(c && c.uids){
          this.RE(a,b,"alr");
          for(f=0;f<c.uids.length;f++){
            d=c.uids[f];
            // bypass load rules, but still check the OPTOUTMULTI cookie before firing
            if (!utag.loader.OU(utag.loader.cfg[d].tid)) {
              sendTag(a, b, d);
            }
          }
        }else if(utag.cfg.load_rules_ajax){
          this.RE(a,b,"blr");
          // process load rules based on current data layer
          this.LR(b);
          this.RE(a,b,"alr");
          
          for(f = 0; f < utag.loader.cfgsort.length; f++){
            d = utag.loader.cfgsort[f];
            if(utag.loader.cfg[d].load && utag.loader.cfg[d].send){
              sendTag(a, b, d);
            }
          }
        }else{
          // legacy behavior
          this.RE(a,b,"alr");
          for (d in utag.loader.GV(utag.sender)) {
            sendTag(a, b, d);
          }
        }
        this.RE(a,b,"end");
      },
      // "sort-of" copy
      C: function(a, b, c) {
        b = {};
        for (c in utag.loader.GV(a)) {
          if(utag.ut.typeOf(a[c]) == "array"){
            b[c] = a[c].slice(0)
          }else{
            // objects are still references to the original (not copies)
            b[c] = a[c]
          }
        }
        return b
      }
    },
    ut:{
      pad: function(a,b,c,d){
        a=""+((a-0).toString(16));d='';if(b>a.length){for(c=0;c<(b-a.length);c++){d+='0'}}return ""+d+a
      },
      vi: function(t,a,b){
        if(!utag.v_id){
          a=this.pad(t,12);b=""+Math.random();a+=this.pad(b.substring(2,b.length),16);try{a+=this.pad((navigator.plugins.length?navigator.plugins.length:0),2);a+=this.pad(navigator.userAgent.length,3);a+=this.pad(document.URL.length,4);a+=this.pad(navigator.appVersion.length,3);a+=this.pad(screen.width+screen.height+parseInt((screen.colorDepth)?screen.colorDepth:screen.pixelDepth),5)}catch(e){utag.DB(e);a+="12345"};utag.v_id=a;
        }
        return utag.v_id
      },
      hasOwn: function(o, a) {
        return o != null && Object.prototype.hasOwnProperty.call(o, a)
      },
      isEmptyObject: function(o, a) {
	for (a in o) {
          if (utag.ut.hasOwn(o,a))return false
        }
        return true
      },
      isEmpty: function(o) {
        var t = utag.ut.typeOf(o);
        if ( t == "number" ){
          return isNaN(o)
        }else if ( t == "boolean" ){
          return false
        }else if ( t == "string" ){
          return o.length === 0
        }else return utag.ut.isEmptyObject(o)
      },
      typeOf: function(e) {
        return ({}).toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase();
      },
      flatten: function(o){
        // stop when arriving at a string, array, boolean, number (float or integer)
        var a = {}; 
        function r(c, p) {
          if (Object(c) !== c || utag.ut.typeOf(c) == "array") {
            a[p] = c;
          } else {
            if(utag.ut.isEmptyObject(c)){
              //a[p] = {};
            }else{
              for (var d in c) {
                r(c[d], p ? p+"."+d : d);
              }
            }
          }
        }
        r(o, "");

        return a;
      },
      merge: function(a, b, c, d) {
        if(c){
          for(d in utag.loader.GV(b)){
            a[d] = b[d]
          }
        }else{
          for(d in utag.loader.GV(b)){
            if(typeof a[d]=="undefined")a[d] = b[d]
          }
        }
      },
      decode: function(a, b) {
        b = "";
        try{b = decodeURIComponent(a)}catch(e){utag.DB(e)};
        if (b == ""){b = unescape(a)};
        return b
      },
      encode: function(a, b) {
        b = "";
        try{b = encodeURIComponent(a)}catch(e){utag.DB(e)};
        if (b == ""){b = escape(a)};
        return b
      },
      error: function(a, b, c){
        if(typeof utag_err!="undefined"){
          utag_err.push(a)
        }
      },
      loader: function(o, a, b, c, l, m) {
        utag.DB(o);
        a=document;
        if (o.type=="iframe") {
          // if an iframe of same id already exists, remove and add again (to keep DOM clean and avoid impacting browser history)
          m = a.getElementById( o.id );
          if ( m && m.tagName == "IFRAME" ) {
            m.parentNode.removeChild(m);
          }
          b = a.createElement("iframe");
          o.attrs = o.attrs || {};
          utag.ut.merge( o.attrs, { "height" : "1", "width" : "1", "style" : "display:none" } , 0 );
        }else if (o.type=="img"){
          utag.DB("Attach img: "+o.src);
          b = new Image();
        }else{
          b = a.createElement("script");b.language="javascript";b.type="text/javascript";b.async=1;b.charset="utf-8";
        }
        if(o.id){b.id=o.id};
        for( l in utag.loader.GV(o.attrs) ){
          b.setAttribute( l, o.attrs[l] )
        }
        b.setAttribute("src", o.src);
        if (typeof o.cb=="function") {
          if(b.addEventListener) {
            b.addEventListener("load",function(){o.cb()},false);
          }else {
            // old IE support
            b.onreadystatechange=function(){if(this.readyState=='complete'||this.readyState=='loaded'){this.onreadystatechange=null;o.cb()}};
          }
        }
        if(typeof o.error=="function"){
          utag.loader.EV(b, "error", o.error);
        }
        if ( o.type != "img" ) {
          l = o.loc || "head";
          c = a.getElementsByTagName(l)[0];
          if (c) {
            utag.DB("Attach to "+l+": "+o.src);
            if (l == "script") {
              c.parentNode.insertBefore(b, c);
            } else {
              c.appendChild(b)
            }
          }
        }
      }
    }
  };
  utag.o['digikey.main']=utag;
  utag.cfg = {
    template : "ut4.49.",
    // Enable load rules ajax feature by default
    load_rules_ajax: true,
    load_rules_at_wait: false,
    lowerqp: false,
    noconsole: false,
    //noview: ##UTNOVIEW##,
    session_timeout: 1800000,
    readywait: 1,
    noload: 0,
    domain: utag.loader.lh(),
    datasource: "##UTDATASOURCE##".replace("##"+"UTDATASOURCE##",""),
    secure_cookie: ("##UTSECURECOOKIE##".replace("##"+"UTSECURECOOKIE##","")==="true")?true:false,
    path: "//tags.tiqcdn.com/utag/digikey/main/prod/",
    utid: "digikey/main/202407311733",
    ignoreSessionStorage: false,
    ignoreLocalStorage: false
  };
  utag.cfg.v = utag.cfg.template + "202407311733";
  try{var _gaq=_gaq || [];var pageTracker=pageTracker || {_trackEvent:function(c,d,e,f,g){g={ga_eventCat:c,ga_eventAction:d,ga_eventLabel:e,ga_eventValue:f};utag.link(g,null,[214]);},_trackPageview:function(c){_gaq.push(['_trackPageview',c?c:null]);}}}catch(e){};try{var _gaq=_gaq || [];var pageTracker=pageTracker || {_trackEvent:function(c,d,e,f,g){g={ga_eventCat:c,ga_eventAction:d,ga_eventLabel:e,ga_eventValue:f};utag.link(g,null,[466]);},_trackPageview:function(c){_gaq.push(['_trackPageview',c?c:null]);}}}catch(e){};utag.cond={101:0,131:0,132:0,141:0,142:0,149:0,151:0,156:0,158:0,91:0};
utag.pagevars=function(ud){ud = ud || utag.data;try{ud['js_page.window.mobile']=window.mobile}catch(e){utag.DB(e)};try{ud['js_page.document.documentElement.lang']=document.documentElement.lang}catch(e){utag.DB(e)};try{ud['js_page.window.cart2']=window.cart2}catch(e){utag.DB(e)};try{ud['js_page.myApp.page.ccpa']=myApp.page.ccpa}catch(e){utag.DB(e)};try{ud['js_page.myApp.page.do_not_track']=myApp.page.do_not_track}catch(e){utag.DB(e)};};
utag.loader.initdata = function() {   try {       utag.data = (typeof utag_data != 'undefined') ? utag_data : {};       utag.udoname='utag_data';    } catch (e) {       utag.data = {};       utag.DB('idf:'+e);   }};utag.loader.loadrules = function(_pd,_pc) {var d = _pd || utag.data; var c = _pc || utag.cond;for (var l in utag.loader.GV(c)) {switch(l){
case '101':try{c[101]|=(/digikey\.com$/.test(d['dom.domain']))}catch(e){utag.DB(e)}; break;
case '131':try{c[131]|=(typeof d['google_tracking_id_staging']!='undefined')}catch(e){utag.DB(e)}; break;
case '132':try{c[132]|=(typeof d['google_tracking_id_sandbox']!='undefined')}catch(e){utag.DB(e)}; break;
case '141':try{c[141]|=(typeof d['datadog_view']=='undefined')||(d['datadog_view'].toString().toLowerCase()!='true'.toLowerCase())}catch(e){utag.DB(e)}; break;
case '142':try{c[142]|=(d['js_page.myApp.page.ccpa']!='yes')}catch(e){utag.DB(e)}; break;
case '149':try{c[149]|=(d['dom.domain'].toString().indexOf('mylists')>-1)}catch(e){utag.DB(e)}; break;
case '151':try{c[151]|=(d['dom.domain'].toString().toLowerCase().indexOf('mylists.digikey.us'.toLowerCase())<0&&d['dom.domain'].toString().toLowerCase().indexOf('myliststest.digikey.us'.toLowerCase())<0)}catch(e){utag.DB(e)}; break;
case '156':try{c[156]|=(!/^\/classic\/tools\//i.test(d['dom.pathname']))}catch(e){utag.DB(e)}; break;
case '158':try{c[158]|=(typeof d['cp.OptanonConsent']!='undefined'&&d['cp.OptanonConsent'].toString().indexOf('C0002:1')>-1)||(typeof d['cp.OptanonConsent']=='undefined'&&d['dom.domain'].toString().indexOf('digikey.com')>-1)}catch(e){utag.DB(e)}; break;
case '91':try{c[91]|=(d['dom.domain'].toString().toLowerCase().indexOf('digikeytest'.toLowerCase())<0&&d['dom.domain'].toString().toLowerCase().indexOf('digikeydev'.toLowerCase())<0)}catch(e){utag.DB(e)}; break;}}};utag.pre=function() {    utag.loader.initdata();utag.pagevars();    try{utag.loader.RD(utag.data)}catch(e){utag.DB(e)};    utag.loader.loadrules();    };utag.loader.GET=function(){utag.cl={'_all_':1};utag.pre();
  utag.handler.extend=[function(a,b){ try{utag.runonce = utag.runonce || {};utag.runonce.ext = utag.runonce.ext || {};if(typeof utag.runonce.ext[398]=='undefined'){utag.runonce.ext[398]=1;if(1){
// 398 - Standard Methods - Run for Every Page Load
// Manage new tagging for testing
utag.data.domain = location.hostname;
// ensure pre_order_number is set
if (a === 'view') {
    if ((typeof b['order_weborder_number'] != 'undefined') && (typeof b['pre_order_id'] === undefined)) {
        b['pre_order_id'] = b['order_weborder_number']
    }
}

//remove order_id from utag
if (typeof utag_data['order_id'] !== 'undefined') {
    utag_data['order_id'] = ""
    utag.data['order_id'] = ""
}

utag_data['one_trust_country'] = 'yes'
ccpa !== null ? b['ccpa_do_not_track'] = utag_data['ccpa_do_not_track'] = 'yes' : b['ccpa_do_not_track'] = utag_data['ccpa_do_not_track'] = 'no'

utag.dklink = function (a, href) {
    try {
        if (window.utag_cfg_ovrd.noview === false) {
            utag.dkStdVars(a, 'link', href)
            if (typeof a['event_category'] == 'undefined') {
                a['event_category'] = 'Coded Event'
            }
            a['not_a_pageview'] = '1'
            a["ExtRun"] = utag.dkTrk("357.2")
            if(window.utag_dkOTPerformance()) utag.link(a)
            var data_test_msgs = ['Pricing Table Failed to Load', 'Price and Packaging Display Failed to Load']
            if( a['page_type'] === 'PS' && a['page_sub_type'] === 'PD' && data_test_msgs.includes(a['ref_page_event'])) {
                var dataLayer = window.dataLayer || []
                dataLayer.push({
                    'event': 'part_search_pdp_click',
                    'click_text' : a['ref_page_event']
                })
            } 
            
            utag.data['ExtRun'] = ""
            utag.data['ExtDln'] = ""
        }
    } catch (e) {
        utag.DB(e);
    }
}


utag.dkErrorTag = function (data, errorId, errorData) {
    var tmpData = JSON.parse(JSON.stringify(data));
    tmpData.event_category = 'Error Info';
    tmpData.ref_page_event = errorId;
    tmpData.event_label = errorData;
    tmpData["ExtRun"] = utag.dkTrk("357.6");
    utag.dklink(tmpData);
}

if (typeof utag.data['ExtRun'] == 'undefined') {
    utag.data["ExtRun"] = "";
}

utag.dkTrk = function (a) {
    if (!(utag.data['ExtRun'].indexOf(a) > 0)) {
        if (typeof utag.data['ExtDln'] == 'undefined') {
            if (utag.data['ExtRun'].length > 0) {
                utag.data["ExtDln"] = "||";
            } else {
                utag.data["ExtDln"] = "";
            }
        }
        utag.data["ExtRun"] += (utag.data["ExtDln"] + a);
        utag.data["ExtDln"] = "|";
    }
    return utag.data['ExtRun'];
}

utag.cfg.domainForCookies = location.hostname.match(/\.digikey\..*/)[0];

utag.displayDigiKeyTags = function (a, c) {
    var tsttag = {};
    for (var i in c) {
        if (!i.match(/^cp.|^meta.|^tealium.|^ut.|^dom.|^js_page.|^qp./i)) {
            tsttag[i] = c[i];
        }
    }
    utag.DB(a);
    utag.DB(tsttag);
}

utag.readUTMCookie = function (b) {
    if (typeof utag.data.do_not_process_cookies === 'undefined' || utag.data.do_not_process_cookies !== true) {
        var justCookieValues = []; var decodedStr = "";
        var keyValuePairs = [], aKeyValuePair = [];
        if (typeof utag.data['cp.utm_data_x'] != 'undefined' && utag.data['cp.utm_data_x'] !== "") {
            decodedStr = utag.ut.decode(utag.data['cp.utm_data_x']);
            keyValuePairs = decodedStr.split(',');
            for (n = 0; n < keyValuePairs.length; n++) {
                aKeyValuePair = keyValuePairs[n].split("=");
                if ((!utag.data.hasOwnProperty(aKeyValuePair[0]) && !b.hasOwnProperty(aKeyValuePair[0])) || utag.data[aKeyValuePair[0]] === "") {
                    if (typeof aKeyValuePair[1] !== 'undefined' ) {
                        if (aKeyValuePair[1].indexOf('%') < 0) {
                            try {
                                utag.data[aKeyValuePair[0]] = b[aKeyValuePair[0]] = justCookieValues[aKeyValuePair[0]] = decodeURIComponent(aKeyValuePair[1]).replace(/@@/g, ',');
                            } catch (e) { }
                        } else {
                            utag.data[aKeyValuePair[0]] = b[aKeyValuePair[0]] = justCookieValues[aKeyValuePair[0]] = aKeyValuePair[1];
                        }
                    }
                } else if (aKeyValuePair[0].startsWith('ref_') || aKeyValuePair[0].startsWith('html_') || aKeyValuePair[0] === 'event_state') {
                    utag.data[aKeyValuePair[0]] = b[aKeyValuePair[0]] = justCookieValues[aKeyValuePair[0]] = aKeyValuePair[1];
                }
            }
            utag.dkTrk('398.2');
            document.cookie = "utm_data_x=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;domain=" + utag.cfg.domainForCookies + ";";
            b['cp.utm_data_x'] = "";
            utag.displayDigiKeyTags('New Cookie Data', justCookieValues);
        }
    }
}

if (a === 'view') {
    utag.readUTMCookie(b);
}

//Updated Aug1621
utag.SubmitOrderCookieImpl = function () {
    var now = new Date();
    var time = now.getTime();
    time += 1000 * 3600 * 24;
    now.setTime(time);
    utag.data.ref_page_event = "Submit Order";//Added on Aug2221
    document.cookie = "utm_data_so=" + utag.data['pre_order_id'] + ";path=/;expires=" + now.toUTCString() + ";domain=" + utag.cfg.domainForCookies + ";";//Updated on Aug1921
    utag.DB('Write utm_data_so');
    utag.newCookie("Submit Order");// Added Aug2221
}

if (window._DATADOG_SYNTHETICS_BROWSER) b.datadog_view = "true";

// Marketplace, FBD and PCB Ids
utag.marketPlaceIds = function(name) {
    var marketPlaceIds = ['873','874','1179','1202','1541','1567','1600','2140','2144','2156','2173','2183','2197','2204','2205','2206','2207','2210','2211','2212','2215','2216','2217','2218','2219','2227','2228','2229','2230','2234','2235','2237','2239','2240','2247','2250','2255','2256','2257','2263','2264','2266','2268','2269','2270','2271','2272','2273','2275','2276','2279','2280','2281','2282','2283','2286','2288','2292','2296','2297','2298','2299','2307','2308','2319','2324','2325','2326','2327','2328','2329','2334','2335','2337','2339','2340','2342','2343','2345','2346','2349','2350','2351','2352','2353','2354','2355','2356','2359','2360','2361','2362','2363','2367','2368','2369','2370','2371','2372','2373','2374','2375','2376','2377','2379','2380','2381','2382','2383','2384','2385','2386','2387','2388','2389','2390','2391','2392','2395','2396','2397','2398','2399','2401','2402','2403','2404','2405','2406','2407','2408','2409','2410','2411','2412','2413','2414','2415','2416','2417','2418','2419','2420','2421','2422','2423','2424','2425','2426','2427','2428','2429','2430','2431','2432','2433','2435','2436','2437','2438','2439','2440','2441','2442','2443','2444','2451','2454','2455','2456','2457','2458','2459','2460','2461','2462','2463','2464','2465','2466','2467','2468','2469','2470','2471','2472','2473','2474','2475','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2487','2488','2489','2490','2491','2492','2493','2494','2495','2497','2498','2499','2500','2501','2502','2503','2504','2505','2507','2510','2511','2512','2513','2514','2515','2516','2517','2518','2519','2520','2523','2524','2525','2526','2527','2528','2529','2530','2531','2532','2533','2534','2537','2538','2539','2540','2541','2542','2543','2544','2545','2546','2547','2550','2552','2553','2554','2555','2556','2557','2558','2559','2560','2561','2562','2563','2564','2565','2566','2567','2568','2569','2570','2571','2572','2573','2576','2577','2578','2579','2580','2581','2583','2584','2587','2588','2589','2590','2591','2592','2593','2594','2595','2596','2597','2598','2600','2601','2602','2604','2605','2606','2607','2608','2609','2611','2612','2613','2614','2615','2616','2617','2620','2621','2622','2623','2624','2625','2626','2627','2628','2629','2630','2631','2632','2633','2635','2636','2637','2638','2641','2642','2643','2644','2645','2647','2649','2650','2653','2654','2655','2656','2657','2658','2659','2660','2661','2662','2663','2664','2665','2666','2667','2668','2669','2670','2671','2672','2673','2674','2675','2676','2677','2678','2679','2680','2681','2682','2683','2685','2687','2688','2689','2690','2691','2692','2693','2694','2695','2696','2697','2698','2699','2700','2701','2702','2703','2704','2705','2706','2707','2710','2711','2712','2717','2718','2719','2720','2721','2722','2723','2724','2726','2728','2731','2732','2737','2738','2739','2740','2741','2742','2743','2744','2745','2746','2747','2748','2749','2750','2751','2752','2753','2754','2755','2756','2757','2758','2759','2760','2761','2762','2765','2766','2767','2768','2769','2779','2783','2788','2789','2791','2792','2793','2795','2796','2797','2798','2799','2800','2801','2803','2804','2806','2807','2808','2809','2810','2811','2812','2813','2814','2815','2816','2817','2819','2821','2823','2824','2825','2826','2829','2830','2832','2833','2834','2835','2837','2838','2839','2840','2841','2842','2843','2844','2845','2846','2847','2848','2849','2852','2853','2854','2855','2856','2857','2858','2859','2860','2861','2862','2863','2864','2865','2866','2867','2868','2869','2872','2874','2875','2876','2877','2878','2880','2881','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2893','2894','2895','2896','2899','2900','2902','2903','2904','2905','2906','2907','2909','2910','2912','2913','2914','2915','2916','2917','2918','2919','2920','2921','2922','2923','2924','2925','2926','2927','2929','2930','2933','2934','2935','2936','2937','2939','2940','2941','2942','2943','2948','2949','2950','2951','2953','2954','2955','2956','2957','2960','2961','2962','2963','2964','2965','2966','2968','2970','2971','2974','2975','2976','2978','2979','2980','2981','2982','2983','2984','2986','2989','2990','2991','2992','2993','2996','2997','2998','2999','3000','3001','3002','3003','3004','3005','3006','3007','3009','3010','3011','3012','3013','3014','3015','3016','3025','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3038','3039','3040','3041','3042','3043','3044','3045','3048','3049','3050','3051','3054','3055','3056','3057','3058','3059','3060','3061','3062','3063','3064','3065','3066','3067','3068','3069','3070','3071','3073','3075','3076','3077','3078','3080','3081','3082','3083','3084','3085','3086','3087','3088','3089','3090','3091','3092','3093','3094','3095','3096','3097','3098','3099','3101','3102','3103','3104','3105','3106','3107','3108','3109','3110','3111','3112','3113','3114','3115','3116','3117','3118','3119','3122','3123','3124','3125','3126','3127','3129','3130','3131','3132','3134','3135','3139','3144','3145','3146','3149','3151','3154','3160','3161','3162','3163','3165','3166','3167','3168','3169','3170','3171','3172','3173','3174','3177','3178','3179','3187','3188','3189','3193','3194','3195','3198','3199','3200','3201','3202','3203','3204','3205','3206','3208','3209','3210','3211','3212','3214','3215','3216','3217','3218','3221','3224','3225','3228','3229','3230','3231','3232','3233','3234','3235','3236','3237','3238','3239','3240','3241','3242','3243','3244','3245','3246','3249','3251','3252','3253','3254','3256','3258','3259','3260','3261','3262','3264','3265','3267','3268','3269','3270','3271','3273','3274','3275','3276','3277','3278','3279','3280','3283','3284','3286','3288','3289','3290','3291','3292','3293','3295','3296','3297','3298','3303','3304','3305','3307','3308','3309','3310','3311','3313','3314','3315','3316','3317','3318','3319','3322','3323','3325','3326','3328','3329','3330','3331','3332','3333','3334','3335','3336','3337','3338','3339','3340','3341','3342','3343','3344','3345','3346','3347','3348','3349','3350','3351','3352','3353','3354','3355','3356','3357','3358','3359','3360','3361','3362','3363','3364','3369','3370','3371','3372','3373','3375','3376','3377','3378','3379','3380','3381','3382','3389','3390','3391','3392','3393','3395','3396','3398','3399','3400','3401','3402','3403','3404','3405','3406','3407','3408','3409','3410','3411','3412','3413','3414','3415','3419','3420','3421','3422','3423','3424','3425','3426','3427','3428','3429','3430','3431','3432','3433','3434','3435','3436','3437','3438','3439','3440','3441','3445','3446','3447','3448','3449','3450','3451','3452','3453','3456','3458','3459','3460','3461','3462','3463','3464','3465','3466','3467','3468','3469','3470','3471','3472','3474','3475','3478','3481','3482','3483','3484','3485','3486','3487','3488','3489','3490','3491','3492','3493','3494','3495','3497','3498','3499','3500','3501','3504','3505','3506','3507','3510','3512','3513','3514','3516','3517','3518','3519','3520','3521','3522','3523','3524','3525','3527','3528','3529','3530','3531','3532','3533','3538','3539','3540','3541','3542','3543','3544','3545','3546','3547','3548','3549','3550','3551','3552','3553','3554','3555','3556','3557','3558','3559','3561','3562','3563','3564','3567','3568','3571','3572','3574','3583','3584','3585','3586','3587','3588','3589','3590','3591','3592','3593','3594','3595','3597','3598','3599','3600','3601','3602','3603','3604','3605','3606','3607','3608','3609','3610','3611','3612','3613','3615','3616','3617','3618','3620','3621','3622','3623','3624','3625','3626','3627','3630','3631','3633','3634','3635','3636','3638','3639','3640','3642','3643','3644','3645','3646','3647','3648','3650','3651','3653','3654','3655','3656','3657','3659','3660','3661','3662','3663','3664','3665','3666','3668','3670','3671','3672','3674','3675','3676','3677','3678','3679','3680','3681','3682','3684','3685','3686','3687','3688','3689','3690','3691','3692','3693','3694','3695','3696','3697','3698','3700','3701','3702','3703','3704','3705','3707','3708','3709','3710','3711','3712','3713','3714','3715','3716','3717','3719','3721','3722','3724','3727','3728','3729','3730','3731','3732','3733','3734','3735','3736','3737','3738','3739','3740','3741','3743','3744','3745','3747','3748','3749','3750','3751','3752','3753','3754','3755','3756','3759','3760','3762','3764','3765','3767','3768','3769','3770','3771','3773','3774','3776','3777','3778','3779','3780','3783','3784','3785','3786','3787','3788','3789','3790','3793','3794','3795','3796','3797','3798','3799','3800','3801','3802','3803','3804','3805','3806','3807','3808','3809','3810','3811','3813','3814','3815','3816','3817','3818','3819','3820','3821','3822','3823','3825','3826','3827','3828','3829','3830','3831','3832','3833','3834','3835','3836','3837','3838','3839','3840','3841','3842','3843','3844','3845','3846','3847','3848','3849','3850','3851','3852','3853','3854','3856','3857','3858','3859','3860','3861','3862','3863','3864','3865','3866','3868','3870','3871','3872','3873','3875','3878','3879','3880','3881','3882','3883','3884','3885','3886','3892','3893','3894','3895','3896','3897','3898','3899','3900','3902','3903','3904','3905','3906','3907','3908','3909','3910','3911','3912','3913','3914','3915','3916','3919','3922','3923','3925','3926','3927','3928','3930','3931','3933','3934','3937','3938','3939','3940','3941','3942','3943','3945','3946','3947','3948','3950','3951','3952','3953','3954','3955','3956','3957','3958','3959','3960','3962','3966','3967','3968','3969','3973','3974','3975','3976','3977','3978','3979','3981','3982','3983','3984','3985','3986','3987','3988','3990','3991','3992','3993','3996','3999','4000','4001','4002','4003','4006','4007','4009','4010','4011','4013','4014','4015','4016','4017','4018','4019','4020','4023','4024','4025','4026','4027','4028','4030','4031','4035','4036','4037','4038','4039','4040','4046','4047','4049','4050','4051','4052','4053','4054','4055','4056','4057','4058','4059','4060','4062','4063','4064','4065','4066','4067','4068','4069','4070','4071','4072','4073','4074','4075','4077','4080','4081','4082','4083','4086','4087','4088','4089','4092','4093','4094','4096','4097','4098','4099','4100','4101','4102','4103','4104','4105','4109','4110','4111','4112','4113','4114','4115','4116','4117','4118','4119','4120','4121','4123','4124','4125','4126','4127','4128','4129','4131','4132','4133','4136','4137','4138','4139','4140','4142','4143','4146','4147','4149','4150','4151','4152','4153','4154','4155','4156','4157','4159','4160','4161','4162','4163','4164','4165','4166','4167','4169','4170','4172','4173','4174','4175','4176','4177','4178','4179','4181','4182','4183','4184','4185','4186','4187','4188','4190','4195','4196','4198','4200','4201','4202','4205','4206','4207','4208','4209','4210','4212','4213','4214','4215','4216','4219','4220','4221','4223','4224','4225','4226','4227','4228','4229','4230','4231','4232','4233','4234','4235','4236','4237','4238','4240','4242','4246','4247','4248','4249','4250','4252','4254','4255','4257','4258','4259','4260','4261','4262','4263','4264','4266','4267','4268','4269','4271','4273','4274','4275','4276','4277','4278','4279','4280','4281','4282','4284','4287','4288','4291','4292','4293','4298','4299','4300','4303','4304','4309','4310','4311','4312','4313','4314','4315','4318','4319','4320','4321','4322','4323','4326','4327','4328','4329','4330','4332','4333','4335','4336','4337','4338','4339','4342','4343','4344','4345','4346','4348','4349','4352','4358','4359','4360','4361','4362','4365','4366','4367','4368','4371','4372','4376','4377','4384','4385','4388','4394','4395','4396','4397','4398','4399','4402','4405','4406','4407','4408','4409','4410','4413','4415','4418','4419','4420','4421','4422','4425','4426','4428','4429','4430','4431','4432','4433','4434','4435','4436','4437','4438','4442','4444','4445','4447','4448','4449','4450','4451','4452','4453','4454','4456','4460','4465','4466','4467','4468','4469','4470','4471','4472','4473','4474','4475','4476','4477','4479','4480','4481','4482','4483','4484','4485','4486','4487','4488','4489','4490','4491','4492','4493','4494','4495','4496','4497','4498','4499','4500','4502','4505','4507','4509','4510','4511','4513','4514','4521','4522','4523','4524','4525','4529','4532','4533','4534','4537','4540','4541','4542','4543','4545','4548','4549','4550','4551','4552','4553','4554','4556','4557','4560','4561','4562','4564','4565','4566','4567','4568','4569','4572','4575','4576','4577','4578','4579','4580','4581','4589','4594','4596','4600','4602','4603','4604','4605','4608','4609','4610','4611','4612','4613','4615','4617','4619','4620','4621','4623','4624','4625','4626','4629','4631','4632','4634','4635','4637','4638','4639','4642','4644','4645','4648','4649','4650','4651','4652','4653','4655','4656','4658','4661','4662','4663','4666','4667','4669','4674','4675','4676','4677','4678','4680','4681','4682','4683','4685','4686','4687','4690','4691','4692','4693','4694','4696','4697','4698','4699','4700','4701','4702','4704','4705','4706','4707','4708','4709','4711','4712','4715','4716','4717','4723','4724','4725','4726','4727','4728','4729','4730','4731','4732','4733','4736','4737','4739','4740','4741','4742','4743','4744','4745','4746','4747','4748','4749','4750','4751','4752','4753','4757','4758','4759','4760','4765','4771','4772','4773','4774','4775','4776','4777','4778','4779','4780','4781','4782','4788','4789','4791','4792','4793','4794','4795','4796','4807','4808','4811','4812','4814','4815','4822','4830','4831','4832','4835','4838','4839','4844','4845','4846','4847','4848','4851','4852','4853','4854','4859','4860','4861','4863','4866','4869','4871','4873','4877','4880','4881','4882','4884','4885','4886','4888','4889','4890','4891','4892','4893','4894','4895','4896','4899','4906','4907','4908','4909','4910','4911','4912','4913','4914','4915','4916','4917','4918','4922','4923','4924','4925','4926','4927','4928','4932','4933','4936','4938','4939','4940','4943','4944','4945','4946','4949','4950','4951','4952','4953','4954','4955','4956','4959','4960','4961','4962','4964','4965','4966','4967','4969','4970','4971','4976','4987','4990','4993','4996','4997','4998','4999','5000','5006','5009','5010','5014','5017','5020','5022','5026','5027','5028','5029','5031','5034','5038','5039','5040','5041','5044','5046','5047','5052','5055','5056','5057','5060','5066','5067','5068','5070','5072','5076','5077','5078','5079','5080','5081','5084','5085','5086','5087','5094','5095','5096','5097','5098','5099','5102','5103','5109','5112','5113','5114','5116','5117','5119','5124','5125','5130','5133','5137','5138','5140','5142','5143','5145','5146','5148','5151','5153','5154','5155','5156','5157','5158','5159','5163','5164','5165','5166','5167','5170','5175','5179','5184','5189','5190','5191','5194','5195','5196','5197','5198','5199','5200','5201','5202','5204','5205','5206','5208','5209','5210','5211','5212','5213','5215','5216','5217','5219','5220','5222','5224','5225','5226','5229','5231','5232','5234','5235','5236','5237','5238','5240','5244','5247','5248','5251','5258','5263','5266','5268','5270','5271','5276','5284','5285','5289','5290','5291','5292','5293','5296','5299','5300','5301','5303','5304','5305','5306','5307','5308','5309','5310','5313','5318','5319','5320','5321','5322','5323','5324','5325','5326','5329','5330','5331','5332','5333','5334','5335','5336','5337','5342','5343','5344','5345','5348','5349','5352','5354','5361','5364','5365','5372','5373','5375','5376','5382','5383','5384','5386','5388','5389','5391','5401','5402','5403','5409','5411','5413','5414','5417','5418','5419','5420','5421','5422','5423','5424','5426','5431','5432','5435','5437','5438','5439','5440','5441','5442','5443','5449','5451','5453','5458','5459','5460','5461','5462','5465','5466','5467','5468','5469','5471','5472','5473','5476','5477','5478','5479','5481','5482','5487','5488','5489','5490','5492','5496','5498','5499','5500','5501','5502','5506','5507','5508','5509','5510','5512','5514','5515','5516','5517','5518','5520','5521','5523','5524','5527','5529','5531','5532','5533','5534','5535','5536','5537','5538','5539','5541','5542','5543','5549','5550','5551','5553','5554','5558','5559','5560','5561','5562','5563','5564','5565','5566','5567','5568','5569','5570','5571','5572','5573','5574','5576','5577','5578','5579','5580','5581','5582','5583','5584','5585','5586','5587','5588','5589','5590','5591','5592','5593','5596','5597','5598','5599','5600','5601','5602','5603','5605','5606','5607','5608','5609','5610','5611','5612','5615','5617','5618','5619','5620','5621','5622','5623','5624','5626','5628','5631','5632','5633','5635','5636','5637','5638','5639','5640','5641','5642','5643','5646','5649','5652','5653','5654','5655','5658','5659','5660','5661','5662','5663','5664','5665','5670','5671','5672','5675','5676','5677','5678','5679','5681','5682','5683','5684','5685','5686','5687','5688','5689','5692','5693','5694','5695','5698','5700','5701','5704','5705','5708','5709','5710','5711','5712','5713','5714','5715','5716','5717','5720','5721','5722','5723','5724','5725','5726','5727','5728','5731','5732','5733','5734','5735','5736','5738','5739','5740','5741','5742','5743','5744','5745','5746','5747','5748','5749','5750']
    var fbdIds = ['2603','2831','2873','2908','2977','2985','3008','3026','3072','3128','3136','3137','3138','3140','3141','3142','3143','3147','3148','3152','3153','3155','3156','3175','3176','3184','3185','3186','3190','3191','3192','3196','3207','3219','3222','3223','3226','3248','3263','3281','3282','3287','3294','3367','3368','3374','3383','3384','3397','3444','3457','3476','3479','3480','3496','3508','3509','3515','3526','3560','3565','3566','3573','3614','3619','3637','3641','3649','3652','3658','3673','3699','3718','3723','3725','3761','3763','3772','3791','3792','3824','3855','3867','3869','3874','3876','3877','3890','3891','3917','3924','3929','3932','3935','3944','3949','3961','3970','3971','3972','3994','3995','3997','3998','4004','4005','4022','4029','4032','4033','4034','4041','4042','4043','4044','4045','4048','4061','4076','4084','4085','4090','4091','4095','4122','4130','4141','4148','4158','4168','4171','4180','4191','4192','4193','4194','4203','4204','4211','4217','4218','4222','4241','4251','4253','4272','4283','4285','4286','4289','4290','4294','4295','4301','4302','4307','4308','4324','4325','4347','4350','4351','4355','4356','4357','4363','4364','4369','4373','4374','4375','4378','4382','4383','4386','4387','4391','4392','4400','4401','4403','4404','4411','4412','4414','4416','4417','4427','4441','4446','4455','4457','4458','4461','4462','4463','4464','4478','4501','4503','4504','4506','4508','4512','4515','4516','4517','4518','4519','4520','4526','4527','4528','4530','4531','4538','4539','4544','4547','4555','4558','4563','4570','4571','4573','4574','4583','4584','4585','4586','4591','4592','4593','4595','4597','4598','4599','4601','4606','4607','4622','4627','4630','4633','4636','4641','4646','4647','4657','4659','4660','4664','4665','4668','4671','4679','4688','4689','4695','4710','4713','4714','4721','4722','4734','4735','4738','4754','4755','4756','4761','4762','4763','4764','4766','4767','4768','4769','4770','4784','4785','4786','4787','4790','4797','4798','4799','4800','4801','4802','4803','4804','4805','4813','4816','4817','4818','4819','4820','4825','4826','4827','4828','4829','4833','4834','4840','4841','4842','4843','4857','4858','4865','4867','4868','4872','4874','4875','4887','4900','4901','4902','4904','4921','4929','4930','4931','4934','4947','4948','4958','4963','4972','4973','4974','4975','4977','4978','4979','4980','4981','4982','4983','4984','4985','4986','4988','4989','5001','5002','5003','5004','5005','5007','5008','5011','5012','5013','5015','5016','5018','5019','5023','5024','5025','5032','5033','5035','5036','5058','5059','5063','5064','5065','5069','5074','5075','5082','5083','5090','5091','5092','5093','5100','5101','5104','5105','5106','5107','5108','5110','5111','5118','5120','5121','5122','5123','5126','5127','5131','5132','5134','5135','5139','5141','5144','5147','5149','5150','5160','5161','5162','5171','5172','5173','5174','5176','5177','5178','5180','5181','5182','5183','5185','5186','5187','5188','5192','5193','5203','5214','5221','5227','5228','5230','5233','5239','5242','5243','5245','5246','5249','5250','5254','5255','5257','5259','5261','5262','5267','5269','5272','5273','5275','5277','5278','5279','5280','5281','5282','5283','5286','5287','5288','5295','5302','5316','5317','5353','5355','5356','5357','5359','5360','5363','5366','5367','5370','5371','5374','5377','5380','5381','5387','5390','5392','5395','5396','5397','5398','5399','5400','5404','5405','5406','5410','5412','5415','5416','5425','5427','5428','5429','5430','5446','5447','5448','5450','5454','5455','5456','5463','5464','5475','5480','5483','5485','5486','5511','5513','5519','5525','5526','5530','5540','5544','5613','5718','5719','5729','5737']
    var pcbIds = ['2527','2528','2529','2530','2531','2532','2533','2534','2674','2675','2677','2678','2680','2681','3237']
    var tmpArr = []
    switch(name.toLowerCase()) {
        case "marketplace" : 
            tmpArr = marketPlaceIds.slice();
            break;
        case "fbd" :
            tmpArr = fbdIds.slice();
            break;
        case 'pcb' : 
            tmpArr = pcbIds.slice();
            break;
    }
    return tmpArr
}
}
}} catch(e){ utag.DB(e) }  },
function(a,b){ try{utag.runonce = utag.runonce || {};utag.runonce.ext = utag.runonce.ext || {};if(typeof utag.runonce.ext[551]=='undefined'){utag.runonce.ext[551]=1;if(1){
// 551 - Standard Helper Fuctions
utag.newEventDefaultValues = function (data, linkType, href) {
    if (typeof data.referring_page_event != 'undefined') data.ref_page_event = data.referring_page_event
    data['ref_page_type'] = utag.data['page_type'] || data['ref_page_type']
    data['ref_page_sub_type'] = utag.data['page_sub_type'] || data['ref_page_sub_type']
    data['ref_page_id'] = utag.data['page_id'] || data['ref_page_id']
    try {
        var gdprStr = localStorage.getItem('gdpr_cookie_consent')
        var gdpr = JSON.parse(gdprStr)
        data['ccookie'] = gdpr.acceptedOn
    } catch (e) { utag.DB(e); }

    if ("customer_id" in utag.data === true) data['ref_customer'] = utag.data['customer_id']
    if ("part_id" in utag.data === true) data['ref_part_id'] = utag.data['part_id']
    if ("pn_sku" in utag.data === true) data['ref_pn_sku'] = utag.data['pn_sku']
    if ("supplier_id" in utag.data === true) data['ref_supplier_id'] = utag.data['supplier_id']
    data['ref_page_state'] = utag.data['page_state'] || ""
    data['ref_pers_state'] = utag.data['personalization_state'] || ""
    data['ref_part_search_term'] = utag.data['part_search_term'] || ""
    data['ref_part_search_term_ext'] = utag.data['part_search_term_ext'] || ""
    if (data.page_sub_type === 'PD' && typeof utag.data['category'] === "undefined") {
        data.ref_page_category = utag.data['category']
    }

    if (linkType == 'link') {
        data.page_type = utag.data.page_type
        data.page_sub_type = utag.data.page_sub_type
        data.page_id = utag.data.page_id
        if (typeof href != 'undefined') {
            if (href.indexOf('tel:') === 0) {
                data['ext_host'] = 'Phone Number'
                data['ext_uri'] = ''
            } else if (href.indexOf('mailto:') === 0) {
                data['ext_host'] = 'Send Email'
                data['ext_uri'] = ""
            } else if (href.indexOf('sms:') === 0) {
                data['ext_host'] = 'Send Text Message'
                data['ext_uri'] = ""
            } else {
                data['ext_host'] = href.substring(href.indexOf('//') + 2, href.indexOf('/', 10))
                data['ext_uri'] = href.substr(href.indexOf('/', 10))
            }
        }
    }
    if (typeof data.event_state != 'undefined') {
        data['event_state'] = decodeURIComponent(data['event_state'])
        if(data['event_state'].includes(',')) {
            var newArr = [];
            var tmpArr = data['event_state'].split(',')
            for( i = 0; i < tmpArr.length; i++ ) {
                !newArr.includes(tmpArr[i]) ? newArr.push(tmpArr[i]) : ''
            }
            data['event_state'] = newArr.join(',')
        }
    }
}

if (utag.data['do_not_track'] == null || b['do_not_track'] == null) {
    utag.data['do_not_track'] = b['do_not_track'] = utag_checkDoNotTrack()
}

utag.dkStdVars = function (data, tag_type, href) {
    data['page_site'] = utag.data['page_site']
    data['page_language'] = utag.data['page_language']
    data['page_title'] = utag.data['page_title']
    data['pre_order_id'] = utag.data['pre_order_id'] || ""
    data['event_domain'] = utag.data['dom.domain']
    data['event_url'] = utag.data['dom.pathname']
    data['event_query'] = utag.data['dom.query_string']
    data['event_referrer_url'] = utag.data['dom.referrer']
    data['personalization_state'] = utag.data['personalization_state']
    data['page_state'] = utag.data['page_state']
    data['ccpa_do_not_track'] = utag.data['ccpa_do_not_track']
    data['do_not_track'] = utag.data['do_not_track']
    data['js_page.myApp.page.ccpa'] = utag.data['js_page.myApp.page.ccpa']
    data['js_page.myApp.page.do_not_track'] = utag.data['js_page.myApp.page.do_not_track']
    data['local_currency'] = utag.data['local_currency']
    utag.newEventDefaultValues(data, tag_type, href)
}

utag.dkParseStringtoDataObj = function (str) {
    var aKeyValuePair = [], returnObj = {}
    var strng = str.replace(';', ',')
    var keyValuePairs = strng.split(',')
    for (var n = 0; n < keyValuePairs.length; n++) {
        aKeyValuePair = keyValuePairs[n].split("=")
        returnObj[aKeyValuePair[0]] = aKeyValuePair[1]
    }
    return returnObj
}

utag.dkValuePairsToProperties = function (VPArray, vObject) {
    for (var i = 0; i < VPArray.length; i++) {
        var pair = VPArray[i].split('=')
        if (pair.length > 1) {
            pair[0] = pair[0].replace(' ', '')
            pair[1] = pair[1].replace(/^\s+|\s+$/gm, '')
            vObject[pair[0]] = pair[1]
        }
    }
}

utag.preserveOriginalUtagData = function () {
    utag.utag_data_at_pageLoad = {}
    utag.utag_data_at_pageLoad['page_title'] = utag.data['dom.title']; //to be overridden if title defined in tag
    for (var i in utag_data) {
        utag.utag_data_at_pageLoad[i] = utag_data[i]
    }
}

utag.is_SPA_page = function (url) {
    var retval = false;
    const spaPages = [/mydigikey\/ReviewOrder$/,
        /\/\w{2}\/products$|\/\w{2}\/products\//,
        /\/pcb-builder\/$/,
        /\/taoglas\/antenna-builder|cable-builder/,
        /\/configurator\/jabil\//,
        /\/zh\/ordering/,
        /\/configurator\/3D-printing\//gi,      // Added Sep1521
        /(.*mylists\/list.*)/g
    ];
    for (const element of spaPages) {
        if (url.match(element)) {
            retval = true
            break;
        }
    }
    return retval;
}

}
}} catch(e){ utag.DB(e) }  },
function(a,b){ try{utag.runonce = utag.runonce || {};utag.runonce.ext = utag.runonce.ext || {};if(typeof utag.runonce.ext[552]=='undefined'){utag.runonce.ext[552]=1;if(1){
// 552 - Specialized Helper Functions
if (utag.data.tealium_environment == 'qa') {
    var e = 1;
}

utag.dkAsgnExtLnk = function (a, e) {
    var dest = e.currentTarget.href;
    if (typeof dest != 'undefined') {
        a['ext_location'] = dest
        a['ext_host'] = dest.substring(dest.indexOf('//') + 2, dest.indexOf('/', 10))
        a['ext_uri'] = dest.substr(dest.indexOf('/', 10))
        a['ExtRun'] = utag.dkTrk('552.2')
    }
}

utag.assignVideoSource = function (b) {
    try {
        var refPgType = utag.data['ref_page_type']
        var refPgSubType = utag.data['ref_page_sub_type']
        var pgType = utag.data['page_type']
        var pgSubType = utag.data['page_sub_type']
        var pgContentGroup = utag.data['page_content_group']
        if ( refPgType === "" && utag.data['dom.referrer'].toLowerCase().includes('/products/detail/') ) {
            if (utag.data['dom.pathname'].toLowerCase().includes('/api/videos/videoplayer/smallplayer')) {
                pgType = b['page_type'] = 'VP'
                pgSubType = b['page_sub_type'] = 'VP'
                refPgType = b['ref_page_type'] = 'PS'
                refPgSubType = b['ref_page_sub_type'] = 'PD'
                pgContentGroup = b['page_content_group'] = 'Video Player'
                b['page_content_sub_group'] = 'Video Page'
                b['page_id'] = 'Small Video Player'
                b['ExtRun'] = utag.dkTrk('406.7');
            }
        }
        
        if ((typeof b['video_source'] == 'undefined' && typeof utag.data['video_source'] == 'undefined') || utag.data['video_source'] == '_') {
            if (location.hostname.indexOf("developer.digikey.com") > -1) { 
                utag.data['video_source'] = 'API Solutions'
            } else if ((refPgType === 'BLG') || (typeof pgContentGroup != 'undefined' && decodeURIComponent(pgContentGroup) == 'Blogs')) {
                utag.data['video_source'] = 'Blog - The Circuit'
            } else if (refPgType === 'CP') { 
                utag.data['video_source'] = 'Careers'
            } else if (refPgType === 'FS' && refPgSubType === 'CS') { 
                utag.data['video_source'] = 'Content Search'
            } else if ((refPgType === 'DT' && (refPgSubType !== 'SCH') && refPgSubType !== 'SI')) { 
                utag.data['video_source'] = 'Design Tools' 
            } else if (refPgType === 'DSP' && refPgSubType === 'DSP') { 
                utag.data['video_source'] = 'Design Service Provider Page'
            } else if ((refPgType === 'RE' && refPgSubType.slice(0,2) === 'DT')) { 
                utag.data['video_source'] = 'Development Tools'
            } else if (refPgType === 'HP') { 
                utag.data['video_source'] = 'DK Homepage'
            } else if (refPgType === 'IDA') { 
                utag.data['video_source'] = 'Industrial Automation'
            } else if (refPgType === 'IOT' || (refPgType === 'RE' && refPgSubType === 'IOT')) { 
                utag.data['video_source'] = 'IoT Solutions' 
            }  else  if (pgType === 'MK') { 
                utag.data['video_source'] = 'Maker' 
            } else if ((refPgType === 'RCO' && refPgSubType === 'RDX') || (refPgType === 'RE' && refPgSubType === 'RE') || 
                (refPgType === 'TZ' && refPgSubType === 'SB') || (refPgType === 'PS' && refPgSubType === 'CAT') || 
                (refPgType === 'PS' && refPgSubType === 'FAM') || (refPgType === 'HE' && refPgSubType === 'HE')) { 
                    utag.data['video_source'] = 'Other'
            } else if (refPgType === 'PS' && refPgSubType === 'PD') { 
                utag.data['video_source'] = 'Part Detail'
            } else if (((refPgType === 'FS' || refPgType === 'SP') && refPgSubType === 'PH') || (typeof pgContentGroup != 'undefined' && decodeURIComponent(pgContentGroup) == 'Product Highlight')) { 
                utag.data['video_source'] = 'Product Highlight Library'
            } else if ((refPgType === 'FS' && refPgSubType === 'PTM') || refPgType === 'PTM') { 
                utag.data['video_source'] = 'PTM'
            } else if (refPgType === 'RDL') { 
                utag.data['video_source'] = 'Reference Design Library'
            } else if ((refPgType === 'RE' && refPgSubType === 'DKE') || (typeof pgContentGroup != 'undefined' && decodeURIComponent(pgContentGroup) == 'Resources')) { 
                utag.data['video_source'] = 'Resources'
            } else if ((refPgType === 'DT' && (refPgSubType === 'SI' || refPgSubTyhpe === 'SCH')) || (typeof pgContentGroup != 'undefined' && decodeURIComponent(pgContentGroup) == 'Scheme It')) { 
                utag.data['video_source'] = 'Scheme It'
            } else if ((refPgType === 'SP' && refPgSubType === 'SP') || (pgType === 'SP' && pgSubType === 'SCP') || (refPgSubType === 'SP')) {
                utag.data['video_source'] = 'Supplier Portal'
            } else if (refPgType === 'TZ') { 
                utag.data['video_source'] = 'Techzones'
            } else if ((refPgType === 'FS' && refPgSubType === 'VL') || (refPgType === 'VI' && refPgSubType === 'VL') || (refPgType === 'VL' && refPgSubType === 'VP')) { 
                utag.data['video_source'] = 'Video Library'
            } else if (typeof b["qp.video_source"] != 'undefined') { 
                utag.data['video_source'] = b["qp.video_source"]
            } else if (typeof b["qp.WT.z_video_source"] != 'undefined') { 
                utag.data['video_source'] = b["qp.WT.z_video_source"]
            } else { 
                utag.data['video_source'] = refPgType + '_' + refPgSubType
            }
            b["ExtRun"] = utag.dkTrk('552.1')
        }
        else {
            // correct video sources defined incorrectly
        }
    } catch (e) {
        utag.DB(e);
    }
}

utag.addPageState = function (newState, b) {
    if (typeof b.page_state === 'undefined' || b.page_state === '') {
        b.page_state = newState
    } else {
        b.page_state += "," + newState
    }
    utag.data['page_state'] = b.page_state
}

}
}} catch(e){ utag.DB(e) }  },
function(a,b){ try{utag.runonce = utag.runonce || {};utag.runonce.ext = utag.runonce.ext || {};if(typeof utag.runonce.ext[553]=='undefined'){utag.runonce.ext[553]=1;if(1){
// 553 - Digikey API
utag.dkLink = function (txt) {
    // supports both a string or an object parameter
    var data
    if (typeof txt === 'string') {
        data = {}
        utag.data.priorityLink = true
        var kvs = txt.split(';')
        for (var i = 0; i < kvs.length; i++) {
            var pair = kvs[i].split('=')
            data[pair[0]] = pair[1]
        }
        data["ExtRun"] = utag.dkTrk("553.3")
    } else if (typeof txt === 'object') {
        data = txt
    }
    utag.dklink(data)
    utag.data.priorityLink = false
}

utag.dkVideo = function (playerId, bcData) {
    var playerids = ["vjs_video_3", "popup-player"]
    var elmnt
    for (i = 0; i < playerids.length; i++) {
        elmnt = document.getElementById(playerids[i])
        if (elmnt) { playerId = elmnt.id }
    }
    var VPlayer = videojs(playerId).player()
    var data = {}
    utag.assignVideoSource(data)
    data['video_source'] = utag.data['video_source']
    data['event_category'] = 'bc_video'
    data['event_label'] = bcData['WT.clip_n']
    data['ref_page_event'] = bcData['WT.z_event_type']
    data['playlist_id'] = '(Not Set)'
    data['video_id'] = bcData['WT.clip_id']
    data['page_type'] = 'VI'
    data['page_sub_type'] = 'VL'
    data['content_group'] = 'Video'
    data['content_sub_group'] = 'Brightcove'
    var i
    var KV = []
    for (i = 0; i < VPlayer.mediainfo.tags.length; i++) {
        KV = VPlayer.mediainfo.tags[i].split('=')
        if (KV[0] == 'supplierid') {
            //remove ref supplier id to supplier id video assignment
            utag.data['supplier_id'] = KV[1]
            break;
        }
    }
    //remove ref supplier id to supplier id video assignment
    data['supplier_id'] = bcData['WT.z_supplier_id'] || utag.data['supplier_id']
    utag.dklink(data)
}

utag.dkDialogTag = function (title, label, instr) {
    var e = 1
}

utag.dkView = function (data) {
    try {
        try {
            var sndData = {}, copyOfParams = ""
            utag.data.sendErr = {}, xData = {}
            xData['ExtRun'] = utag.dkTrk('Start dkView')

            // Support to allow data to be either an object or a string
            var idx = 0, tdx = "", ds1 = [], ds2 = [], tmp = {}
            if (typeof data === 'string') {
                ds1 = data.split(';')
                for (idx in ds1) {
                    ds2 = ds1[idx].split('=')
                    tmp[ds2[0]] = ds2[1]
                }
                data = tmp
            }
       
            // convert China orders over limit, correct checkout steps
            if(data.page_site === 'CN' && data.hasOwnProperty('order_subtotal')) {
                if ((data.order_currency === 'CNY' && data.order_subtotal > 3300000) || (data.order_subtotal > 500000)) {
                    data.order_subtotal = 1
                }
            }
            
            copyOfParams = JSON.stringify(data)
            utag.utag_data_at_pageLoad = utag.utag_data_at_pageLoad || {}
            // fetch cookies that may have been added
            utag.readUTMCookie(data)
            // If dkView is called before we have consent, copy the values in data into utag_data.
            if (utag.data.optanon_c0002 === false) {
                  for (var i in data) {
                    utag_data[i] = utag.utag_data_at_pageLoad[i] = data[i]
                }
                return
            }

            // update utag.data with values in data 
            for (tdx in data) {
                utag.data[tdx] = sndData[tdx] = data[tdx]
            }

            if (utag.is_SPA_page(utag.data['dom.pathname'])) {
                sndData.ref_page_event = utag.data['ref_page_event'] || utag.utag_data_at_pageLoad['ref_page_event'] || ""
                sndData.ref_page_type = utag.data['ref_page_type'] || utag.utag_data_at_pageLoad['ref_page_type'] || ""
                sndData.ref_page_sub_type = utag.data['ref_page_sub_type'] || utag.utag_data_at_pageLoad['ref_page_sub_type'] || ""
                sndData.ref_page_id = utag.data['ref_page_id'] || utag.utag_data_at_pageLoad['ref_page_id'] || ""
                sndData.ref_part_search_term = utag.data['ref_part_search_term'] || utag.utag_data_at_pageLoad['ref_part_search_term'] || ""
                sndData.ref_page_state = utag.data['ref_page_state'] || utag.utag_data_at_pageLoad['ref_page_state'] || ""
                sndData.ref_part_search_term_ext = utag.data['ref_part_search_term_ext'] || utag.utag_data_at_pageLoad['ref_part_search_term_ext'] || ""
                sndData.ref_page_category = utag.data['ref_page_category'] || utag.data['category'] || utag.utag_data_at_pageLoad['ref_page_category'] || ""
                sndData.ref_pers_state = utag.data['ref_pers_state'] || utag.utag_data_at_pageLoad['ref_pers_state'] || ""
                sndData.ref_supplier_id = utag.data['ref_supplier_id'] || utag.utag_data_at_pageLoad['ref_supplier_id'] || ""
                sndData.html_element1 = utag.data['html_element1'] || utag.utag_data_at_pageLoad['html_element1'] || ""
                sndData.html_element2 = utag.data['html_element2'] || utag.utag_data_at_pageLoad['html_element2'] || ""
                sndData.html_element3 = utag.data['html_element3'] || utag.utag_data_at_pageLoad['html_element3'] || ""
                sndData.html_element4 = utag.data['html_element4'] || utag.utag_data_at_pageLoad['html_element4'] || ""
                sndData.event_state = utag.data['event_state'] || utag.utag_data_at_pageLoad['event_state'] || ""
                utag.setPersonalizationState(sndData)
                //if ( utag.data.optanon_c0002 === true ) utag.view(sndData)
                utag.view(sndData)
                if (typeof utag.data.sendErr['name'] === 'string') { throw new Error('dkView Send Failed - SPA') }
                utag_cfg_ovrd.noview = false
                utag.utag_data_at_pageLoad = {}
                return
            } else {
                sndData.ref_page_type = sndData.ref_page_type || utag.data['page_type']
                sndData.ref_page_sub_type = sndData.ref_page_sub_type || utag.data['page_sub_type']
                sndData.ref_page_id = sndData.ref_page_id || utag.data['page_id']
                if (utag_cfg_ovrd.noview !== true && utag.data.optanon_c0002 === true) utag.view(sndData)
                if (typeof utag.data.sendErr['name'] === 'string') { throw new Error('dkView Send Failed') }
            }
        } catch (err) {
            var x = i || 0
            var errDisp = "dkView"
            xData['ExtRun'] = utag.dkTrk('553.5-e')
            xData['doi_tab'] = copyOfParams
            utag.dkErrorTag(xData, err.name, err.message + '--553 -- ' + errDisp)
            utag.DB(err)
        }
    } catch (e) {
        utag.DB(e)
    }
}
}
}} catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 550 - Set Variables based on Domain
utag.dk = {
    AssignLanguage: function (b, dlang) {
        if (typeof b.page_language == 'undefined' || b.page_language == '(Not Set)') {
            if (typeof b['meta.digikey.fss.language'] != 'undefined') {
                b.page_language = b['meta.digikey.fss.language']
				utag.dkTrk('550.1')
            }
            else if (typeof b["qp.lang"] != 'undefined') {
                b.page_language = b["qp.lang"]
				utag.dkTrk('550.2')
            }
            else { 
                b.page_language = dlang
				utag.dkTrk('550.3')
            }
        }
    },
    AssignGT: function (b, arr) {               //[gid, site, dlang, region, dcur]
        b.page_site = arr[1]                    //site
        utag.dk['AssignLanguage'](b, arr[2])    //dlang
        b.region = arr[3]                       //region
        if( utag.data['local_currency'] ) {
            b.local_currency = utag.data['local_currency']
        } else {
            b.local_currency = arr[1] === 'CN' ? 'CNY' : 'USD'
        }
    }
}

var ctyObj = {
    at : {
        gtParms: ['9','AT','de','EMEA','EUR']
    },
    au : {  // .com\.au
        gtParms: ['10', 'AU', 'en', 'APAC', 'AUD']
    },
    be : {
        gtParms: ['11', 'BE', 'nl', 'EMEA', 'EUR']
    },
    bg : {
        gtParms: ['12', 'BG', 'en', 'EMEA', 'EUR']
    },
	br : {
		gtParms: ['66', 'BR', 'pt', 'Americas', 'USD']
	},
	ca : {
		gtParms: ['13', 'CA', 'en', 'Americas', 'CAD']
	},
	ch : {
		gtParms: ['14', 'CH', 'de', 'EMEA', 'CHF']
	},
	cn : {
		gtParms: ['17', 'CN', 'zhs', 'APAC', 'CNY']
	},
    com : { //US Site
        gtParms: ['46', 'US', 'en', 'Americas', 'USD']
    },
	cz : {
		gtParms: ['16', 'CZ', 'cz', 'EMEA', 'CZK']
	},
	de : {
		gtParms: ['19', 'DE', 'de', 'EMEA', 'EUR']
	},
	dk : {
		gtParms: ['18', 'DK', 'da', 'EMEA', 'DKK']
	},
	ee : {
		gtParms: ['20', 'EE', 'en', 'EMEA', 'EUR']
	},
	es : {
		gtParms: ['21', 'ES', 'en', 'EMEA', 'EUR']
	},
	fi : {
		gtParms: ['23', 'FI', 'fi', 'EMEA', 'EUR']
	},
	fr : {
		gtParms: ['22', 'FR', 'fr', 'EMEA', 'EUR']
	},
	gr : {
		gtParms: ['25', 'GR', 'en', 'EMEA', 'EUR']
	},
	hk : {
		gtParms: ['24', 'HK', 'en', 'APAC', 'HKD']
	},
	hu : {
		gtParms: ['26', 'HU', 'hu', 'EMEA', 'HUF']
	},
	ie : {
		gtParms: ['27', 'IE', 'en', 'EMEA', 'EUR']
	},
	il : {
		gtParms: ['29', 'IL', 'en', 'EMEA', 'ILS']
	},
	in : {
		gtParms: ['49', 'IN', 'en', 'APAC', 'INR']
	},
	it : {
		gtParms: ['28', 'IT', 'it', 'EMEA', 'EUR']
	},
	jp : {
		gtParms: ['30', 'JP', 'ja', 'APAC', 'JPY']
	},
	kr : {
		gtParms: ['31', 'KR', 'ko', 'APAC', 'KRW']
	},
	lt : {
		gtParms: ['32', 'LT', 'en', 'EMEA', 'EUR']
	},
	lu : {
		gtParms: ['33', 'LU', 'en', 'EMEA', 'EUR']
	},
	lv : {
		gtParms: ['35', 'LV', 'en', 'EMEA', 'EUR']
	},
	mx : {
		gtParms: ['34', 'MX', 'es', 'Americas', 'USD']
	},
	my : {
		gtParms: ['48', 'MY', 'en', 'APAC', 'MYR']
	},
	nl : {
		gtParms: ['36', 'NL', 'nl', 'EMEA', 'EUR']
	},
	no : {
		gtParms: ['37', 'NO', 'no', 'EMEA', 'NOK']
	},
	nz : {
		gtParms: ['39', 'NZ', 'en', 'APAC', 'NZD']
	},
	ph : {
		gtParms: ['59', 'PH', 'en', 'APAC', 'PHP']
	},
	pl : {
		gtParms: ['38', 'PL', 'pl', 'EMEA', 'PLN']
	},
	pt : {
		gtParms: ['41', 'PT', 'pt', 'EMEA', 'EUR']
  	},
	ro : {
		gtParms: ['51', 'RO', 'ro', 'EMEA', 'RON']
	},
	se : {
		gtParms: ['40', 'SE', 'sv', 'EMEA', 'SEK']
	},
	si : {
		gtParms: ['43', 'SI', 'en', 'EMEA', 'EUR']
	},
	sg : {
		gtParms: ['42', 'SG', 'en', 'APAC', 'SGD']
	},
	sk : {
		gtParms: ['45', 'SK', 'en', 'EMEA', 'EUR']
	},
	th : {
		gtParms: ['60', 'TH', 'th', 'APAC', 'THB']
	},
	tw : {
		gtParms: ['44', 'TW', 'zht', 'APAC', 'TWD']
	},
	uk : {
		gtParms: ['47', 'UK', 'en', 'EMEA', 'GBP']
	},
	us : {
	    gtParms: ['46', 'US', 'en', 'Americas', 'USD']
	},
	za : {
		gtParms: ['50', 'ZA', 'en', 'EMEA', 'ZAR']
	}
}

var AdWordConfirmationIDs = []
var CurrentAdWordID = 1
b['AdWordConfirmationIDs'] = AdWordConfirmationIDs
var dk = utag.dk

var tmpObj = Object.assign({}, ctyObj[dkDomCtry])
if( tmpObj !== null ) {
    if (dk_test === true) {
        b['google_tracking_id_sandbox'] ='UA-88355857-1';
        utag.data['google_tracking_id1'] = 'UA-88355857-1';
    }
    dk.AssignGT(b, tmpObj.gtParms)
    tmpObj.gidSandbox ? b['google_tracking_id_sandbox'] = gidSandBox : ''
    if( !dk_test ) {
        b.google_tracking_id = "UA-88355857-" + tmpObj.gtParms[0];
    }
}

b['Google_tracking_name'] = 'Production'
b['google_tracking_name_sandbox'] = 'Sandbox'
b['google_tracking_name_staging'] = 'Staging'

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 518 - Miscellaneous JS code for Views.
if (a === 'link') {
    if (b.event_category !== 'bc_video' && b.event_category !== 'yt_video') {
        // utag.dkTrk('398.3')
        utag.dkTrk('518.5')
        b.video_source = ""
    }
}

if (a === 'view') {
    if (b.page_type === 'PS' && b.page_sub_type === 'PD') {
        b.part_search_term = b.part_search_term || b.ref_part_search_term || ""
        // Check parts in Stock
        try {
            var el = document.querySelector('[data-testid="price-and-procure-title"]')
            if (el !== null && el !== undefined) {
                var txtArr = el.textContent.split(' ')
                if (txtArr.length > 0) {
                    if ( txtArr[0] === '0' || (txtArr[0] === 'Factory' && txtArr[2] === '0') ) { 
                        var tmpArr = b.page_state.split(',')
                        if (tmpArr.length > 0 ) {
                            for ( var i = 0; i < tmpArr.length; i ++) {
                                if (tmpArr[i].toLowerCase().trim() === 'parts in stock') {
                                    b.page_state = b.page_state.replace('Parts In Stock', 'Parts Not In Stock')
                                    utag.dkTrk('518.1')
                                }
                            }
                        }
                    }
                }
            }
        } catch(er) {
            utag.DB(er);
        }
    } else if (b.page_site === 'CN' && b.page_type === 'SC') {
        if( b.page_sub_type === 'BL' ) {
            var el = document.getElementById('checkout-continue-btn')
            if ( el !== undefined && el !== null) {
                if ( el.hasAttribute('cookie-tacking')) {
                    el.setAttribute('cookie-tracking', el.getAttribute('cookie-tacking'))
                    utag.dkTrk('518.2');
                }
            }
            if(b.ref_page_event === '' || b.ref_page_event === 'Continue to Shipping') {
                b.ref_page_event = 'Continue to Payment'
                utag.dkTrk('518.3')
            }
        }
    } else if (b.page_type === 'PS' && b.page_sub_type === 'PCR' && b.page_id === 'PCR') {
        if ((b['dom.query_string'].includes('search=') || b['dom.pathname'].includes('/short/')) && b.part_search_term === '' ) {
            b.part_search_term = document.getElementById('searchInputField').value
            utag.dkTrk('518.4')
        }
    }

    if (utag.data.hasOwnProperty('do_not_track_for_consent') && !utag.hasOwnProperty('utag_data_at_pageLoad')) {
        utag.preserveOriginalUtagData()
        utag.dkTrk('518.6')
    }
}

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 421 - Check Do Not Track
utag.dkSetConsentValues = function (consentStatus) {
    b['do_not_track_for_consent'] = utag.data.do_not_track_for_consent = 'no'
    window.utag_cfg_ovrd.noview = false
    if (!b['optanon_c0002'] && !b['optanon_c0003'] && !b['optanon_c0004']) window.utag_cfg_ovrd.nocookie = false
    utag.cfg.noview = false
    if (!b['optanon_c0002']) window['ga-disable-' + utag.data.google_tracking_id1] = false
}

utag.dkSetConsentValues()

var tmp = b['cp.OptanonConsent']
if( tmp == null ) {
    b['optanon_c0002'] = utag.data.optanon_c0002 = false
    b['optanon_c0003'] = utag.data.optanon_c0003 = false
    b['optanon_c0004'] = utag.data.optanon_c0004 = false
} else {
    if (tmp.includes('C0002:1')) {
        b['optanon_c0002'] = utag.data.optanon_c0002 = true
    } else {
        b['optanon_c0002'] = utag.data.optanon_c0002 = false
    }
    if (tmp.includes('C0003:1')) {
        b['optanon_c0003'] = utag.data.optanon_c0003 = true
    } else {
        b['optanon_c0003'] = utag.data.optanon_c0003 = false
    }
    if (tmp.includes('C0004:1')) {
        b['optanon_c0004'] = utag.data.optanon_c0004 = true
    } else {
        b['optanon_c0004'] = utag.data.optanon_c0004 = false
    }
}
utag.dkSetConsentValues('Consented')

if (b['do_not_track_for_consent'] === 'yes') {
    utag.preserveOriginalUtagData()
}

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{utag.runonce = utag.runonce || {};utag.runonce.ext = utag.runonce.ext || {};if(typeof utag.runonce.ext[447]=='undefined'){utag.runonce.ext[447]=1;if(1){
// 447 - Services - Capture Consent Data
// The following will need to be run after the user has given consent.
utag.dkCollectConsentData = function(gdpr,tags) {
    utag.consentData = {
        "consentDate" : "",
        "expirationDate" : "",
        "digiKeyApplication" : "digikey.com",
        "consentVersion" : "ver 1.0",
        "typeOfConsent" : "Cookie"
    }
    utag.consentData['consentDate'] = gdpr.acceptedOn
    var jDate = new Date(gdpr.acceptedOn)
    var year = jDate.getFullYear()
    var month = jDate.getMonth()
    var date = jDate.getDate()
    utag.consentData['expirationDate'] = new Date(jDate.getFullYear()+1,jDate.getMonth(),jDate.getDate())
    tags['consentData'] = JSON.stringify(utag.consentData)
}

}
}} catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 457 - Capture Thank You on Order Preview pages
utag.framework['isOrderConfirmationHTML'] = function (b, eventType, IsCart2) {
    retVal = false
    if (IsCart2) {
        if (b.page_sub_type.match(/SCN/)) {
            retVal = true
        }
    } else {
        var OrderConfirmationPage = (document.getElementById('isOrderConfirmation'))
        if (!OrderConfirmationPage) {
            OrderConfirmationPage = (document.getElementsByClassName('reference-info').length > 0)
        }
        if (!OrderConfirmationPage && b['dom.domain'].indexOf('digikey.cn') >= 0) {
            OrderConfirmationPage = (document.getElementById('submittedLblId'))
        }
        if (OrderConfirmationPage) retVal = true
    }
    return retVal
}

//Updated Aug1921
function getCookie(name) {
    var value = "; " + document.cookie;
    var parts = value.split("; " + name + "=");
    if (parts.length == 2) return parts.pop().split(";").shift();
    else return null;
}

utag.framework['isOrderConfirmation'] = function (b, eventType, IsCart2) {
    var retVal = false
    var pageDat = b.page_type + "-" + b.page_sub_type
    if (eventType === 'view') {
        if (IsCart2) {
            if (utag.data['cp.utm_data_so'] !== null && utag.data['cp.utm_data_so'] === utag.data['pre_order_id']) {//Matching Webid value passed in utm_data_so and webid on order confirmation
                if (utag.data['page_sub_type'] === 'SCN') {
                    retVal = true
                    document.cookie = "utm_data_so=;expires = Thu, 01 Jan 1970 00:00:00 UTC;path=/;domain=" + utag.cfg.domainForCookies + ";"//Added Aug2521-Clear utm_data_so on Order Confirmation           
                    utag.data['cp.utm_data_so'] = "" // Added Sep0121
                }
            }
        }
        else if ((b.page_type === 'SC' && (b.page_sub_type === 'POR' || b.page_sub_type === 'SCN')) || (b.page_type === 'Ordering')) {
            if (b.ref_page_event === "Submit Order") {
                if ((typeof b.order_salesorder_number === 'undefined' || b.order_salesorder_number === 0 || b.order_salesorder_number === '0')
                    && (typeof b.marketplace_sales === 'undefined')) {
                    retVal = false
                } else {
                    retVal = utag.framework['isOrderConfirmationHTML'](b, eventType)
                }
            }
        }
    } else {
        if (utag.framework['isOrderConfirmationHTML'](b, eventType) && utag.data['is_confirmation_page'] === 'true') retVal = true
    }
    return retVal
}

utag.framework['ClearTransaction'] = function (b) {
    if (!b["js_page.window.cart2"]) {
        b.order_salesorder_number = ""
        //b.order_weborder_number = "";     Replaced with pre_order_id Oct1821
        b['pre_order_id'] = ''
        b['order_id'] = ""
        b['product_quantity'] = ""
        b['product_sku'] = ""
        b['product_extended_prices'] = ''
        b['order_subtotal'] = ''
        b['order_currency'] = ''
        b['local_currency'] = ''
        b['company_type'] = ''
        b['webtrends_conversion'] = ''
        b['transaction_type'] = ''
        b['transaction_date'] = ''
        b['transaction_time'] = ''
        b['ti_revenue'] = ''
        b['ti_part_qty'] = ''
        b['order_subtotal_in_usd'] = ""
        b['product_unit_prices'] = ''
        b['product_number'] = ''
        b['_ctotal'] = ""
        b['marketplace_sales'] = ""
        b['marketplace_revenue_usd'] = ""
        b['ExtRun'] = utag.dkTrk('457.6')        
    }
}

if (a === 'view') {
    window.utag_cfg_ovrd.ga_noview = false; // added for pageview events after confirmation page has loaded
    try {
        var pgTypes = utag.dkConCatPageType()
        // if short url, suppress initial page view 
        if(utag.data['dom.pathname'].includes('/short/') && pgTypes === '-' ) {
            window.utag_cfg_ovrd.ga_noview = true
            b['ExtRun'] = utag.dkTrk('457.1')
        } else if (b['ref_page_event'] === 'View BOM' && pgTypes === '-' && b['html_element1'] === "my-lists-button-to-my-lists" ) {  // View LIst from PDP
            window.utag_cfg_ovrd.noview = true
            b['ExtRun'] = utag.dkTrk('457.2')
        }
        var IsCart2 = (typeof b.personalization_state === 'string' && b.personalization_state.indexOf('"cart2":"classic"') >= 0);
        if (IsCart2) {
            b["js_page.window.cart2"] = false;
            b['ExtRun'] = utag.dkTrk('457.3')
        }
        if (b.page_type === 'SC' && b.page_sub_type.match(/POR|SCN/)) {
            b['is_confirmation_page'] = 'false';
            if (utag.framework['isOrderConfirmation'](b, a, IsCart2)) {
                if (typeof b.js_page === 'undefined') b.js_page = {}
                b.page_sub_type = 'SCN'
                b.page_id = 'SCN'
                b.page_content_sub_group = 'Submit Order'
                b.page_title = 'Shopping Cart - Submit'
                b.sales_order_id = b.order_salesorder_number
                b['is_confirmation_page'] = 'true'
                b['ExtRun'] = utag.dkTrk('457.4')
                if (!IsCart2) {
                    window.utag_cfg_ovrd.ga_noview = true
                    utag.DB("Process Order Confirmation - Supress PageView?")
                }
                utag.data["newCustomer"] = false
                if (typeof b.customer_id === 'undefined' || b.customer_id === '0') utag.data["newCustomer"] = true
            } else {
                utag.framework['ClearTransaction'](b)
                if (utag.framework['isOrderConfirmationHTML'](b, a, IsCart2)) {
                    b.page_sub_type = 'PCN'
                    b.page_id = 'PCN'
                    b.page_content_sub_group = 'Review Order Confirmation'
                    b.page_title = 'Review Order Confirmation'
                    b.is_confirmation_page = 'false'
                    b.tealium_event = ""
                    b['ExtRun'] = utag.dkTrk('457.5')
                }
            }
        } 
    } catch (err) {
        b['ExtRun'] = utag.dkTrk('457.1-e')
        utag.dkErrorTag(b, err.name, err.message)
    }
}

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 459 - Set Personalization State
utag.setPersonalizationState = function (data) {
    try {
        var pstate = {}
        if (typeof utag.data['personalization_state'] === 'object') pstate = utag.data['personalization_state']
        var pers_state = pstate || {}
        utag.data['personalization_state'] = data.personalization_state = JSON.stringify(pers_state)
        utag["ExtRun"] = utag.dkTrk('459.1')
    } catch (e) {
        data['ExtRun'] = utag.dkTrk('459.1-e')
        utag.dkErrorTag(data,err.name,err.message + '459.1-e')
        utag.DB(err)
    }
}

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{utag.runonce = utag.runonce || {};utag.runonce.ext = utag.runonce.ext || {};if(typeof utag.runonce.ext[466]=='undefined'){utag.runonce.ext[466]=1;if(1){
// 466 - Inject before Consent
utag.setTag = function (element, value, tagType) {
    if (typeof element === 'undefined' || element === null) return
    element.removeAttribute('ref_page_event')
    element.removeAttribute('cookie-tracking')
    element.removeAttribute('track-data')
    var tgtp = (typeof tagType === 'undefined') ? 'ref_page_event' : tagType
    if (tgtp === 'ref_page_event') {
        element.setAttribute(tgtp, value)
        utag.dkTrk('432.1')
    } else {
        utag.dkTrk('432.2')
        element.setAttribute(tgtp, 'ref_page_event=' + value)
    }
}

utag.insertTag = function (elmType, attr, value, page_type, page_sub_type, instance, tagType) {
    var i = 0, x, vrr = {}
    var itm = (typeof instance !== 'number') ? 0 : instance
    if ((typeof page_type === 'undefined' && typeof page_sub_type === 'undefined')
        || (page_type === null && page_sub_type === null)
        || (utag_data.page_type === page_type && (utag_data.page_sub_type === page_sub_type || page_sub_type === 'all'))) {
        if (elmType === 'class') {
            if (instance !== 'all') {
                x = document.getElementsByClassName(attr)[itm]
                utag.setTag(x, value, tagType)
            } else if (instance === 'all') {
                x = document.getElementsByClassName(attr);
                if (typeof x !== 'undefined') {
                    for (y = 0; y < x.length; y++) {
                        vrr = x[y];
                        utag.setTag(vrr, value, tagType);
                    }
                }
            }
        } else {
            x = document.getElementById(attr);
            utag.setTag(x, value, tagType);
        }
    }
}

// Testing
if (utag.data['ut.env'] === 'qa') {
}

// Header - Footer
utag.insertTag('class', 'button-desktop', 'Consent or View Privacy', null, null, 0, 'track-data')
utag.insertTag('class', 'button-mobile', 'Consent or View Privacy', null, null, 0, 'track-data')
utag.insertTag('class', 'footer__column--contact', 'Footer Nav - Contact Us', null, null, 0, 'track-data')
utag.insertTag('class', 'header__logo', 'Header Nav;ref_page_category=Logo', null, null, 'all', 'cookie-tracking')

}
}} catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 471 - Set Query String
b.query_string = b['dom.query_string'];
if (b.query_string.match(/email=/) && !(b.query_string.match(/z_email=/))) {
    var startp = b.query_string.indexOf('email=')
    b.query_string = b.query_string.substring(b.query_string.indexOf('&', startp) + 1)
    b["ExtRun"] = utag.dkTrk('471.1')
}
} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 472 - Suppress Initial PageLoad
if (a === 'view') {
    if (utag.is_SPA_page(utag.data['dom.pathname'])) {
        if (b['dom.pathname'].match(/ReviewOrder$/)) {
            b.page_type = 'MDK'
            b.page_sub_type = 'RO'
            b.page_id = 'RO'
            b["ExtRun"] = utag.dkTrk('472.1')
        }
        b.sales_order_id = utag.data['sales_order_id'] || "";
        if (typeof utag_cfg_ovrd.viewProcessed == 'undefined' || utag_cfg_ovrd.viewProcessed === false) {
            utag.preserveOriginalUtagData()
            window.utag_cfg_ovrd.noview = true
            utag.cfg.noview = true
            b["ExtRun"] = utag.dkTrk('472.2')
        } else {
            window.utag_cfg_ovrd.noview = false
            utag.cfg.noview = false 
            b["ExtRun"] = utag.dkTrk('472.3')
        }
        utag_cfg_ovrd.viewProcessed = true
    } else if (utag.data['page_type'] === 'PS' && utag.data['page_sub_type'] === 'PCR') {
        if ((utag.data['dom.query_string'].includes('search=') || utag.data['dom.pathname'].includes('/short/')) && utag.data['page_id'] === 'LP' ) {
            window.utag_cfg_ovrd.ga_noview = true
            b["ExtRun"] = utag.dkTrk('472.4')
        }
    } else if (utag.dkConCatPageType() === '-') {
        var lcHref = utag.data['dom.pathname'].toLowerCase()
        if (lcHref.includes('orderhistory/guest/orderstatus') || lcHref.includes('orderhistory/guest/revieworder')) {
            window.utag_cfg_ovrd.ga_noview = true
            b["ExtRun"] = utag.dkTrk('472.5')
        }
    }
}
} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 479 - GA Specific Events
/* This code is waiting until the part list before sending the purchase pageview.

This also ties to a change in the Google template that removes the sending of the
transaction data on pageview.
*/

utag.ga = utag.ga || {}
var ga4_items = []   // ga4
utag.ga['sendProductListforPurchase'] = function (data) {
    var idx = 0
    var env = (utag.data['tealium_environment'] === 'qa') ? 'Sandbox' : 'Production'
    for (idx; idx < data.part_id_a.length; idx++) {
        var g = {}
        g.id = data.part_id_a[idx]
        g.brand = data.supplier_id_a[idx]
        // ensure product revenue is not greater than $500K - added Nov232021
        var tmpTtl =  (String(data.line_item_price_a[idx].replaceAll(',', '.')) * data.part_qty_a[idx]).toLocaleString()
        tmpTtl > 500000 ? data.part_qty_a[idx] = .1 : ''
        g.price = data.line_item_price_a[idx]
        g.quantity = data.part_qty_a[idx]
        g.dimension114 = data.part_id_a[idx]
        ga(env + '.ec:addProduct', g)
    }
}

utag.ga['sendPurchaseEvent'] = function () {
    var u = utag.data
    var env = (utag.data['tealium_environment'] === 'qa') ? 'Sandbox' : 'Production'
    var transdata = {
        id: u.pre_order_id,
        affiliation: "",
        revenue: u.total_order_subtotal_usd,
        shipping: "",
        tax: "",
        coupon: ""
    }
    var pageviewData = {
        // technically, this is a 'SCN' page view, but we're simulating a pageview.  We're assuming the user
        // submitted the order from the Order Preview Page.
        dimension8: u.ref_page_type,
        dimension9: "POR",
        dimension10: u.ref_page_event,
        dimension12: "POR",
        dimension25: u.google_cust_id,
        dimension30: u.query_string,
        dimension65: u.pre_order_id,
        dimension71: u.local_currency,
        dimension72: u.ExtRun,
        dimension75: u.sales_order_id,
        dimension82: u.registered_user_id,
        dimension95: u.ref_customer,
        dimension103: u.company_type,
        dimension117: u.html_element1,
        dimension120: u.html_element2,
        dimension121: u.html_element3,
        dimension122: u.html_element4,
        dimension127: u.page_state,
        dimension135: u.marketplace_sales,
        dimension136: u.personalization_state,
        dimension138: u.vendor_type,
        dimension140: u.ref_pers_state,
        metric1: u.init_srch_count,
        metric3: u.order_subtotal,
        metric7: u.marketplace_revenue_usd,
        metric8: u.order_subtotal_in_usd,
        metric9: u.pcb_revenue_usd
    }
    window['ga-disable-' + utag.data.google_tracking_id1] = false
    ga(env + '.ec:setAction', 'purchase', transdata)
    ga(env + '.send', 'pageview', pageviewData)
    utag.DB('Sent Purchase Pageview with Parts')
}

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{utag.runonce = utag.runonce || {};utag.runonce.ext = utag.runonce.ext || {};if(typeof utag.runonce.ext[527]=='undefined'){utag.runonce.ext[527]=1;if(1){
// 527 - Part List Methods
utag.clearPartData = function () {
    utag.DB('Send Part Data');
    utag.pIds = [];
    utag.pSku = [];
    utag.pDesc = [];
    utag.pSup = [];
    utag.pQty = [];
    utag.pCat = [];
    utag.pSStat = [];
    utag.pPrc = [];
    utag.pWID = [];
    utag.pVType = [];
}

utag.assignPartListData = function (data) {
    utag.data['part_id_a'] = data['part_id_a'] = utag.pIds;
    utag.data['part_sku_a'] = data['part_sku_a'] = utag.pSku;
    utag.data['part_description_a'] = data['part_description_a'] = utag.pDesc;
    utag.data['supplier_id_a'] = data['supplier_id_a'] = utag.pSup;
    utag.data['part_qty_a'] = data['part_qty_a'] = utag.pQty;
    utag.data['part_category_a'] = data['part_category_a'] = utag.pCat;
    utag.data['stock_status_a'] = data['stock_status_a'] = utag.pSStat;
    utag.data['line_item_price_a'] = data['line_item_price_a'] = utag.pPrc;
    utag.data['web_id_a'] = data['web_id_a'] = utag.pWID;
    utag.data['part_type_a'] = data['part_type_a'] = utag.pVType;
}

utag.dkPartActivity = function (Action, PartDescx) {
    try {
        utag.pLastOp = Action
        utag.charCount += PartDescx.length
        var PartDesc = JSON.parse(PartDescx)
        var vnType = utag.framework["testForMerchandising"](PartDesc['supplier_id']) || 'Digi-Key'
        if (Action === 'purchase') {
            if (typeof utag.queue === 'undefined') utag.queue = {}
            if (typeof utag.queue['purchaseParts'] === 'undefined') {
                utag.queue['purchaseParts'] = [PartDesc]
            } else {
                utag.queue['purchaseParts'].push(PartDesc)
            }
        } else if (Action === 'remove_part' || Action === 'cart_add' || Action === 'product_view' || Action === 'checkout') {
            utag.pIds.push(PartDesc['part_id'] || '(Not Set)')
            utag.pSku.push(PartDesc['pn_sku'] || '(Not Set)')
            utag.pDesc.push(PartDesc['part_description'] || '(Not Set)')
            utag.pSup.push(PartDesc['supplier_id'] || '(Not Set)')
            utag.pQty.push(PartDesc['part_qty'] || '(Not Set)')
            utag.pCat.push(PartDesc['part_category'] || '(Not Set)')
            utag.pSStat.push(PartDesc['stock_status'] || '(Not Set)')
            utag.pPrc.push(PartDesc['line_item_price'] || '(Not Set)')
            utag.pWID.push(PartDesc['web_id'] || '(Not Set)')
            utag.pVType.push(vnType)
            if (utag.charCount > 6500) {
                utag.sendProductList()
                utag.charCount = 0
            }
        }
    } catch (er) {
        utag.DB(er)
    }
}

utag.dkLastPart = function () {
    utag.pPartListToPost = true;
    if (typeof utag.queue !== 'undefined' && utag.queue['purchaseParts'].length > 0) {
        utag.queue['purchaseEnd'] = true;
    } else {
        utag.sendProductList();
    }
    utag.DB('Part List Loaded');
}

utag.dkPartView = function (partData) {
    var e = 'placeholder';
}

utag.sendProductList = function () {
    try {
        if (typeof utag.postLoadCompleted == 'undefined') {
            utag.postLoadCompleted = 0;
        }
        var data = [];
        if (typeof utag.pLastOp == 'undefined' || utag.pLastOp === '') { return }
        data['tealium_event'] = utag.pLastOp;

        if (typeof data['tealium_event'] != 'undefined') {
            utag.assignPartListData(data);
            switch (data['tealium_event']) {
                case 'cart_add':
                    utag.dkStdVars(data);
                    data['ref_page_event'] = 'Post Parts Added to Cart';
                    data['not_a_pageview'] = '1';
                    utag.link(data, null);
                    utag.clearPartData();
                    break;
                case 'remove_part':
                    utag.dkStdVars(data);
                    data['ref_page_event'] = 'Post Parts Removed from Cart';
                    data['not_a_pageview'] = '1';
                    utag.link(data, null);
                    utag.clearPartData();
                    break;
                case 'checkout':
                    utag.dkStdVars(data);
                    data['ref_page_event'] = 'Post Parts Checked Out Cart';
                    data['not_a_pageview'] = '1';
                    utag.link(data, null);
                    utag.clearPartData();
                    break;
                case 'purchase':
                    utag.dkStdVars(data);
                    utag.pushPartListOnConfirmation(data);
                    break;
            }
        }
    } catch (er) {
        utag.DB(er);
    }
}

utag.clearPartData();
utag.pVType = [];
utag.postLoadEvents = [];
utag.charCount = 0;

}
}} catch(e){ utag.DB(e) }  },
function(a,b){ try{ if((typeof b['js_page.document.documentElement.lang']!='undefined'&&typeof b['js_page.document.documentElement.lang']!='undefined'&&b['js_page.document.documentElement.lang']!='')){try{b['page_language']=document.documentElement.lang.match(/\w{2,3}/i)[0]}catch(e){}} } catch(e){ utag.DB(e); }  },
function(a,b,c,d){
  b._ccity='';
  b._ccountry='';
  b._ccurrency=(typeof b['order_currency']!='undefined')?b['order_currency']:'';
  b._ccustid='';
  b._corder=(typeof b['order_id']!='undefined')?b['order_id']:'';
  b._cpromo='';
  b._cship='';
  b._cstate='';
  b._cstore='';
  b._csubtotal=(typeof b['order_subtotal']!='undefined')?b['order_subtotal']:'';
  b._ctax='';
  b._ctotal=(typeof b['order_subtotal']!='undefined')?b['order_subtotal']:'';
  b._ctype='';
  b._czip='';
  b._cprod=(typeof b['product_number']!='undefined'&&b['product_number'].length>0)?b['product_number']:[];
  b._cprodname=[];
  b._cbrand=[];
  b._ccat=[];
  b._ccat2=[];
  b._cquan=(typeof b['product_quantities']!='undefined'&&b['product_quantities'].length>0)?b['product_quantities']:[];
  b._cprice=(typeof b['product_price']!='undefined'&&b['product_price'].length>0)?b['product_price']:[];
  b._csku=(typeof b['product_sku']!='undefined'&&b['product_sku'].length>0)?b['product_sku']:[];
  b._cpdisc=[];
  if(b._cprod.length==0){b._cprod=b._csku.slice()};
  if(b._cprodname.length==0){b._cprodname=b._csku.slice()};
  function tf(a){if(a=='' || isNaN(parseFloat(a))){return a}else{return (parseFloat(a)).toFixed(2)}};
  b._ctotal=tf(b._ctotal);b._csubtotal=tf(b._csubtotal);b._ctax=tf(b._ctax);b._cship=tf(b._cship);for(c=0;c<b._cprice.length;c++){b._cprice[c]=tf(b._cprice[c])};for(c=0;c<b._cpdisc.length;c++){b._cpdisc[c]=tf(b._cpdisc[c])};
},
function(a,b){ try{ if(1){
// 569 - Standard Variable Corrections
utag.dkGetUtagMainVals = function(ckName) {
    let decodedCookie = decodeURIComponent(document.cookie);
    var ckArr = decodedCookie.split(';')
    var retVal = ''
    b['ExtRun'] = utag.dkTrk('569.2')
    for ( i = 0 ; i < ckArr.length; i++ ) {
        if (ckArr[i].includes('utag_main')) {
			var ck = ckArr[i]
			ck = ck.replace(' utag_main=', '')
            var tmpArr = ck.split('$')
            for ( x = 0 ; x < tmpArr.length; x++ ) {
                if( tmpArr[x].split(':')[0] === ckName) {
                    retVal =  tmpArr[x].split(':')[1]
					if( retVal.includes('%') ) {
						retVal = retVal.split('%')[0]
					}
                    break;
                }
            }
        }
        if( retVal !== '' ) {
            break;
        }
    }
    return retVal;
}

try {
    if ( utag_data['tealium_visitor_id'] == null ) {
        b['tealium_visitorid'] = utag_data['tealium_visitor_id'] = utag.dkGetUtagMainVals('v_id')
    } else {
        b['tealium_visitorid'] = utag_data['tealium_visitor_id']
    }
    if ( utag_data['tealium_session_id'] == null ) {
        b['tealium_visitid'] = utag_data['tealium_session_id'] = utag.dkGetUtagMainVals('ses_id')
    } else {
        b['tealium_visitid'] = utag_data['tealium_session_id']
    }
} catch (e) {
    utag.DB(e)
}

if (typeof b['part_search_term'] != 'undefined') {
    b['part_search_term'].toLowerCase()
}
if (typeof b['part_search_term_ext'] != 'undefined') {
    b['ExtRun'] = utag.dkTrk('569.1')
    b['part_search_term_ext'].toLowerCase()
}

if (typeof b['page_language'] != 'undefined' && b['page_language'].toLowerCase() === 'zh') {
    if (typeof b['page_site'] != 'undefined') {
        switch (b['page_site'].toLowerCase()) {
            case 'hk':
            case 'tw':
                b['page_language'] = 'zht';
                break;
            case 'cn':
            case 'sg':
            case 'zz':
                b['page_language'] = 'zhs';
                break;
        }
    }
    b['ExtRun'] = utag.dkTrk('569.3')
}

if (b.page_type === 'TEC' && b.page_title === '') {
    b.page_title = b['dom.title']
    b['ExtRun'] = utag.dkTrk('569.4')
}

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){b['currency_Always_USD']='USD'} } catch(e){ utag.DB(e); }  },
function(a,b){ try{ if(1){
// 429 - Cookie or Link
utag.setAsCookie = function() {
    utag.dkTrk('429.2')
    return 'Cookie'
}

utag.setAsLink = function() {
    utag.dkTrk('429.1')
    return 'Link'
}

utag.CookieOrLink = function(hrf) {
    if (typeof hrf === 'undefined' || hrf === null || hrf === "") return utag.setAsCookie()
    hrf = hrf.toString()
    if (typeof hrf !=="undefined") hrf = hrf.toLowerCase()
    if (hrf.indexOf('api-portal.digikey.') > 0) return utag.setAsLink()
    var bHrf = hrf.split("?")[0]
    if (bHrf.substring(0,1) != '/' && !(bHrf.match(/\.digikey\.|\/\/digikey\./))) return utag.setAsLink()
    if (bHrf.indexOf('.digikey.') > 0 && bHrf.indexOf('/media/pdf/') > 0) return utag.setAsLink()
    return utag.setAsCookie()
}
} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 439 - Update on Currency Change
var cookie = document.cookie.match('cur'+'=([^;]*)')
if (cookie !== null && typeof cookie[1] != 'undefined') {
    b.local_currency = utag.data.local_currency = cookie[1]
    b['ExtRun'] = utag.dkTrk('439')
}

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 445 - Event Time - Fixup Supplier Portal
utag.fixUpSuppliers = function(data,sElements) {
    if (typeof sElements['Link to Newest Products'] !== 'undefined') {
        var existingTag = sElements['Link to Newest Products'].getAttribute('cookie-tracking');
        if (existingTag === 'ref_page_event=Link to Product;') {
            data.ref_page_event = 'Link to Newest Products'
            data['ExtRun'] = utag.dkTrk('445.1')
        }
    }
}

utag.generateSupplierTags = function(data,sElements,href) {
    var tagSent = false;
    if (typeof sElements['Supplier Page Nav'] !== 'undefined') {
        data.ref_page_event = 'Go To Page Section'
        var startAnchor = href.indexOf('#') + 1
        data.ref_page_category = href.substring(startAnchor)
        data['ExtRun'] = utag.dkTrk('445.2')
        utag.dklink(data,href)
    }
    return tagSent
}

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 455 - Map UTM Campaign Tags
utag.wtzCampaignInfo = function(b, cid, cid0, cid1, cid2, cid3) {
    b["ExtRun"] = utag.dkTrk('455.2');
    if (cid0 === 'ref') {
        b['campaign_medium'] = 'aggregator';
        b['campaign'] = 'buynow';
        switch (cid1) {
            case 'datasheetarchive30':
                b['campaign_source'] = 'datasheetarchive';
                break;
            case 'neda':
                b['campaign_source'] = 'ecia';
                if (typeof cid4 != 'undefined') {
                    b['campaign'] = cid4;
                }
                break;
            case 'Octopartfastaddpost':
                b['campaign_source'] = 'octopart';
                b['campaign'] = 'bom';
                break;
            case 'findchips0311':
                b['campaign_source'] = 'findchips';
                break;
            default:
                b['campaign_source'] = cid1;
                if (typeof cid2 != 'undefined') {
                    switch (cid2) {
                        case 'bnl':
                        case 'tl':
                        case 'eeboard':
                        case 'eefocus':
                            b['campaign'] = cid2;
                            break;
                        default:
                            break;
                    }
                }
        }
    } else if (cid0 == 'sp') {
        b['campaign_medium'] = 'supplier';
        b['campaign_source'] = cid1;
        b['campaign_supplier'] = cid1;
        // remove / or \ from string   
        cid2 = cid2.replace(/[\/|\\]/, "");
        cid.length >= 4 ? cid3 = cid3.replace(/[\/|\\]/, "") : ''
        cid2 = cid2.replace('site=us', "");
        if (cid2 === 'supplier' || cid3 === 'supplier') {
            b['campaign'] = 'disti';
        } else if (cid2 === 'buynow' || cid3 === 'buynow') {
            b['campaign'] = 'buynow';
        } else {
            switch (cid2) {
                case 'EM7455':
                case 'MC7455':
                    b['campaign'] = 'buynow';
                    break;
                default:
                    b['campaign'] = '(Not Set)';
            }
        }
    }
}

utag.utmCampaignInfo = function(b) {
    b["ExtRun"] = utag.dkTrk('455.1');
    switch (b['campaign_medium']) {
        case "email":
            if (typeof b['email_id'] == 'undefined') {
                b['email_id'] = b['campaign'] + '_' + b['campaign_content'];
            }
            var pos = b['campaign_content'].indexOf('_');
            if (pos > 0 && b['campaign_content'].charAt(pos + 1) != '_') {
                b['campaign_site'] = b['campaign_content'].substr(b['campaign_content'].indexOf('_') + 1);
                if (b['campaign_site'].indexOf('_') > 0) {
                    b['campaign_site'] = b['campaign_site'].substr(0, b['campaign_site'].indexOf('_'));
                }
            } else {
                b['campaign_site'] = '(Not Set)';
            }
            pos = b['campaign_content'].search(/_[a-z]{2}_/i);
            if (pos < 0) pos = b['campaign_content'].search(/_[a-z]{3}_/i);
            if (pos < 0) { pos = b['campaign_content'].search(/__/i); }
            if (pos >= 0) {
                if (b['campaign_content'].charAt(pos + 1) != '_') {
                    if (b['campaign_content'].indexOf('_CNR_') >= 0) {
                        b['campaign_supplier'] = b['campaign_content'].substr(pos + 5);
                    } else {
                        b['campaign_supplier'] = b['campaign_content'].substr(pos + 4);
                    }
                } else {
                    b['campaign_supplier'] = b['campaign_content'].substr(pos + 2);
                }
                if (b['campaign_supplier'].indexOf('-') > 0) {
                    b['campaign_supplier'] = b['campaign_supplier'].substring(0, b['campaign_supplier'].indexOf('-'));
                }
            }
            break;
        case "cpc":
            b['is_paid_search'] = '1';
            if (typeof b['utm_adgroup'] != 'undefined') {
                b['ad_group'] = b['utm_adgroup'];
            }
            if (typeof b['qp.pkw'] != 'undefined') {
                b['paid_search_term'] = decodeURIComponent(b['qp.pkw']);
            } else if (typeof b['qp.keywords'] != 'undefined') {
                b['paid_search_term'] = decodeURIComponent(b['qp.keywords']);
            } else if (typeof b['qp.utm_term'] != 'undefined') {
                b['paid_search_term'] = decodeURIComponent(b['qp.utm_term']);
            } else if (typeof b['part_search_term'] != 'undefined') {
                b['paid_search_term'] = b['part_search_term'];
            } else {
                b['paid_search_term'] = b['content_search_keywords'];
            }
            break;
        default:
    }
}

var utmType;
if (typeof b['qp.utm_medium'] != 'undefined' && typeof b['qp.utm_source'] != 'undefined') {
    utmType = 'utm'
} else if ((typeof b['qp.utm_source'] == 'undefined' || b['qp.utm_medium'] == 'undefined') && typeof b['qp.WT.z_cid'] != 'undefined') {
    if (b['qp.WT.z_cid'] !== 'Shared_Cart' && b['qp.WT.z_cid'] !== 'Uploaded_Cart') {
        utmType = 'wtz'
    }
}

if (utmType != null) {
    b['uses_new_google_campaigns'] = '1';
    typeof b['page_site'] != 'undefined' ? b['campaign_site'] = b['page_site'] : b['campaign_site'] = '(Not Set)'
    typeof b['qp.utm_content'] != 'undefined' ? b['campaign_content'] = b['qp.utm_content'] : b['campaign_content'] = '(Not Set)';
    if (utmType === 'utm') {
        b['campaign_medium'] = b['qp.utm_medium'];
        b['campaign_source'] = b['qp.utm_source'];
        typeof b['qp.utm_campaign'] != 'undefined' ? b['campaign'] = b['qp.utm_campaign'] : b['campaign'] = '(Not Set)';
        typeof b['qp.utm_cid'] != 'undefined' ? b['campaign_customer_id'] = b['qp.utm_cid'] : ''
        typeof b['supplier_id'] != 'undefined' ? b['campaign_supplier'] = b['supplier_id'] : b['campaign_supplier'] = '(Not Set)'
        utag.utmCampaignInfo(b)
    } else  if (utmType === 'wtz') {
        b['aggregator_or_supplier_campaign'] = b['qp.WT.z_cid'];
        var cid_part = b['qp.WT.z_cid'].split('_');
        utag.wtzCampaignInfo(b, cid_part, cid_part[0], cid_part[1], cid_part[2], cid_part[3])
    }
}

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 456 - Event Time - Correct existing tags
utag.framework['correctExistingTags'] = function(page,tags,tagType) {
    switch (page) {
        case 'SP-SP':
            if (decodeURIComponent(tags['ref_page_event']) === 'Link to Supplier Spotlight') {
                tags['ref_page_event'] = 'Link from Spotlight';
                return 'TBD';
            }
            break;
        case 'PCB-BLD':
            if (decodeURIComponent(tags['ref_page_event']) === 'Upload Gerber File') {
                return 'Cookie';
            }
            break;
        case 'PCB-LAY':
            if (tags['ref_page_event'].match(/^Confirm File Upload$|^Cancel File Upload$/))  {
                return 'Cookie';
            }
            break;
        case 'SC-CO' :
            if(tags['html_element1'] === 'summary-checkout-btn' || tags['html_element1'] === 'cart-layout-checkout-btn') {
                return 'Cookie'
            }
            break;
    }
    return tagType.eventType;
}

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 435 - Event Time - Fix up Search Pages
utag.fixUpFamilyPage = function (data, sElements, eventType) {
    data.personalization_program = ""
    data.personalization_creative = ""
    if (typeof sElements['Asset'] !== 'undefined') {
        data.ref_page_event = 'Display Asset'
        data.page_title = 'Datasheet'
        data.asset_type = 'Datasheet'
        data['ExtRun'] = utag.dkTrk('435.1')
    }
    if (typeof sElements['Help for Parts'] !== 'undefined') {
        data.ref_page_event = 'Help for Parts'
        eventType = 'Link'
        data['ExtRun'] = utag.dkTrk('435.2')
    }
    if (typeof sElements['Select Manufacturer'] !== 'undefined') {
        data.ref_page_event = 'Select Manufacturer'
        eventType = 'Cookie'
        data['ExtRun'] = utag.dkTrk('435.3')
    }
    if (typeof sElements['View Series'] !== 'undefined') {
        data.ref_page_event = 'View Series'
        data['ExtRun'] = utag.dkTrk('435.4')
    }
    if (typeof sElements['Supplier Search'] !== 'undefined') {
        data.personalization_program = ""
        data.personalization_creative = ""
        data.ref_page_event = 'Filter on Supplier'
        data['ExtRun'] = utag.dkTrk('435.5')
    }
    if (typeof sElements['Cat Header'] !== 'undefined') {
        data.ref_page_event = 'Select Family by Header'
        data['ExtRun'] = utag.dkTrk('435.6')
    }
    if (typeof sElements['Cat New Product'] !== 'undefined') {
        data.ref_page_event = 'Select New Products for Family'
        data['ExtRun'] = utag.dkTrk('435.7')
    }
    if (typeof sElements['Add Part'] !== 'undefined') {
        var frm = document.getElementById('update-quantity')
        data.ref_quantity_ordered = frm[1].value
        data['ExtRun'] = utag.dkTrk('435.8')
    }
    // keep the data-term-key attribute handling.  It clears part_search_term, etc. when the user removes the last search term
    if (typeof sElements['Search Term'] !== 'undefined') {
        var srchTrm = sElements['Search Term'].getAttribute('data-term-key')
        if (srchTrm === utag.data['part_search_term']) {
            utag.data['part_search_term'] = utag.data['part_search_term_ext'] = utag.data['part_search_filter'] = ""
            data['ExtRun'] = utag.dkTrk('435.9')
        }
    }
    // Keep the following two clauses.  The capture tags for search dropdown and would be implemented by the Rocket team
    if (typeof sElements['Part Number Type Ahead'] !== 'undefined') {
        data.ref_page_category = 'Part Number Type Ahead'
        data['ExtRun'] = utag.dkTrk('435.10')
    }
    if (typeof sElements['Categories Type Ahead'] !== 'undefined') {
        data.ref_page_category = 'Categories Type Ahead'
        data['ExtRun'] = utag.dkTrk('435.11')
    }
    if ('Filter on Supplier' in sElements) {
        data.ref_page_event = 'Filter on Supplier'
        data['ExtRun'] = utag.dkTrk('435.12')
    }
    if (typeof sElements['Submit Order'] !== 'undefined') {// Added on Aug1221
        utag.SubmitOrderCookieImpl()
        data['ExtRun'] = utag.dkTrk('435.14')
    }
    if (typeof sElements['Select Manufacturer'] !== 'undefined') {// Added on Aug1221
        data.ref_page_event = 'Select Manufacturer'
        data['ExtRun'] = utag.dkTrk('435.33')
    }
    if (typeof sElements['SR Jump to Category'] !== 'undefined' ) {
        data.ref_page_event = 'Select Family by Header'
        data['ExtRun'] = utag.dkTrk('435.34')
    }
    return eventType
}

utag.fixUpPartDetail = function(data, sElements, eventType, href) {
    if (sElements.hasOwnProperty('Documents Media')) {
        if(data.asset_type == null) {
            var assetType = data.ref_page_event.replace('Get ', '')
            if (assetType === 'Datasheet') {
                href.toLowerCase().includes('.pdf') ? assetType : assetType = 'HTML Datasheet'
            }
            data.asset_type = assetType
        }
    }
    if( sElements.hasOwnProperty('Card Association') ) {
        var subst_codes = [
            'AlsoEvaluated-AlsoEvaluated', 
            'Assembly-Child',
            'Assembly-Parent',
            'ChipOutpost-Sibling',
            'Color-Sibling',
            'ForUseWith-Child',
            'ForUseWith-Parent',
            'Interconnect-Child',
            'Interconnect-Parent',
            'Kit-Child',
            'Kit-Parent',
            'Length-Sibling',
            'Mating-Child',
            'Mating-Parent',
            'Military-Child',
            'Military-Parent',
            'Packaging-Sibling',
            'Recommended-Child',
            'Recommended-Parent',
            'Tooling-Child',
            'Tooling-Parent'
        ]
        var subst_vals = [
    		'You May Also Be Interested In',
    		'Assembly Component',
            'Assembly',
            'Chip Outpost Part',
            'Alternate Color',
            'Associated Product',
            'For Use With',
            'Associated Cable/Wire',
            'Interconnect',
            'Kit Contents',
            'Kits',
            'Alternate Length',
            'Mating Products',
            'Mating Products',
            'Commercial',
            'Military',
            'Alternate Packaging',
            'Related Products',
            'Related Products',
            'Tooling',
            'For Use With'
        ]
        var see_all = data['ref_page_event'].includes('See All') ? ' - See All' : ''
        var rpe = data['ref_page_event'].replace('Substitute - ', '').replace(' - See All', '')
        if( subst_codes.indexOf(rpe) > -1 ) {
            data.ref_page_event = 'Substitute - ' + subst_vals[subst_codes.indexOf(rpe)] + see_all
        }
    }
    return eventType
}

utag.fixUpKeypressSearch = function (tags, sElements, cntrl) {
    if (typeof sElements['RefineSearch'] !== 'undefined') {
        tags.ref_page_event = 'Search Within Results'
        tags['ExtRun'] = utag.dkTrk('435.32')
        cntrl.eventType = 'Cookie'
    }
}

utag.generatePartSearchTags = function (data, sElements, href) {
    var tagSent = false
    var eventType = 'Not Set'
    if (typeof sElements['Select Learn More'] !== 'undefined') {
        data.personalization_program = ""
        data.personalization_creative = ""
        data.ref_page_event = 'Select Learn More'
        utag.newCookie(data, href)
        tagSent = true
        data['ExtRun'] = utag.dkTrk('435.15')
    }
    if (!tagSent && 'Select Part' in sElements) {
        data.ref_page_event = 'Select Part'
        eventType = 'Cookie'
        utag.newCookie(data, href)
        tagSent = true
        data['ExtRun'] = utag.dkTrk('435.13')
    }
    if (!tagSent && 'Select Manufacturer' in sElements) {
        data.ref_page_event = 'Select Manufacturer'
        utag.newCookie(data, href)
        tagSent = true
        data['ExtRun'] = utag.dkTrk('435.16')
    }
    if (!tagSent && 'View Series' in sElements) {
        data.ref_page_event = 'View Series'
        utag.newCookie(data, href)
        tagSent = true
        data['ExtRun'] = utag.dkTrk('435.17')
    }
    if (!tagSent && 'Change Number of Results Displayed' in sElements) {
        data.ref_page_event = 'Change Number of Results Displayed'
        utag.newCookie(data, href)
        tagSent = true
        data['ExtRun'] = utag.dkTrk('435.18')
    }
    if (!tagSent && 'Download Table' in sElements) {
        data.ref_page_event = 'Download Table'
        utag.dklink(data, href)
        tagSent = true
        data['ExtRun'] = utag.dkTrk('435.19')
    }
    if (!tagSent && 'Link to Supplier' in sElements) {
        data.ref_page_event = 'Link to Supplier'
        utag.newCookie(data, href)
        tagSent = true
        data['ExtRun'] = utag.dkTrk('435.20')
    }
    if (!tagSent && 'View Marketplace Message' in sElements) {
        data.ref_page_event = 'View Marketplace Message'
        utag.dkLink(data)
        tagSent = true
        data['ExtRun'] = utag.dkTrk('435.21')
    }
    if (!tagSent && 'Change Page in Search Results' in sElements) {
        data.ref_page_event = 'Change Page in Search Results'
        utag.newCookie(data, href)
        tagSent = true
        data['ExtRun'] = utag.dkTrk('435.22')
    }
    if (!tagSent && 'Help for Parts' in sElements) {
        data.ref_page_event = 'Help for Parts'
        utag.dkLink(data)
        tagSent = true
        data['ExtRun'] = utag.dkTrk('435.23')
    }
    if (!tagSent && 'Filter on Supplier' in sElements) {
        data.ref_page_event = 'Filter on Supplier'
        utag.newCookie(data, href)
        tagSent = true
        data['ExtRun'] = utag.dkTrk('435.24')
    }
    if ('Click Compare Parts' in sElements) {
        data.ref_page_event = 'Click Compare Parts'
        utag.newCookie(data, href)
        tagSent = true
        data['ExtRun'] = utag.dkTrk('435.25')
    }
    if (!tagSent && 'Hide or Expose Shared Attributes' in sElements) {
        data.ref_page_event = 'Hide or Expose Shared Attributes'
        utag.dkLink(data)
        tagSent = true
        data['ExtRun'] = utag.dkTrk('435.26')
    }
    if (!tagSent && 'Remove Part from Comparison' in sElements) {
        data.ref_page_event = 'Remove Part from Comparison'
        utag.newCookie(data, href)
        tagSent = true
        data['ExtRun'] = utag.dkTrk('435.27')
    }
    if (!tagSent && 'Link from Product Comparison' in sElements) {
        data.ref_page_event = 'Link from Product Comparison'
        utag.newCookie(data, href)
        tagSent = true
        data['ExtRun'] = utag.dkTrk('435.28')
    }
    if (!tagSent && 'Alternate Packaging' in sElements) {
        data.ref_page_event = 'Alternate Packaging'
        utag.newCookie(data, href)
        tagSent = true
        data['ExtRun'] = utag.dkTrk('435.29')
    }
    return tagSent
}

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 570 - Set User Agent
if (a === 'view') {
    b['userAgent']=utag.data['userAgent']=navigator.userAgent || ""
    if( b['userAgent'].indexOf('WeChat') >= 0 ) {
        b['ExtRun'] = utag.dkTrk('570.1')
        b['isWeChat'] = utag.data['isWeChat'] = true
    } else {
        b['ExtRun'] = utag.dkTrk('570.2')
        b['isWeChat'] = utag.data['isWeChat'] = false
    }
}

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 462 - Manage Marketplace Revenue
if (a==="view") {
    if( b.hasOwnProperty('marketplace_sales') && typeof Array.isArray(b.marketplace_sales) && b.page_type == 'SC' && b.page_sub_type == 'SCN' ) {
        var total,int,mp
        var PCBSuppliers = utag.marketPlaceIds('pcb')
        b.marketplace_revenue_usd=0, b.pcb_revenue_usd = 0
        b.total_order_subtotal_usd=b.order_subtotal_in_usd
        if(b.marketplace_sales.length > 0) {
            for (i = 0;i<b.marketplace_sales.length; i++) {
                mp=b.marketplace_sales[i]
                PCBSuppliers.includes(mp.VendorID) ? b.pcb_revenue_usd += parseFloat(mp.USD,10) : b.marketplace_revenue_usd += parseFloat(mp.USD,10)
            }
            b.marketplace_sales = JSON.stringify(b.marketplace_sales)
            b.total_order_subtotal_usd += b.marketplace_revenue_usd + b.pcb_revenue_usd
        }
        b.total_order_subtotal_usd = b.total_order_subtotal_usd.toFixed(2)
        b['ExtRun'] = utag.dkTrk('462.1')
    }
    if (b.total_order_subtotal_usd >= 500000) {
        b.total_order_subtotal_usd = 1 
        b._ctotal = 1
        b['ExtRun'] = utag.dkTrk('462.2')
    }
}

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 464 - Events - FixUpFooter
utag['fixUpFooter'] = function(data,sElements,eventType) {
    retval = eventType || "";
    data.personalization_program = "";
    data.personalization_creative = "";

    if (sElements.hasOwnProperty('ECIA Distributor')) {
        if (data.ref_page_event === 'Footer Nav - Contact Us') {
            data.ref_page_event = 'Footer Nav';
            data['ExtRun'] = utag.dkTrk('464.1');
            retval = 'Cookie';
        }
    }
    return retval;
}

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 465 - Event Time - Fixup Resources
utag['fixUpResources'] = function(data,sElements,eventType) {
    retval = eventType || "";
    data.personalization_program = "";
    data.personalization_creative = "";
    if (sElements.hasOwnProperty('Expand Help Section')) {
        if (utag.data['page_sub_type'] === 'LSS') {
            data.ref_page_event = 'Expand Help Section';
            data.ref_page_category = sElements['Expand Help Section'].textContent.trim()
            data['ExtRun'] = utag.dkTrk('465.1');
            retval='Link';
        }
    }
    if (utag.data['page_type'] === 'PCB' && utag.data['page_sub_type'] === 'LP') {
        if (typeof sElements['Tab Item'] !== 'undefined') {
            data.ref_page_category = sElements['Tab Item'].getAttribute('data-tab-label');
            data.ref_page_event = 'View Partner Info';
            retval = 'Link';
            data['ExtRun'] = utag.dkTrk('465.2');
        }
    }
    return retval;
}

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 467 - Test for Marketplace Vendor
utag.framework['testForMerchandising'] = function (supplierID) {
    if(supplierID == null) return ""
    var retval = "";
    var suppID = typeof supplierID !== 'string' ? supplierID.toString() : supplierID
    if (typeof suppID === 'string') {
        var mkplArr = utag.marketPlaceIds('marketplace')
        try {
            if (mkplArr.includes(suppID)) retval = 'Marketplace Vendor'
        } catch (er) {
            utag.DB(er);
        }
    }
    return retval;
}

utag.testForFbdPcb = function (supplierID) {
    if(supplierID == null) return ""
    var retval = "";
    var suppID = typeof supplierID !== 'string' ? supplierID.toString() : supplierID
    if (typeof suppID === 'string') {
        var fbdArr = utag.marketPlaceIds('fbd')
        var pcbArr = utag.marketPlaceIds('pcb')
        try {
            if (pcbArr.includes(suppID)) {
                retval = 'PCB Vendor'
            } else if (fbdArr.includes(suppID)) {
                retval = 'FBD Vendor'
            }
        } catch (er) {
            utag.DB(er);
        }
    }
    return retval;
}

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 475 - View Time - Search
try {
    if (a === 'view') {
        if (b.page_type !== 'PS') return;
        switch (utag.dkConCatPageType()) {
            case 'PS-PD':
                if (typeof b.personalization_state !== 'string' || b.personalization_state.indexOf('not active') >= 0) {
                    var qtyFld = document.getElementById('dkQty');
                    if (qtyFld === null) break;
                    var qty = Number(qtyFld.textContent.replace(/,/g, ''));
                    nPageState = (qty > 0) ? 'Parts In Stock' : 'Parts Not In Stock';
                    if (typeof b.page_state === 'undefined') {
                        b.page_state = nPageState;
                    } else {
                        b.page_state += ", " + nPageState;
                    }
                    b["ExtRun"] = utag.dkTrk('475.1');
                }
                break;
            case 'PS-FAM':
                b.category = b.page_id;
                b["ExtRun"] = utag.dkTrk('475.2');
                break;
        }
    }
} catch (err) {
    // In addition to tracking errors in the Tealium debug log, generate and sent to Google and event tag with the error information.
    var x = i || 0; var errDisp = fStage, data = [];
    data['ExtRun'] = utag.dkTrk('475.1-e');
    utag.dkErrorTag(data, err.name, err.message + '-- 475 -- ' + errDisp);
    utag.DB(err)
}
} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 483 - Event Methods for Evergage
utag.framework.sendEvergageCampaigns = function(eCampaign) {
    var data={
        event_category : "Evergage Campaign - Test",
        event_label : eCampaign.campaignName + "|" + eCampaign.experienceName + "|" + eCampaign.userGroup
    }
    switch (eCampaign.statType) {
        case "i":
            event_action = eCampaign.userGroup + " Impression";
            break;
        case "c":
            event_action = "Clickthrough";
            break;
        case "d":
            event_action = "Dismissal";
            break;
    }
    data['ExtRun'] = utag.dkTrk('483.1');
    utag.dklink(data);
}

utag.framework.processEvergageCampaigns = function(evergageCampaigns) {
    var i = 0;
    for (i = 0; i < evergageCampaigns.length; i++) {
        utag.framework.sendEvergageCampaigns(evergageCampaigns[i]);
    }
}

// Added as temporary fix to track evergage campaigns until Evergage fixes JS issue with evergage-action
utag.sendEvergageCampaignsFix = function(evgData) {
    var data={
        event_category : 'Evergage Campaign',
        event_label : evgData.campaignName,
    	event_action : 'Clickthrough',
    	ref_page_event: 'Clickthrough',
    	personalization_creative: evgData.campaignName + '|' + evgData.experience + '|' + evgData.userGroup
    }
    data['ExtRun'] = utag.dkTrk('483.2');
    utag.dkLink(data);
}

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 491 - Add ref page data for other Paid Media on entry pages
if (a === 'view') {
	switch (b['qp.utm_medium']) {
	case 'email':
		b.ref_page_type = '(e)';
		b.ref_page_sub_type = '(c)';
		b.ref_page_id = '(email)';
		b.ref_page_event = '(Entered from Email)';
		break;
	case 'cpc':
		b.ref_page_type = '(e)';
		b.ref_page_sub_type = '(c)';
		b.ref_page_id = '(cpc)';
		b.ref_page_event = '(Entered from Paid Search)';
		break;
	case 'aggregator':
		b.ref_page_type = '(e)';
		b.ref_page_sub_type = '(c)';
		b.ref_page_id = '(aggregator)';
		b.ref_page_event = '(Entered from Aggregator)';
		break;
	case 'buynow':
		b.ref_page_type = '(e)';
		b.ref_page_sub_type = '(c)';
		b.ref_page_id = '(buynow)';
		b.ref_page_event = '(Entered from BuyNow)';
		break;
	case 'social':
		b.ref_page_type = '(e)';
		b.ref_page_sub_type = '(c)';
		b.ref_page_id = '(social)';
		b.ref_page_event = '(Entered from Social)';
		break;
	case 'supplier':
		b.ref_page_type = '(e)';
		b.ref_page_sub_type = '(c)';
		b.ref_page_id = '(supplier)';
		b.ref_page_event = '(Entered from Supplier)';
		break;
	case 'vanity':
		b.ref_page_type = '(e)';
		b.ref_page_sub_type = '(c)';
		b.ref_page_id = '(vanity)';
		b.ref_page_event = '(Entered from Vanity)';
		break;
	case 'pressrelease':
		b.ref_page_type = '(e)';
		b.ref_page_sub_type = '(c)';
		b.ref_page_id = '(pressrelease)';
		b.ref_page_event = '(Entered from Press Release)';
		break;
	case 'referral':
		b.ref_page_type = '(e)';
		b.ref_page_sub_type = '(c)';
		b.ref_page_id = '(referral)';
		b.ref_page_event = '(Entered from Referral)';
		break;
	case 'cpm':
		b.ref_page_type = '(e)';
		b.ref_page_sub_type = '(c)';
		b.ref_page_id = '(cpm)';
		b.ref_page_event = '(Entered from Display)';
		break;
	case 'organic':
		b.ref_page_type = '(e)';
		b.ref_page_sub_type = '(c)';
		b.ref_page_id = '(organic)';
		b.ref_page_event = '(Entered from Organic Search)';
		break;
	}
}

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 499 - Event Time – For All Pages
utag.generateFixUpAllPages = function (data, sElements) {
    var retVal = false;
    if (typeof sElements['Change Language'] !== 'undefined') {
        data.personalization_program = ""
        data.personalization_creative = ""
        data.ref_page_event = 'Change Language'
        utag.newCookie(data)
        data['ExtRun'] = utag.dkTrk('499.1')
        retVal = true
    }
    if (typeof sElements['Change Country'] !== 'undefined') {
        data.personalization_program = ""
        data.personalization_creative = ""
        data.ref_page_event = 'Change Country'
        utag.dklink(data)
        data['ExtRun'] = utag.dkTrk('499.2')
        retVal = true
    }
    if (typeof sElements['Change Currency'] !== 'undefined') {
        data.personalization_program = ""
        data.personalization_creative = ""
        data.ref_page_event = 'Change Currency'
        utag.dklink(data)
        data['ExtRun'] = utag.dkTrk('499.3')
        retVal = true
    }  
    if (typeof sElements['Change Currency-Update Preferences'] !== 'undefined') {
        data.personalization_program = ""
        data.personalization_creative = ""
        data.ref_page_event = 'Change Currency-Update Preferences'
        utag.newCookie(data)
        data['ExtRun'] = utag.dkTrk('499.4')
        retVal = true
    }    
    if (typeof sElements['Change Currency-Help and Support'] !== 'undefined') {
        data.personalization_program = ""
        data.personalization_creative = ""
        data.ref_page_event = 'Change Currency-Help and Support'
        utag.newCookie(data)
        data['ExtRun'] = utag.dkTrk('499.5')
        retVal = true
    }
    return retVal;
}

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){try{b['dark_mode']=window.matchMedia?String(window.matchMedia('(prefers-color-scheme: dark)').matches):'NA'}catch(e){}} } catch(e){ utag.DB(e); }  },
function(a,b){ try{ if(1){
// 596 - Shopping Cart Page - Page State FBD PCB
if (a === 'view') {
    try {
        var pgSubType = b.page_sub_type
        if (b['page_type'] === 'SC' || b['dom.pathname'].toLowerCase().includes('ordering/presubmit')) {
            // presubmit page does not have a page_type nor page_sub_type
            if(pgSubType === 'CO' || pgSubType === 'POR') {
                // On POR page, check if pre_order_id is present
                if( pgSubType === 'POR' && (b['pre_order_id'] == null || b['pre_order_id'] === '' )) {
                    b['pre_order_id'] = b['order_weborder_number']
                }
                
                // loop through all parts in cart and determine page state
                var tmpArr = []
                var els = document.getElementsByClassName("DetailTag");
                for (var i = 0; i < els.length; i++) {
                    var obj = JSON.parse(els[i].getAttribute('value'))
                    tmpArr.push(obj.supplier_id)
                }
                if(b.page_state !== null && b.page_state !== undefined) {
                    if(b.page_state.includes('Includes Marketplace Parts')) {
                        b.page_state = b.page_state.replace('Includes Marketplace Parts', '')
                    }
                }
                var vnArr = []
                for (var i = 0; i < tmpArr.length; i++) {
                    var tmpA = utag.framework["testForMerchandising"](tmpArr[i])  // check marketplace
                    var tmpB = utag.testForFbdPcb(tmpArr[i])                                    // check fbd and pcb
                    if (tmpA === 'Marketplace Vendor' && tmpB !== 'PCB Vendor') {
                        if (vnArr.indexOf('Includes Marketplace Parts') === -1) vnArr.push('Includes Marketplace Parts')
                    } else if (tmpB === 'PCB Vendor') {
                        if (vnArr.indexOf('Includes PCB Parts') === -1) vnArr.push('Includes PCB Parts')
                    } else if (tmpB === 'FBD Vendor') {
                        if (vnArr.indexOf('Includes FBD Parts') === -1) vnArr.push('Includes FBD Parts')
                    }
                }

                if (vnArr.length > 0) {
                    for (var i = 0; i < vnArr.length; i++) {
                        utag.addPageState(vnArr[i], b)
                    }
                    b["extRun"] = utag.dkTrk('596.1')
                }
            } else {
                if (b.ref_page_state !== null && b.ref_page_state !== undefined) {
                    if(b.page_state == null) {
                        b.page_state = b.ref_page_state
                    } else {
                        var arrA = b.page_state.split(',')
                        var arrB = b.ref_page_state.split(',')
                        for ( var i = 0; i < arrB.length; i++ ) {
                            if (!arrA.includes(arrB[i])) {
                                utag.addPageState(arrB[i], b)
                            }
                        }
                        b["extRun"] = utag.dkTrk('596.2')
                    }
                }
            }
        }
    } catch (e) {
        utag.DB(e)
    }
}

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{utag.runonce = utag.runonce || {};utag.runonce.ext = utag.runonce.ext || {};if(typeof utag.runonce.ext[557]=='undefined'){utag.runonce.ext[557]=1;if(1){
// 557 - Set data after Page Load
// These tags fire only after page views. They do not fire after events
if (a === 'view') {
    if (utag.data['page_type'] === 'TEC') {
        utag.data['ref_page_type'] = ""
        utag.data['ref_page_sub_type'] = ""
        utag.data['ref_page_id'] = ""
        utag.data['ref_page_event'] = ""
    }
    utag.data['view_processed_and_sent'] = true
    document.cookie = "udo-data=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;"
    document.cookie = "wt-tracking=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;"
}

}
}} catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 480 - Process Part List Events after View Tag fired
utag.pushPartListOnConfirmation = function (data) {
    if (utag.pPartListToPost === true) {
        utag.dkStdVars(utag.data);
        if (utag.framework['isOrderConfirmationHTML'](b)) {
            utag.data['ref_page_event'] = 'Submit Order'
            if (typeof utag.ga !== 'undefined' && utag.ga.hasOwnProperty('sendPurchaseEvent')) {
                utag.ga.sendProductListforPurchase(utag.data)
                utag.ga.sendPurchaseEvent()
                utag.clearPartData()
            }
        }
    }
}

// process the Part List Queue
utag.processOrderConfirmation = function () {
    try {
        var uque = utag.queue, i = 0;
        if (typeof uque !== 'undefined' && uque.hasOwnProperty('purchaseEnd')) {
            var charCount = 0;
            if (utag.data['page_sub_type'] === 'SCN') {
                for (i; i < uque.purchaseParts.length; i++) {
                    var PartDesc = uque.purchaseParts[i];
                    charCount = charCount + JSON.stringify(PartDesc).length;
                    utag.pIds.push(PartDesc['part_id'] || '(Not Set)');
                    utag.pSku.push(PartDesc['part_id'] || '(Not Set)');
                    utag.pDesc.push(PartDesc['part_description'] || '(Not Set)');
                    utag.pSup.push(PartDesc['supplier_id'] || '(Not Set)');
                    utag.pQty.push(PartDesc['part_qty'] || '(Not Set)');
                    utag.pCat.push(PartDesc['part_category'] || '(Not Set)');
                    utag.pSStat.push(PartDesc['stock_status'] || '(Not Set)');
                    utag.pPrc.push(PartDesc['line_item_price'] || '(Not Set)');
                    utag.pWID.push(PartDesc['web_id'] || '(Not Set)');
                    utag.pVType.push(utag.framework["testForMerchandising"](PartDesc['supplier_id']) || 'Digi-Key');
                    if (charCount > 18000) {
                        break;
                    }
                }
                utag.sendProductList();
            }
        } else if (utag.data['page_sub_type'] === 'SCN') {
            utag.dkStdVars(utag.data);
            utag.ga.sendPurchaseEvent();
            utag.clearPartData()
        }
    } catch (e) {
        data['ExtRun'] = utag.dkTrk('480-e');
        utag.dkErrorTag(data, e.name, e.message + '--480 -- ' + errDisp);
    }
}

if (a === 'view') {
    if (!(typeof b.personalization_state === 'string' && b.personalization_state.indexOf('"cart2":"classic"') >= 0)) {
        if (b.page_type === 'SC' && b.page_sub_type === 'SCN') {
            window.plIterator = 0;
            waitForParts = setInterval(function () {
                try {
                    if (typeof utag.queue === 'object'
                        && utag.queue.hasOwnProperty('purchaseEnd')
                        && utag.data['view_processed_and_sent']) {
                        clearInterval(waitForParts);
                        utag.processOrderConfirmation();
                    }
                    window.plIterator++;
                    if (window.plIterator > 50) {
                        clearInterval(waitForParts);
                        utag.processOrderConfirmation();
                    }
                } catch (e) {
                    clearInterval(waitForParts);
                }
            }, 200);
        }
    }
}

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 484 - Generate Evergage Tags after PageLoad tag
if (a === 'view') {
    if (typeof utag_cfg_ovrd.evergageCampaigns !== 'undefined') {
        utag.framework.processEvergageCampaigns(utag_cfg_ovrd.evergageCampaigns);
        utag_cfg_ovrd.evergageCampaigns = "";
    }
}
utag_cfg_ovrd.view_processed = true;

} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if(1){
// 558 - Clean up After Tags
utag.data['ExtRun'] = ""
utag.data['ExtDln'] = ""
utag.data['ref_page_category'] = ""
utag.data['ref_page_event'] = ""
utag.data['ref_page_type'] = ""
utag.data['ref_page_sub_type'] = ""
utag.data['ref_page_id'] = ""
utag.data['part_search_results_count'] = ""

} } catch(e){ utag.DB(e) }  }];
  utag.handler.cfg_extend=[{"blr":1,"end":0,"bwq":0,"alr":0,"id":"398"},{"blr":1,"end":0,"bwq":0,"alr":0,"id":"551"},{"blr":1,"end":0,"bwq":0,"alr":0,"id":"552"},{"id":"553","blr":1,"end":0,"alr":0,"bwq":0},{"blr":1,"end":0,"bwq":0,"alr":0,"id":"550"},{"id":"518","blr":1,"end":0,"alr":0,"bwq":0},{"id":"421","alr":0,"bwq":0,"end":0,"blr":1},{"id":"447","alr":0,"bwq":0,"end":0,"blr":1},{"bwq":0,"alr":0,"end":0,"blr":1,"id":"457"},{"id":"459","alr":0,"bwq":0,"end":0,"blr":1},{"id":"466","blr":1,"end":0,"alr":0,"bwq":0},{"blr":1,"end":0,"bwq":0,"alr":0,"id":"471"},{"blr":1,"end":0,"bwq":0,"alr":0,"id":"472"},{"id":"479","alr":0,"bwq":0,"end":0,"blr":1},{"id":"527","blr":1,"end":0,"alr":0,"bwq":0},{"id":"528","alr":0,"bwq":0,"end":0,"blr":1},{"id":"3","blr":0,"end":0,"alr":1,"bwq":0},{"blr":0,"end":0,"bwq":0,"alr":1,"id":"569"},{"id":"397","blr":0,"end":0,"alr":1,"bwq":0},{"blr":0,"end":0,"bwq":0,"alr":1,"id":"429"},{"id":"439","blr":0,"end":0,"alr":1,"bwq":0},{"bwq":0,"alr":1,"end":0,"blr":0,"id":"445"},{"id":"455","alr":1,"bwq":0,"end":0,"blr":0},{"bwq":0,"alr":1,"end":0,"blr":0,"id":"456"},{"id":"435","blr":0,"end":0,"alr":1,"bwq":0},{"bwq":0,"alr":1,"end":0,"blr":0,"id":"570"},{"id":"462","blr":0,"end":0,"alr":1,"bwq":0},{"id":"464","alr":1,"bwq":0,"end":0,"blr":0},{"id":"465","alr":1,"bwq":0,"end":0,"blr":0},{"id":"467","alr":1,"bwq":0,"end":0,"blr":0},{"blr":0,"end":0,"bwq":0,"alr":1,"id":"475"},{"blr":0,"end":0,"bwq":0,"alr":1,"id":"483"},{"bwq":0,"alr":1,"end":0,"blr":0,"id":"491"},{"id":"499","alr":1,"bwq":0,"end":0,"blr":0},{"id":"514","blr":0,"end":0,"alr":1,"bwq":0},{"blr":0,"end":0,"bwq":0,"alr":1,"id":"596"},{"id":"557","blr":0,"end":1,"alr":0,"bwq":0},{"blr":0,"end":1,"bwq":0,"alr":0,"id":"480"},{"bwq":0,"alr":0,"end":1,"blr":0,"id":"484"},{"blr":0,"end":1,"bwq":0,"alr":0,"id":"558"}];
  utag.loader.initcfg = function(){
    utag.loader.cfg={"461":{load:(((utag.cond[141])  &&  (utag.cond[156])  &&  (utag.cond[131])  &&  (utag.cond[101])  &&  (utag.cond[151])  &&  (utag.cond[158])  &&  (utag.cond[142]))),send:1,v:202405201736,wait:1,tid:7110},"425":{load:((((utag.cond[141])  &&  (utag.cond[132])  &&  (utag.cond[158])  &&  (utag.cond[142])) && !(utag.cond[149]))),send:1,v:202406141701,wait:1,tid:7110},"445":{load:(((utag.cond[91])  &&  (utag.cond[141])  &&  (utag.cond[156])  &&  (utag.cond[151])  &&  (utag.cond[158])  &&  (utag.cond[142]))),send:1,v:202406141701,wait:1,tid:7110}};
utag.loader.cfgsort=["461","425","445"];
  }
utag.loader.initcfg();
}

  
  if(typeof utag_cfg_ovrd!='undefined'){for(utag._i in utag.loader.GV(utag_cfg_ovrd))utag.cfg[utag._i]=utag_cfg_ovrd[utag._i]};
  utag.loader.PINIT = function(a,b,c){
    utag.DB("Pre-INIT");
    if (utag.cfg.noload) {
      return;
    }

    try {
      // Initialize utag.data
      this.GET();
      // Even if noview flag is set, we still want to load in tags and have them ready to fire
      // blr = "before load rules"
      if(utag.handler.RE('view',utag.data,"blr")){
        utag.handler.LR(utag.data);
      }
      
    }catch(e){utag.DB(e)};
    // process 'blocking' tags (tags that need to run first)
    a=this.cfg;
    c=0;
    for (b in this.GV(a)) {
      // external .js files (currency converter tag) are blocking
      if(a[b].block == 1 || (a[b].load>0 && (typeof a[b].src!='undefined'&&a[b].src!=''))){
        a[b].block = 1;
        c=1;
        this.bq[b]=1;
      }
    }
    if(c==1) {
      for (b in this.GV(a)) {
        if(a[b].block){
          // handle case of bundled and blocking (change 4 to 1)
          // (bundled tags that do not have a .src should really never be set to block... they just run first)
          a[b].id=b; 
          if(a[b].load==4)a[b].load=1; 
 	  a[b].cb=function(){
            var d=this.uid;
            utag.loader.cfg[d].cbf=1;
            utag.loader.LOAD(d)
          };
          this.AS(a[b]);
        }
      }
    }
    if(c==0)this.INIT();
  };
  utag.loader.INIT = function(a, b, c, d, e) {
    utag.DB('utag.loader.INIT');
    if (this.ol == 1) return -1;
    else this.ol = 1;
    // The All Tags scope extensions run after blocking tags complete
    // The noview flag means to skip these Extensions (will run later for manual utag.view call)
    if(utag.cfg.noview!=true)utag.handler.RE('view',utag.data,"alr"); 

    utag.rpt.ts['i'] = new Date();
     
    d = this.cfgsort;
    // TODO: Publish engine should sort the bundled tags first..
    for (a=0;a<d.length;a++){
      e = d[a];
      b = this.cfg[e];
      b.id = e;
      if(b.block != 1){
        // do not wait if the utag.cfg.noview flag is set and the tag is bundled
        if (utag.loader.bk[b.id] || ((utag.cfg.readywait||utag.cfg.noview) && b.load==4)){
          this.f[b.id]=0;
          utag.loader.LOAD(b.id)
        }else if (b.wait == 1 && utag.loader.rf == 0) {
	  utag.DB('utag.loader.INIT: waiting ' + b.id);
          this.wq.push(b)
          this.f[b.id]=2;
        }else if (b.load>0){
	  utag.DB('utag.loader.INIT: loading ' + b.id);
	  this.lq.push(b);
          this.AS(b);
        }
      }
    }
          
    if (this.wq.length > 0) utag.loader.EV('', 'ready', function(a) {
      if(utag.loader.rf==0){
        utag.DB('READY:utag.loader.wq');
        utag.loader.rf=1;
        utag.loader.WQ();
      }
    });
    else if(this.lq.length>0)utag.loader.rf=1;
    else if(this.lq.length==0)utag.loader.END();

    return 1
  };
  utag.loader.EV('', 'ready', function(a) {if(utag.loader.efr!=1){utag.loader.efr=1;try{ try{ if(1){
// 434 - Get Header Nav Hierarchy
var getheaderLinkClickedText
var checkCurrentHrefURL
utag.getResourcesLinkText = function (checkCurrentHrefURL) {
    var cur_url = checkCurrentHrefURL.href.toLowerCase()
    if (cur_url.match(/part-tracing/) !== null) {
        getheaderLinkClickedText = 'Part Tracing'
    } else if (cur_url.match(/dkred/) !== null) {
        getheaderLinkClickedText = 'DKRed'
    } else if (cur_url.match(/startup-resources/) !== null) {
        getheaderLinkClickedText = 'Startups'
    } else if (cur_url.match(/forum.digikey.com/) !== null) {
        getheaderLinkClickedText = 'TechForum'
    } else if (cur_url.match(/webinars/) !== null) {
        getheaderLinkClickedText = 'Webinars'
    } else if (cur_url.match(/3d-printing/) !== null) {
        getheaderLinkClickedText = '3D Printing'
    }
    return getheaderLinkClickedText
}

utag.getHeaderNavHrchy = function (data, sElements, event) {
    var submenu = []
    var text = '', identifier = '', texta = [], i = 0, x = 0, delineator = '', innrtxt = ""
    var titleElm = [], itemElm = [], flyElm = [], flyout = ""
    var results = "", menuType = 'Standard'

    try {
        // Code uses text from the html page so it only works for pages in English.  An import
        // table is used to poplate dimension for other languages.
        if (utag.data['page_language'] !== 'en') return
        if (sElements.hasOwnProperty('Logout')) {
            data.ref_page_event = 'Log Out'
            return
        }
        var EventPath = event.path
        EventPath == null ? EventPath = event.composedPath() : EventPath
        for (i = EventPath.length - 1; i >= 0; i--) {
            if (EventPath[i].nodeName === 'LI' && EventPath[i].className === 'flymenu__section flymenu__multiple flymenu__open') {
                results += delineator + EventPath[i].children[0].innerText.toUpperCase().trim()
                menuType = 'Multi Menu'
            }
            else {
                menuType = ''
            }
            // flymenu_section is where the style of menu is determined. The different styles of menu have a different structure. 
            if (menuType !== 'Multi Menu') {
                if (EventPath[i].nodeName === 'LI' && EventPath[i].className === 'flymenu__section flymenu__open') {
                    results += delineator + EventPath[i].children[0].innerText.toUpperCase().trim()
                } else if (EventPath[i].nodeName === 'LI' && EventPath[i].className === 'flymenu__item flymenu__open') {
                    results += delineator + EventPath[i].children[0].innerText.trim()
                } else if (EventPath[i].nodeName === 'LI' && EventPath[i].className === 'flymenu__item flymenu__more flymenu__open') {//Updated on Aug1721
                    results += delineator + EventPath[i].children[0].innerText.trim()
                    if (typeof results == "undefined") {
                        var checkResourcesTextLink = utag.getResourcesLinkText(EventPath[i])
                        if ((checkResourcesTextLink !== '') && (checkResourcesTextLink !== undefined) && (checkResourcesTextLink !== null)) {
                            results += delineator + checkResourcesTextLink
                        }
                    }
                } else if (EventPath[i].nodeName === 'DIV' && EventPath[i].className === 'flymenu__featured') {
                    results += delineator + "Featured: " + EventPath[i].innerText.trim()
                } else if (EventPath[i].nodeName === 'A') {
                    var checkResourcesTextLink = utag.getResourcesLinkText(EventPath[i])
                    if ((checkResourcesTextLink !== '') && (checkResourcesTextLink !== undefined) && (checkResourcesTextLink !== null)) {
                        results += delineator + checkResourcesTextLink
                    }
                }
            }
            if (results !== "") delineator = '->'
        }
        // Handle the special case for users that are Logged In and those who are not.
        if (results.length > 0) {
            if (results.indexOf('HELLO') === 0) {
                results = 'MyDigiKey'
            }
            if (results.indexOf('LOGIN OR') === 0) {
                results = 'Login or Register'
            }
        }
        data.ref_page_category = results || data.ref_page_category
        data['ExtRun'] = utag.dkTrk('434.2')
    } catch (e) {
        utag.DB(e)
    }
}

} } catch(e){ utag.DB(e) }  }catch(e){utag.DB(e)};
try{ try{ if(1){
// 428 - Functions for dkCookie
utag.dkCookieImpl = function (dataObj) {
    if (typeof dataObj === 'object') {
        var tag = ""
        var del = ""
        if (typeof utag.newEventDefaultValues === 'function') utag.newEventDefaultValues(dataObj, 'cookie')
        for (var i in dataObj) {
            if (typeof dataObj[i] === 'string') {
                dataObj[i] = dataObj[i].replace(/,/g, '@@')
                try {
                    tag += del + i + '=' + decodeURIComponent(dataObj[i])
                } catch (e) {
                    tag += del + i + '=' + dataObj[i]
                }
                del = ","
            }
        }
        tag += ',ExtRun=' + decodeURIComponent(utag.dkTrk("428.5"))
        var now = new Date()
        var time = now.getTime()
        time += 600 * 1000
        now.setTime(time)
        var enctag = encodeURIComponent(tag)
        document.cookie = "utm_data_x=" + enctag + ";path=/;expires=" + now.toUTCString() + ";domain=" + utag.cfg.domainForCookies + ";"
        if (typeof b !== 'undefined') b['cp.utm_data_x'] = enctag
        utag.data['cp.utm_data_x'] = enctag
        utag.DB('Write utm_data_x')
        utag.DB(tag)
    }
}

utag.newCookie = function (a) {
    try {
        utag.dkTrk("428.1")
        utag.dkCookieImpl(a)
    } catch (e) {
        utag.DB(e)
    }
}

utag.dkCookie = function (a) {
    try {
        if (a.indexOf("Initiate Search") >= 0) return
        var utagData = utag.dkParseStringtoDataObj(a)
        utag.dkTrk('428.2')
        utag.dkCookieImpl(utagData)
        utag.data.prorityCookie = true
    } catch (e) {
        utag.DB(e)
    }
}

utag.dkISCookie = function (a) {
    try {
        var utagData = utag.dkParseStringtoDataObj(a);
        utag.dkTrk('428.4')
        utag.dkCookieImpl(utagData)
        utag.data.prorityCookie = true
    } catch (e) {
        utag.DB(e)
    }
}

} } catch(e){ utag.DB(e) }  }catch(e){utag.DB(e)};
try{ try{ if(1){
// 554 - Header Tagging
utag.checkClassPath = function(a,classStr) {
    var element = a.target
    var counter = 0
    while (element && counter < 10) {
        if (element.className.indexOf(classStr)>=0) {
            utag.dkTrk('554.1')
            return true
        }
        counter++
        element = element.parentElement
    }
    utag.dkTrk('554.2')
    return false
}
  
utag.tagSearchKeypressEvent = function(a,b,c,d,e) {
    var enterKeyPressed = false
    if (a.key === 'Enter') {
        enterKeyPressed = true}
    else if (a.keyCode === 13) {
        enterKeyPressed = true
    }
    if (!enterKeyPressed) return

    var cv = "ref_page_event=Initiate Search"
    if (utag.data.do_not_track_for_consent === 'yes' && typeof utag.clearDoNotTrack === 'function') {
        fStage = 'Clear Consent'
        utag.clearDoNotTrack('unknown',cv)
    }
    if (utag.checkClassPath(a,'show-advanced')) {
        cv += ',html_element1=show-advanced'
    }
    utag.dkTrk('554.3')
    utag.dkISCookie(cv)
}

utag.tagSearchKeypress = function (searchElements) {
    var i
    var i1
    var navElement = []
    utag.DB('Add Nav Events')
    for (i = 0; i < searchElements.length; i++) {
        navElement = searchElements[i]
        if (navElement['type'] == 'c') {
            var elementy = document.getElementsByClassName(navElement['element'])
            if (elementy !== null && typeof elementy !== undefined) {
                for (i1 = 0; i1 < elementy.length; i1++) {
                    utag.loader.EV(elementy[i1], 'keydown', utag.tagSearchKeypressEvent)
                }
            }
        } else if (navElement['type'] == 'i') {
            var elementx = document.getElementById(navElement['element'])
            if (elementx !== null && typeof elementx !== 'undefined') {
                utag.loader.EV(elementx, 'keydown', utag.tagSearchKeypressEvent)
            }
        }
    }
}

utag.tagSearchKeypress([
    {type:'i',element:'custom-search'},
    {type:'i',element:'header-search'},
    {type:'c',element:'product-search-text'},
    {type:'i',element:'header-search'},
    {type:'i',element:'header_search_bar'},
    {type:'i',element:'search-textbox'},
    {type:'c',element:'search-textbox'}
])

} } catch(e){ utag.DB(e) }  }catch(e){utag.DB(e)};
try{ try{ if(1){
// 446 - Search Tagging
utag.dkGetEventForPageType = function (pageType) {
    retval = "";
    switch (utag.dkConCatPageType()) {
        case 'RDL-DP':
        case 'RDL-HP':
        case 'RDL-RP':
            retval = "ref_page_event=Search RDL";
            break;
        case 'VI-VL':
            retval = 'ref_page_event=Search Video Library';
            break;
        case 'PS-FAM':
        case 'PS-CAT':
            retval = 'ref_page_event=Search Within Results';
            break;
    }
    return retval;
}

utag.tagGSearchNav = function (a, b, c, d, e) {
    if (a.target.type === 'text') return;
    var pagtp = utag.dkConCatPageType();
    var cv = utag.dkGetEventForPageType(pagtp);
    if (cv !== "") {
        utag.dkTrk('446.1');
        utag.dkISCookie(cv);
    }
};

utag.tagGSearchKeypressEvent = function (a, b, c, d, e) {
    var enterKeyPressed = false;
    if (a.key === 'Enter') { enterKeyPressed = true; }
    else if (a.keyCode === 13) { enterKeyPressed = true; }
    if (!enterKeyPressed) return;

    var pagtp = utag.dkConCatPageType();
    var cv = utag.dkGetEventForPageType();
    if (cv !== "") {
        utag.dkTrk("446.2");
        utag.dkISCookie(cv);
    }
};

utag.tagGSearch = function (searchElements) {
    var i, i1;
    var navElement = [];
    for (i = 0; i < searchElements.length; i++) {
        navElement = searchElements[i];
        if (navElement['type'] == 'c') {
            var elementy = document.getElementsByClassName(navElement['element']);
            if (elementy !== null && typeof elementy !== undefined) {
                for (i1 = 0; i1 < elementy.length; i1++) {
                    utag.loader.EV(elementy[i1], 'mousedown', utag.tagGSearchNav);
                    utag.loader.EV(elementy[i1], 'keydown', utag.tagGSearchKeypressEvent);
                }
            }
        } else if (navElement['type'] == 'i') {
            var elementx = document.getElementById(navElement['element']);
            if (elementx !== null && typeof elementx !== 'undefined') {
                utag.loader.EV(elementx, 'mousedown', utag.tagGSearchNav);
                utag.loader.EV(elementx, 'keydown', utag.tagGSearchKeypressEvent);
            }
        }
    }
}

utag.tagGSearch([{ type: 'c', element: 'SearchBar' }, { type: 'c', element: 'searchbar' }, { type: 'c', element: 'search-within-clone' }
    , { type: 'i', element: 'search-keyword' }, { type: 'i', element: 'search-within-button' }, { type: 'c', element: 'psdkdirchanger search-input' }]);

} } catch(e){ utag.DB(e) }  }catch(e){utag.DB(e)};
try{ try{ if(1){
// 450 - Framework - Test For Trackable Element
utag.framework = utag.framework || {};

utag.framework["checkSpecializedTrackableEvents"] = function (element) {
    var retval = false
    if (element == null) { return retVal }
    if (element.getAttribute('aria-controls') !== null && element.getAttribute('aria-controls') !== "") {
        utag.dkTrk('450.7')
        retval = true
    } else if ((element.classList.contains('swiper-slide')) || (element.classList.contains('dk-tab-item'))) {
        utag.dkTrk('450.8')
        retval = true
    } else if (element.id === 'saveForLaterButton' && element.classList.contains('dk-btn__secondary')) {
        utag.dkTrk('450.9')
        retval = true
    } else if (element.tagName.toLowerCase() === 'copy-icon') {
        utag.dkTrk('450.10')
        retval = true
    } else if (element.getAttribute('track-data') === 'ref_page_event=Change Parametric Search Presentation') {
        utag.dkTrk('450.11')
        retval = true
    } else if (element.id === 'btn-example-list' && element.getAttribute('track-data') ==='ref_page_event=Example List') {
        utag.dkTrk('450.12')
        retval = true
    }
    return retval
}

utag.framework["testForTrackableElement"] = function (element) {
    var trackableElement = false
    if (typeof element.tagName !== 'string') return trackableElement
    if (element.tagName.toLowerCase().match(/^a$|^button$|^span$|^img$|^dk-button$|^dk-callout$/i) !== null) {
        utag.dkTrk('450.1')
        trackableElement = true
    } else if (element.tagName.toLowerCase() === 'input' && element.type.toLowerCase().match(/button|submit/i) !== null) {
        utag.dkTrk('450.2')
        trackableElement = true
    } else if (element.onclick !== null || element.onchange !== null) {
        if (element.className !== "flymenu-body") {
            utag.dkTrk('450.3')
            trackableElement = true
        }
    } else if (element.nodeName.toLowerCase() === 'select') {
        utag.dkTrk('450.4')
        trackableElement = true
    } else if (utag.data['page_type'] === 'HP' && utag.data['page_sub_type'] === 'HP' ) {
        if (element.classList.contains('order-number') && element.tagName.toLowerCase() === 'td' && element.getAttribute('data-ordernumber') !== null) {
            utag.dkTrk('450.5')
            trackableElement = true
        }
    } else if (element.id === ('carouselContainer') && element.tagName.toLowerCase() === 'div') {
        if (utag.data['page_type'] === 'PS' && utag.data['page_sub_type'] === 'FAM' ) {
            utag.dkTrk('450.6')
            trackableElement = true
        }
    } else if (!trackableElement && typeof utag.framework.hasOwnProperty("checkSpecializedTrackableEvents")) {
        trackableElement = utag.framework["checkSpecializedTrackableEvents"](element)
    }
    return trackableElement
}

} } catch(e){ utag.DB(e) }  }catch(e){utag.DB(e)};
try{ try{ if(1){
// 409 - Framework for New Cookies
// Control what is implemented in test.
utag.parseDataStr = function (str) {
    var returnObj = {}, e = str.split(";")
    for (var i = 0; i < e.length; i++) {
        if (e[i].indexOf('=') >= 0) {
            var r = e[i].split("=")
            r[0] = r[0].trim()
            r[1] = r[1].trim()
            if (r[0].length > 0 && r[1].length > 0) {
                returnObj[(r[0])] = r[1]
            }
        } else if (e[0] === str) {
            returnObj['ref_page_event'] = str
            break
        }
    }
    return returnObj
}

utag.dkConCatPageType = function () {
    var pgType = utag.data['page_type'] || utag_data['page_type'] || ""
    var pgSType = utag.data['page_sub_type'] || utag_data['page_sub_type'] || ""
    return pgType + "-" + pgSType
}

// Allow the eventListeners to be configured by page where necessary.  On SSA pages, where pageloads
// are initiated with dkView, page_type and page_subtype aren't available when this is evaluated.
var evntLoad = { EV: 'mousedown', CAP: 'false' }
var testArry = [
    { ST: 'all', PT: 'BLG-HP', EV: 'click', CAP: 'false' },
    { ST: 'all', PT: 'MK-LP', EV: 'click', CAP: 'false' },
    { ST: 'all', PT: 'RE-DKE', EV: 'click', CAP: 'false' },
    { ST: 'all', PT: 'IDA-HP', EV: 'click', CAP: 'false' },
    { ST: 'all', PT: 'IDA-RE', EV: 'click', CAP: 'false' },
    { ST: 'all', PT: 'HP-HP', EV: 'click', CAP: 'false' },
    { ST: 'all', PT: 'PH-PHN', EV: 'click', CAP: 'false' },
    { ST: 'all', PT: 'TZ-SB', EV: 'click', CAP: 'false' },
    { ST: 'all', PT: 'RE-EVT', EV: 'click', CAP: 'false' },
    { ST: 'all', PT: 'NR-HP', EV: 'click', CAP: 'false' },
    { ST: 'all', PT: 'NR-PR', EV: 'click', CAP: 'false' },
    { ST: 'all', PT: 'NR-ITN', EV: 'click', CAP: 'false' },
    { ST: 'all', PT: 'NR-AWD', EV: 'click', CAP: 'false' },
    { ST: 'all', PT: 'VI-VL', EV: 'click', CAP: 'false' },
    { ST: 'digikey.cn', PT: 'SC-POR', EV: 'click', CAP: 'false' },
]
if (typeof utag.data['page_type'] === 'string') {
    for (var x of testArry) {
        if (utag.dkConCatPageType() === x.PT && (x.ST === 'all' || utag.data['dom.domain'].indexOf(x.ST))) {
            evntLoad.EV = x.EV
            evntLoad.CAP = x.CAP
        }
    }
} else if (utag.data["dom.pathname"].match(/products\/super-category/i)) {
    evntLoad = { EV: 'mousedown', CAP: 'true' }
} else if (utag.data["dom.pathname"].match(/\/ordering\/preview$/i)) {
    evntLoad = { EV: 'click', CAP: 'false' }
}

utag.collectSpecElements = function (element, sElements, cntrl) {
    if (typeof element.className !== 'string') return
    // for Additional Header
    if (element.className.indexOf('featured__flyout__text') >= 0 || element.className.indexOf('flymenu__featured') >= 0 || element.className.indexOf('cta-button') >= 0) sElements['Flyout'] = element
    if (typeof element.href !== 'undefined') {
        if (element.href.toLowerCase().indexOf('logout') >= 0) sElements['Logout'] = element    // 434, getHeaderNavHrchy
        if (element.href.toLowerCase().indexOf('/help/authorized-distributor') >= 0) sElements['ECIA Distributor'] = element    // 464.1, fixUpFooter
    }

    if (element.className.indexOf('country-drawer') >= 0 && element.className.indexOf('country-drawer closed') < 0) sElements['Change Country'] = element       // 499.2
    if (element.className.indexOf('lang-dropdown-list') >= 0) sElements['Change Language'] = element                                                            // 499.1
    if (element.className.indexOf('cur-dropdown-list') >= 0) sElements['Change Currency'] = element                                                             // 499.3
    if (element.className.indexOf('currency-prompt-update-preferences-button dk-btn__primary') >= 0) sElements['Change Currency-Update Preferences'] = element  // 499.4
    if (element.className.indexOf('dk-link bottom-link') >= 0 && typeof element.href != 'undefined' && element.href.indexOf('/resources/local-support') >= 0) {
        sElements['Change Currency-Help and Support'] = element                                                                                                 // 499.5
    }
    // for Part Search Family Page
    if (element.className.indexOf('lnkDatasheet') >= 0) sElements['Asset'] = element                                                                            // 435.1
    if (element.className.indexOf('tr-qtyAvailable') >= 0) sElements['Help for Parts'] = element                                                                // 435.2
    if (element.className.indexOf('tr-packaging') >= 0) sElements['Help for Parts'] = element                                                                   // 435.2
    if (element.getAttribute('data-testid') === 'data-table-mfr-link') sElements['Select Manufacturer'] = element                                               // 435.3
    if (element.className.indexOf('tr-series') >= 0) sElements['View Series'] = element                                                                         // 435.4
    if (element.className.indexOf('catfiltertopitem') >= 0) sElements['Cat Header'] = element                                                                   // 435.6
    if (element.className.indexOf('newProductCategory') >= 0) sElements['Cat New Product'] = element                                                            // 435.7
    if (element.id === 'addtoorderbutton' || element.id === 'update-addToOrder-btn') sElements['Add Part'] = element                                            // 435.8

    // for Part Detail Page
    if (element.className.indexOf('link') >= 0 && typeof element.href != 'undefined' && element.href.indexOf('/local-support#FAQs6') >= 0) sElements['Select Learn More'] = element     //for PDP & SC - 435.15
    if (element.getAttribute('data-testid') && element.getAttribute('data-testid').includes('alt-package-card')) sElements['Alternate Packaging'] = element                             // 435.29
    if ((element.closest('[data-testid="data-table-Documents & Media"]') || element.closest('[data-testid="docs-media-table"]')) && element.nodeName.toLowerCase() === 'a') {
        sElements['Documents Media'] = element  // fixUpPartDetail Documents & Media Table Fix
    }
    if (element.closest('[data-testid="card-association"]')) {
        sElements['Card Association'] = element  // fixUpPartDetail Substitutes
    }
    // for Part Search Category Page
    if (element.className.indexOf('chosen-results') >= 0) {
        sElements['Supplier Search'] = element  // 435.5
        cntrl.trackableElement = true
    }

    // Part Search 2.0
    // keep the data-term-key attribute handling.  It clears part_search_term, etc. when the user removes the last search term
    if (element.getAttribute('data-term-key')) sElements['Search Term'] = element                                                                                           // 435.9
    // Keep the following two elements. It is a Search 2 feature that is implemented by the Rocket team for the search term dropdowns
    if (element.className.indexOf('suggestions--part-number') >= 0) sElements['Part Number Type Ahead'] = element                                                           // 435.10
    if (element.className.indexOf('search__suggestions') >= 0 && element.className.indexOf('suggestions--part-number') < 0) sElements['Categories Type Ahead'] = element    // 435.11
    if (element.getAttribute('data-testid') === 'filter-box-inner-ref') sElements['Filter on Supplier'] = element                                                           // 435.12
    if (element.getAttribute('data-testid') === 'data-table-0-product-number') sElements['Select Part'] = element                                                           // 435.13
    if (element.getAttribute('data-atag') === 'tr-manufacturer' || element.getAttribute('data-atag') == 'tr-supplier') sElements['Select Manufacturer'] = element           // 435.16
    if (element.getAttribute('data-atag') === 'tr-series') sElements['View Series'] = element                                                                               // 435.17
    if (element.getAttribute('data-testid') === 'per-page-selector') sElements['Change Number of Results Displayed'] = element                                              // 435.18
    if (element.getAttribute('data-testid') === 'download-table-button') sElements['Download Table'] = element                                                              // 435.19
    if (element.getAttribute('data-testid') === 'overview-supplier') sElements['Link to Supplier'] = element                                                                // 435.20
    if (element.getAttribute('data-testid') === 'marketplace-messages') sElements['View Marketplace Message'] = element                                                     // 435.21
    if (element.getAttribute('data-testid') === 'pagination-container') sElements['Change Page in Search Results'] = element                                                // 435.22
    if (element.getAttribute('data-testid') === 'help-icon-trigger') sElements['Help for Parts'] = element                                                                  // 435.23
    if (element.getAttribute('data-testid') === 'compare-button') sElements['Click Compare Parts'] = element                                                                // 435.25
    if (element.getAttribute('data-testid') === 'shared-toggle') sElements['Hide or Expose Shared Attributes'] = element                                                    // 435.26
    if (element.getAttribute('data-testid') === 'remove-column-button') sElements['Remove Part from Comparison'] = element                                                  // 435.27
    if (element.getAttribute('data-testid') === 'compare-table') sElements['Link from Product Comparison'] = element                                                        // 435.28
    if (element.getAttribute('data-testid') != null && element.getAttribute('data-testid').includes('parent-category-container-')) sElements['SR Jump to Category'] = element                                              // 435.34

    // for Shopping Cart
    if (element.className.indexOf('button-checkout') >= 0 || element.id === 'summary-checkout-btn' || element.id === 'cart-layout-checkout-btn') sElements['Checkout'] = element                // 444.1
    if (element.id === 'btnAddToCart' || element.id === 'btnAddToNewCart') sElements['Upload File'] = element                                                                                   // 444.6
    if (element.id === 'btnImportParts') sElements['Add Part List'] = element                                                                                                                   // 444.4
    if (element.className.indexOf('btnAddToCart') >= 0) sElements['Add Part Manually'] = element                                                                                                // 444.5
    if (element.id === 'cart-page:addParts') sElements['Add Part List'] = element       // 444.4 China Cart   
    if (element.id === 'cart-page:addPart') sElements['Add Part Manually'] = element  // 444.5 China Cart
    if (element.id === 'WC_SubmitOrderBtn' || element.id === 'WC_SubmitOrderBtn2') sElements['Submit Order'] = element                                                                          // 435.14 China
    if ((element.className.indexOf('submit-button') > -1 && utag.data.page_content_sub_group == "Order Preview") || element.id === 'checkout-continue-btn') sElements['Submit Order'] = element // 435.14 Updated for China Aug2721
    if (element.className.indexOf('cartRowShippedByMessage') >= 0) sElements['View Marketplace Message'] = element                                                                              // 435.21, 444.7
    
    // for China Registration after purchase
    if (element.getAttribute('data-testid') === 'quick-reg-submit' && dkDom.includes('.cn') && window.location.href.toLowerCase().includes('ordering')) {
        sElements['China Continue Registration'] = element  // 444.4
    }
    if (element.getAttribute('data-testid') === 'quick-reg-otp-submit' && dkDom.includes('.cn') && window.location.href.toLowerCase().includes('ordering')) {
        sElements['China Submit Registration'] = element    // 444.4
    }

    // Share My Cart with EKOM button click
    if (element.id === 'ekomButton') sElements['Share My Cart with EKOM'] = element     // 444.9

    // for Supplier Centers
    if (element.className.indexOf('supplier-result-container') >= 0) {      // 445.1
        sElements['Link to Newest Products'] = element
        cntrl.trackableElement = true
    }

    if (element.id === 'nav') {                     // 445.2
        sElements['Supplier Page Nav'] = element
        cntrl.trackableElement = true
    }
    // for PCB Builder
    if (element.className.indexOf('dk-tab-item') >= 0) sElements['Tab Item'] = element      // 465.2

    // for Evergage Personalization
    if (element.id.indexOf('evergage-tooltip') >= 0) {      // generateTag, generateAdditionalTag
        sElements['Evergage Click'] = element
    }
    // for Help
    if (element.className.indexOf('expand-section-link') >= 0) {        // 465.1
        sElements['Expand Help Section'] = element
        cntrl.trackableElement = true
    }
    // for Returns page
    if (element.classList.contains('dk-btn__primary') && element.classList.contains('returns-launch-chat-btn')) {
        sElements['Return Launch Chat'] = element
        cntrl.trackableElement = true
    }
}

utag.sendDebuggingTag = function (data) {
    return;     // 09232022 - no current debugging - left for example
    var pageDat = data.page_type;
    pageDat += "-" + data.page_sub_type;
    pageDat += "--" + utag.data['dom.pathname'];
    switch (utag.dkConCatPageType()) {
        case 'HP-HP': // Added for Add to Cart button
            var myDom = window.location.hostname.substr(-2).toLowerCase()
            if (myDom === 'cn' && (data.ref_page_event === 'Supplier Promo Click' || data.ref_page_event === 'Supplier%20Promo%20Click')) {
                utag.link({ event_category: 'Debug Info', ref_page_event: data.ref_page_event + ' CN Clicked', event_label: pageDat });
            }
            break;
    }
}

utag.postDCSpecializedFunc = function (tags, sElements, cntrl, event, href) {
    var pgType = utag.data['page_type']
    var pgSubType = utag.data['page_sub_type']
    var pgTitle = utag.data['page_title']
    var rpe = tags.ref_page_event
    if (rpe === 'Header Nav') {
        if (typeof utag.getHeaderNavHrchy !== 'undefined') utag.getHeaderNavHrchy(tags, sElements, event)
    } else if (rpe === 'Footer Nav' || rpe === 'Footer Nav - Contact Us') {
        if (typeof utag.fixUpFooter === 'function') cntrl.eventType = utag.fixUpFooter(tags, sElements, cntrl.eventType)
    } else if (pgType === 'PS' && (pgSubType === 'FAM' || pgSubType === 'CAT' || pgSubType === 'PD' || pgSubType === 'SR' || pgSubType === 'PCAT')) {
        if (typeof utag.fixUpFamilyPage !== 'undefined') cntrl.eventType = utag.fixUpFamilyPage(tags, sElements, cntrl.eventType)
        if (pgType === 'PS' && pgSubType === 'PD' && pgTitle === 'Part Detail') {// Added Aug1621 for utm_data_atc
            if (typeof utag.fixUpPartDetail !== 'undefined') cntrl.eventType = utag.fixUpPartDetail(tags, sElements, cntrl.eventType, href)
        }
    } else if (pgType === 'MDK' && pgSubType === 'RO' && pgTitle === 'Order Status') {// Added Aug1621 for utm_data_do
        if (typeof utag.fixUpShoppingCart !== 'undefined') cntrl.eventType = utag.fixUpShoppingCart(tags, sElements, cntrl.eventType)
    } else if (pgType === 'SC' && pgSubType === 'CO' && pgTitle === 'Add Part') {// Added Aug1621 for Checkout
        if (typeof utag.fixUpShoppingCart !== 'undefined') cntrl.eventType = utag.fixUpShoppingCart(tags, sElements, cntrl.eventType)
    } else if (pgType === 'SC' && pgSubType === 'SCAD' && pgTitle === 'Shopping Cart - AddressPreview') {// Updated Aug2521 for utm_data_so
        if (typeof utag.fixUpShoppingCart !== 'undefined') cntrl.eventType = utag.fixUpShoppingCart(tags, sElements, cntrl.eventType)
    } else if (pgType === 'SP' && pgSubType === 'SP') {
        if (typeof utag.fixUpSuppliers !== 'undefined') utag.fixUpSuppliers(tags, sElements)
    } else if (pgType === 'RE') {
        if (typeof utag.fixUpResources === 'function') cntrl.eventType = utag.fixUpResources(tags, sElements, cntrl.eventType)
    } else if (pgType === 'PCB') {
        if (typeof utag.fixUpResources === 'function') cntrl.eventType = utag.fixUpResources(tags, sElements, cntrl.eventType)
    } else if (pgType === 'SC' && utag.data['page_site'] === 'CN') {
        var pgTypes = ['SCAD', 'VAT', 'EXP', 'SI']
        if (pgSubType === 'CO' || pgSubType === 'POR') {
            if (typeof utag.fixUpShoppingCart !== 'undefined') cntrl.eventType = utag.fixUpShoppingCart(tags, sElements, cntrl.eventType)
        } else if (pgTypes.includes(pgSubType)) {
            if (typeof utag.fixUpShoppingCartChina !== 'undefined') cntrl.eventType = utag.fixUpShoppingCartChina(tags, sElements, cntrl.eventType, pgSubType)
        }
    }
}

utag.generateTag = function (sElements, href, tags, cntrl) {
    if (typeof sElements !== 'object') return
    if (utag.data['page_type'] === 'SC' && utag.data['page_sub_type'] === 'CO') {
        if (typeof utag.generateShoppingCartTags !== 'undefined') {
            cntrl.tagSent = utag.generateShoppingCartTags(tags, sElements, href)
        }
    } else if (utag.data['page_type'] === 'SP' && utag.data['page_sub_type'] === 'SP') {
        if (typeof utag.generateSupplierTags !== 'undefined') {
            cntrl.tagSent = utag.generateSupplierTags(tags, sElements, href)
        }
    } else if (utag.data['page_type'] === 'PS' && utag.data['page_sub_type'].match(/^CAT$|^FAM$|^PD$|^SR$|^PCAT$|^CMP$/)) {
        if (typeof utag.generatePartSearchTags !== 'undefined') {
            cntrl.tagSent = utag.generatePartSearchTags(tags, sElements, href)
        }
    } else if ( sElements.hasOwnProperty('China Continue Registration') || sElements.hasOwnProperty('China Submit Registration')) {
        if (typeof utag.generateShoppingCartTags !== 'undefined') {
            cntrl.tagSent = utag.generateShoppingCartTags(tags, sElements, href)
        }
    }
    if (typeof utag.generateFixUpAllPages !== 'undefined')
        cntrl.tagSent = utag.generateFixUpAllPages(tags, sElements)
}

utag.generateAdditionalTags = function (sElements, href, tags, cntrl) {
    return false
}

utag.clearTagValues = function (tagData) {
    var e = 1
}

utag.processTags = function (a, b, c, d, e) {
    var uFramework = utag.framework
    var fState = 'OneTrust'
    var fStage = 'Start';
    try {
        utag.data.tagSent = false;
        var cntrl = {
            'trackableElement': false,
            'eventType': 'undefined',
            'tagAssigned': false,
            'tagSent': false,
            'repressTag': false
        }
        var element = a.target, counter = 0, href = "", tags = {}, rawProp = {}, nProperty = ""
        var labels = [], sElements = {}
        var htmlProperties = ['html_element1', 'html_element2', 'html_element3', 'html_element4'], htmlIdx = 0, htmlLst = {}
        if (utag.data.priorityLink === true) return

        fStage = 'Start - Preserve Data'
        if (utag.data.hasOwnProperty('do_not_track_for_consent') && !utag.hasOwnProperty('utag_data_at_pageLoad')) {
              utag.preserveOriginalUtagData()
        }

        fStage = 'Start - Process Elements'
        while (element && counter < 50) {
            if (href === "" && typeof element.href !== 'undefined' && element.tagName !== 'IMG') {
                href = element.href
            }

            fStage = 'Start - Check Trackability'
            if (!cntrl.trackableElement) {
                if (typeof utag.framework.hasOwnProperty("testForTrackableElement")) {
                    cntrl.trackableElement = utag.framework["testForTrackableElement"](element)
                } else {
                    if (typeof element.tagName == 'string' && element.tagName.toLowerCase().match(/^a$|^input$|^button$|^span$|^img$/i) !== null) cntrl.trackableElement = true
                    if (element.onclick !== null) cntrl.trackableElement = true
                    if (!cntrl.trackableElement && typeof utag.checkSpecializedTrackableEvents) {
                        cntrl.trackableElement = utag.checkSpecializedTrackableEvents(element)
                    }
                }
            }

            fStage = 'Start - Check Attribute'
            try {
                r = element.getAttribute("data-cookie-tracking") || element.getAttribute("cookie-tracking")
                    || element.getAttribute("data-webtrends") || element.getAttribute("wt_name")
                    || element.getAttribute("cookie-event")
                fStage = 'Start - Determine Event Type'
                if (r && cntrl.eventType !== 'Link') {
                    fStage = 'Start - Process Events'
                    rawProp = utag.parseDataStr(r)
                    for (nProperty in rawProp) {
                        if (nProperty !== 'header_flag') {
                            tags[nProperty] || (tags[nProperty] = rawProp[nProperty])
                            cntrl.tagAssigned = true
                            if (cntrl.eventType === 'undefined') cntrl.eventType = 'Cookie'
                        }
                    }
                } else if (cntrl.eventType !== 'Cookie' && (r = element.getAttribute('track-data')
                    || element.getAttribute('data-track-data'))) {
                    fStage = 'Start - Process Cookies'
                    rawProp = utag.parseDataStr(r)
                    for (nProperty in rawProp) {
                        tags[nProperty] || (tags[nProperty] = rawProp[nProperty]);
                        cntrl.tagAssigned = true
                        if (cntrl.eventType === 'undefined') cntrl.eventType = 'Link'
                    }
                } else if ((r = (element.getAttribute('ref_page_event') || element.getAttribute('ref-page-event') || element.getAttribute('data-ref-page-event')))
                    && !(tags.hasOwnProperty('ref_page_event'))) {
                    tags['ref_page_event'] = r
                    if (cntrl.eventType === 'undefined') cntrl.eventType = 'TBD'
                    cntrl.tagAssigned = true

                } else if (r = element.getAttribute('dkview') || element.getAttribute('data-dkview')) {
                    rawProp = utag.parseDataStr(r)
                    for (nProperty in rawProp) {
                        if (nProperty !== 'header_flag') {
                            tags[nProperty] || (tags[nProperty] = rawProp[nProperty])
                        }
                    }
                    if (cntrl.eventType === 'undefined') cntrl.eventType = 'APP'
                    cntrl.tagAssigned = true
                }

                if (cntrl.trackableElement && htmlIdx < 5) {
                    var cType = element.tagName, ta = false
                    var trk_data = element.getAttribute('data-atag') || element.getAttribute('data-testid')
                    if (typeof cType !== 'undefined' &&
                        (cType.match(/^a$|^button$|^div$|^li$|^ul$/i) !== null) ||
                        (cType.toLowerCase() === 'input' &&
                            (element.id === "addtoorderbutton" || ((element.id === 'continueButton' || element.id === 'registrationSubmit') && element.hasAttribute('dkview'))))) {
                        if ((element.id !== null && element.id !== "") || (element.className !== null && element.className !== "")) {
                            htmlLst[htmlProperties[htmlIdx]] = element.id || element.className
                            tags[htmlProperties[htmlIdx]] = element.id || element.className
                            ta = true
                        }
                        if (trk_data !== null && trk_data !== "") {
                            // this should override html values
                            htmlLst[htmlProperties[htmlIdx]] = tags[htmlProperties[htmlIdx]] = trk_data
                            ta = true
                        }
                        if (ta) {
                            htmlIdx++
                        }
                    }
                }
                fStage = 'Collect Trackable Elements'
                utag.collectSpecElements(element, sElements, cntrl)
                if (typeof uFramework.testEvent === 'function') {
                    cntrl.trackableElement = uFramework.testEvent(element, sElements, cntrl)
                }
            } catch (err) {
                utag.DB(err)
            }
            fStage = 'Start'
            element = element.parentElement
            counter++
        }

        // Determine whether to use a cookie or an event. Use the rules in Events from Cookies Tracking, basically if the href doesn't include digikey it is an event.
        fStage = 'Generate Tag'
        if (cntrl.trackableElement) {
            if (utag.data.do_not_track_for_consent === 'yes' && typeof utag.clearDoNotTrack === 'function') {
                fStage = 'Clear Consent'
                utag.clearDoNotTrack(href, tags)
                data['ExtRun'] = utag.dkTrk('409.1-clearconsent');
            }

            if (cntrl.tagAssigned && !cntrl.repressTag) {
                tags['ExtRun'] = utag.dkTrk('409.1')
                fStage = 'Process Specialized Functions'
                utag.postDCSpecializedFunc(tags, sElements, cntrl, a, href)
                if (uFramework.hasOwnProperty('processDynamicEvents')) {
                    cntrl.eventType = uFramework.processDynamicEvents(tags, sElements, cntrl)
                }
                fState = 'Correct Existing Tags'
                if (utag.framework.hasOwnProperty('correctExistingTags')) {
                    cntrl.eventType = utag.framework['correctExistingTags'](utag.dkConCatPageType(), tags, cntrl)
                }
                fStage = 'Send Tag';
                if (cntrl.eventType === 'TBD' && typeof utag.CookieOrLink != 'undefined') cntrl.eventType = utag.CookieOrLink(href);
                if (cntrl.eventType === 'Link') {
                    utag.dklink(tags, href);
                    cntrl.tagSent = true
                }
                if (cntrl.eventType === 'APP') {
                    utag.dkView(tags, href)
                    cntrl.tagSent = true
                } else if (cntrl.eventType === 'Cookie' && utag.data.prorityCookie !== true) {  // tags created from the nav section, by user calls to dkCookie and by event handlers take precedence over cookies constructed by processing attributes
                    utag.newCookie(tags)
                    cntrl.tagSent = true
                }
            }

            if (!cntrl.tagSent) {
                fStage = 'Generate Tag';
                if (typeof utag.generateTag === 'function') {
                    utag.generateTag(sElements, href, tags, cntrl)
                }
                if (typeof uFramework.generateTag === 'function') {
                    cntrl.eventType = uFramework.generateTag(sElements, href, tags, cntrl)
                }
            }

            if (!cntrl.tagAssigned && !cntrl.tagSent && htmlLst.hasOwnProperty('html_element1')) {
                if (utag.data.hasOwnProperty('page_type') && ((utag.data['page_type'].match(/^MK$/)
                    || utag.data['page_type'].match(/^SC$/)) && !(utag.data['page_sub_type'].match(/^PRG$/))
                    || utag.data['page_type'].match(/^PS$/))) {
                    tags['ExtRun'] = utag.dkTrk('409.2');
                    if (typeof utag.CookieOrLink === 'function') {
                        cntrl.eventType = utag.CookieOrLink(href)
                        if (cntrl.eventType === 'Link') {
                            utag.dklink(tags, href)
                            cntrl.tagSent = true
                        }
                        else if (cntrl.eventType === 'Cookie' && utag.data.prorityCookie !== true) {  // tags created from the nav section, by user calls to dkCookie and by event handlers take precedence over cookies constructed by processing attributes
                            utag.newCookie(tags)
                            cntrl.tagSent = true
                        }
                    }
                }
            }

            utag.sendDebuggingTag(tags)

            // Process Site Specific Events 
            fStage = 'Process Site Specific Events';
            // the typeof below can be removed when the Qualtrics Intercept is in Production
            //if (typeof utag.sendQualtricsIntercept === 'function') utag.sendQualtricsIntercept(tags)
        }

        utag.data.priorityLink = utag.data.prorityCookie = false
        utag.clearTagValues(tags)
        utag.data.tagSent = cntrl.tagSent == true
    } catch (err) {
        var x = i || 0; var errDisp = fStage, data = [];
        data['ExtRun'] = utag.dkTrk('409.1-e');
        utag.dkErrorTag(data, err.name, err.message + '--409 -- ' + errDisp);
        utag.DB(err)
    }
}
document.addEventListener(evntLoad.EV, utag.processTags, evntLoad.CAP);
} } catch(e){ utag.DB(e) }  }catch(e){utag.DB(e)};
try{ try{ if(1){
// 420 - Improved GDPR Code
utag.clearDoNotTrack = function(href,tags){
    if (document.getElementsByClassName('cookie-notice').length > 0) {
        if (window.localStorage.getItem('gdpr_cookie_consent') === null) {
            if ((typeof href != 'undefined' && href.indexOf("help/privacy") < 0) && utag.data['dom.pathname'].toLowerCase().indexOf('help/privacy')<0) {
                var gdpr={'acceptedOn':new Date()}
                window.localStorage.setItem("gdpr_cookie_consent", JSON.stringify({ "acceptedOn": new Date() }))
                window.utag_cfg_ovrd.noview = false
                window.utag_cfg_ovrd.nocookie=false
                window['ga-disable-'+ utag.data.google_tracking_id1] = false
                utag.cfg.noview = false
                utag.data.do_not_process_cookies = false
                utag.dkTrk('420')
                utag.view(utag.utag_data_at_pageLoad)
                utag.data.do_not_track_for_consent = 'no'
                if (typeof utag.dkCollectConsentData === 'function') {
                    utag.dkCollectConsentData(gdpr,tags)
                }
            }
        }
    }
}
} } catch(e){ utag.DB(e) }  }catch(e){utag.DB(e)};
try{
  if(typeof utag.linkHandler=='undefined'){
    utag.linkHandler=function(a,b,c,d,e){
      if(!a)a=window.event;
      if(a.target)b=a.target;
      else if(a.srcElement)b=a.srcElement;
      if(b.nodeType==3)b=b.parentNode;
      if(typeof b=='undefined'||typeof b.tagName=='undefined')return;
      c=b.tagName.toLowerCase();
      if(c=='body')return;
      if(c!='a'){
        for(d=0;d<5;d++){
          if(typeof b!='undefined'&&b.parentNode)b=b.parentNode;
          c=(b!=null&&b.tagName)?b.tagName.toLowerCase():'';
          if(c=='a')break;
          else if(c == 'body')return;
        }
      }
      if(c!='a')return;
      var lt=b.text ? b.text: b.innerText ? b.innerText : '';
      if((lt=='' || /^\s+$/.test(lt)) && typeof b.innerHTML!='undefined'){
        lt=b.innerHTML.toLowerCase();
        if(lt.indexOf('<img ')>-1){
          d=lt.indexOf('alt="');
          if(d>-1){
            e=lt.indexOf('"', d + 5);
            lt=lt.substring(d+5,e);
          }else{
            d=lt.indexOf('src="');
            if(d>-1){
              e=lt.indexOf('"',d+5);
              lt=lt.substring(d+5,e);
            }
          }
        }
      }
      var hr=b.href,hrnq=(b.href.split('?'))[0];
      var obj={link_obj:b,link_text:lt,link_url:hrnq,link_type:'exit link',event_name:'Onsite and Downloads'};
c=[location.hostname].concat(('javascript:,digikey,localhost').split(','));
for(d=0;d<c.length;d++){if(hrnq.indexOf(c[d])>-1){obj.link_type='link';break;}};
c=('exe,zip,wav,mp3,mov,mpg,avi,wmv,doc,pdf,xls').split(',');
for(d=0;d<c.length;d++){e=new RegExp(c[d]+'$');if(e.test(hrnq)){obj.link_type='download link';break;}};
try{var link=b;
// 216 - Generate OffSite and Download Events in Google
(function () {
    var data = {};
    utag.dkStdVars(data);
    data['not_a_pageview'] = '1';
    if (typeof obj != 'undefined' && typeof obj.link_url != 'undefined' && obj.link_url.length > 0) {
        if (!/\/\/digikey/ig.test(obj.link_url) && !/\.digikey/ig.test(obj.link_url)
            && obj.link_url !== 'javascript:;' && !/evergage/ig.test(obj.link_url)) {
            var dest = data['ext_location'] = data['event_label'] = obj.link_url;
            data['ext_host'] = dest.substring(dest.indexOf('//') + 2, dest.indexOf('/', 10));
            data['ext_uri'] = dest.substr(dest.indexOf('/', 10));
            switch (obj.link_type) {
                case 'download link':
                    data['ref_page_event'] = 'Download from External Page (Auto)';
                    break;
                case 'exit link':
                    data['ref_page_event'] = 'Link to External Page (Auto)';
                    break;
                default:
                    if (!utag.data.tagSent) {
                        data['ref_page_event'] = 'Javascript & Misc (Auto)';
                        // added 20220831
                        var skipUrls = ['/c/support/edit/settings', '/classic/tools/newregistration.aspx']
                        skipUrls.forEach(function(val) {
                            if (utag.data["dom.pathname"].toLowerCase() !== val) {
                                var emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/;
                                if (!obj.link_text.match(emailRegex)) {
                                    data['event_label'] = obj.link_text
                                }
                            }
                        })
                    }
            }
            data['event_category'] = "Offsite Links (Auto)";
            data['page_title'] = obj.link_url;
            utag.link(data);
        } else if (obj.link_type === "download link") {
            data['ref_page_event'] = "DigiKey Download (Auto)";
            data['event_category'] = "DigiKey Download (Auto)";
            data['page_title'] = obj.link_url;
            data['event_label'] = obj.link_url;
            utag.link(data);
        }
    }
}());
}catch(e){};
    if(obj['link_url']=='EXCLUDEALL')utag.link(obj);
    }
  utag.loader.EV(document,'mousedown',utag.linkHandler);
  }

}catch(e){utag.DB(e)};
try{ try{ if(1){
// 444 - Event Time - Fixup Shopping Cart Page
utag.fixUpShoppingCart = function (data, sElements, eventType) {
    var retVal = eventType
    if (typeof sElements['Checkout'] !== 'undefined') {
        var labelx = sElements['Checkout'].innerText.trim()
        if (labelx.toLowerCase() === 'checkout as guest' || data['ref_page_event'].toLowerCase() === 'checkout as guest' ) {
            data.ref_page_event = 'Checkout As Guest'
            data['ExtRun'] = utag.dkTrk('444.1')
        } else {
            data.ref_page_event = 'Click Checkout'
            data['ExtRun'] = utag.dkTrk('444.2')
        }
    } else if (typeof sElements['Submit Order'] !== 'undefined') {//Updated Aug1621
        data.ref_page_event = 'Submit Order'
        data['ExtRun'] = utag.dkTrk('444.3')
        utag.SubmitOrderCookieImpl()
    } else if (sElements.hasOwnProperty('Add Part List')) {
        data.ref_page_event = 'Add Part'
        data.add_part_method = 'Add Part List'
        data['ExtRun'] = utag.dkTrk('444.4')
    } else if (sElements.hasOwnProperty('Add Part Manually')) {
        data.ref_page_event = 'Add Part'
        data.add_part_method = 'Manual Add Part'
        data['ExtRun'] = utag.dkTrk('444.5')
    }
    return retVal
}

utag.fixUpShoppingCartChina = function (data, sElements, eventType, pgSubType) {
    var retVal = eventType
    var rpe = ''
    switch (pgSubType) {
        case 'SCAD' : 
            rpe = 'Continue to Shipping';
            break;
        case 'SI' :
            rpe = 'Continue to Payment';
            break;
        default:
            break;
    }
    if( rpe !== '' ) {
        data.ref_page_event = rpe
        data['ExtRun'] = utag.dkTrk('444.10')
    } 
    return retVal
}

utag.generateShoppingCartTags = function (data, sElements, href) {
    var tagSent = false
    if (sElements.hasOwnProperty('Upload File')) {
        data.ref_page_event = 'Add Part'
        data.add_part_method = 'File Upload'
        data['ExtRun'] = utag.dkTrk('444.6')
        utag.dklink(data)
        tagSent = true
    }
    if (typeof sElements['View Marketplace Message'] !== 'undefined') {
        data.personalization_program = ""
        data.personalization_creative = ""
        data.ref_page_event = 'View Marketplace Message'
        data['ExtRun'] = utag.dkTrk('444.7')
        utag.dklink(data)
        tagSent = true
    }
    if (typeof sElements['Select Learn More'] !== 'undefined') {
        data.personalization_program = ""
        data.personalization_creative = ""
        data.ref_page_event = 'Select Learn More'
        data['ExtRun'] = utag.dkTrk('444.8')
        utag.newCookie(data, href)
        tagSent = true
    }
    if (typeof sElements['Share My Cart with EKOM'] !== 'undefined') {
        data.personalization_program = ""
        data.personalization_creative = ""
        data.ref_page_event = 'Share My Cart with EKOM'
        data['ExtRun'] = utag.dkTrk('444.9')
        utag.dklink(data)
        tagSent = true
    }
    if (typeof sElements['China Continue Registration'] !== 'undefined') {
        data.personalization_program = ""
        data.personalization_creative = ""
        data.page_type = 'SC'
        data.page_sub_type = 'SCN'
        data.page_id = 'SCN'
        data.page_content_group = 'Registered User'
        data.page_content_sub_group = 'Continue Registration'
        data.ref_page_event = 'Continue Registration'
        data['ExtRun'] = utag.dkTrk('444.10')
//        utag.dkView(data)
        utag.dklink(data)
        tagSent = true
    }
    if (typeof sElements['China Submit Registration'] !== 'undefined') {
        data.personalization_program = ""
        data.personalization_creative = ""
        data.page_type = 'SC'
        data.page_sub_type = 'SCN'
        data.page_id = 'SCN'
        data.page_content_group = 'Registered User'
        data.page_content_sub_group = 'Submit Registration'
        data.ref_page_event = 'Submit Registration'
        data['ExtRun'] = utag.dkTrk('444.11')
//        utag.dkView(data)
        utag.dklink(data)
        tagSent = true
    }
    return tagSent
}

} } catch(e){ utag.DB(e) }  }catch(e){utag.DB(e)};
try{ try{ if(1){
// 477 - Keypress for Framework
utag.testKeypressTrackability = function (element, sElements, cntrl) {
    // for Header Nav
    if (typeof element.className !== 'string') return;
    if (element.getAttribute('data-testid') === 'search-input') {
        sElements['RefineSearch'] = element
        cntrl.trackableElement = true
        utag.dkTrk('477.4')
    }
    if (/dk-input/.test(element.className)) {
        cntrl.trackableElement = true
        utag.dkTrk('477.5')
    }
}

utag.collectSpecKElements = function (element, sElements, cntrl) {
    // placeholder for tags added by Tealium to be processed dynamically (see collectSpecElements()
    var e = 1
}

utag.postDCSpecializedKeypressFunc = function (tags, sElements, cntrl) {
    if (utag.data['page_type'] === 'PS') {
        // 435.2
        if (typeof utag.fixUpKeypressSearch === 'function') utag.fixUpKeypressSearch(tags, sElements, cntrl)
    }
}

utag.processKeypress = function (a, b, c, d, e) {
    var uFramework = utag.framework
    var fStage = 'Start'
    try {
        var cntrl = {
            'trackableElement': false,
            'eventType': 'undefined',
            'tagAssigned': false,
            'tagSent': false,
            'repressTag': false
        }
        var element = a.target, href = "", tags = {}, rawProp = {}, nProperty = "", counter = 0;
        var r;
        var labels = [], sElements = {};
        var enterKeyPressed = false;
        var htmlProperties = ['html_element1', 'html_element2', 'html_element3', 'html_element4'], htmlIdx = 0, htmlLst = {};
        if (utag.data.priorityLink === true) return;
        if (a.key === 'Enter') { enterKeyPressed = true; }
        else if (a.keyCode === 13) { enterKeyPressed = true; }
        if (!enterKeyPressed) return;

        // Check to see if we have consent.  If not, capture the original utag_data so that it can be sent when 
        // the user does consent.
        fState = 'Start - Preserve Data';
        if (utag.data.hasOwnProperty('do_not_track_for_consent') && !utag.hasOwnProperty('utag_data_at_pageLoad')) {
            utag.preserveOriginalUtagData();
        }

        // Walk up the element hierarchy, checking each element to see if it contains any analytics tags
        fStage = 'Start - Process Elements';
        while (element && counter < 50) {
            if (href === "" && typeof element.href !== 'undefined' && element.tagName !== 'IMG') {
                href = element.href;
            }

            // First check to see if keypress represents a user action as opposed to a random click on the page
            fStage = 'Start - Check Trackability';
            utag.testKeypressTrackability(element, sElements, cntrl);

            // Look to see if the current element has an analytics tag.  Based on the type of tag, determine what kind
            // of tag to fire
            fStage = 'Start - Check Attribute';
            r = element.getAttribute("data-cookie-tracking") || element.getAttribute("cookie-tracking") || element.getAttribute("data-webtrends") || element.getAttribute("wt_name") || element.getAttribute("cookie-event");
            fStage = 'Start - Determine Event Type';
            if (r && cntrl.eventType !== 'Link') {
                fStage = 'Start - Process Events';
                rawProp = utag.parseDataStr(r);
                for (nProperty in rawProp) {
                    if (nProperty !== 'header_flag') {
                        tags[nProperty] || (tags[nProperty] = rawProp[nProperty]);
                        cntrl.tagAssigned = true;
                        if (cntrl.eventType === 'undefined') cntrl.eventType = 'Cookie';
                    }
                }
            } else if (cntrl.eventType !== 'Cookie' && (r = element.getAttribute('track-data') || element.getAttribute('data-track-data'))) {
                fStage = 'Start - Process Cookies';
                rawProp = utag.parseDataStr(r);
                for (nProperty in rawProp) {
                    tags[nProperty] || (tags[nProperty] = rawProp[nProperty]);
                    cntrl.tagAssigned = true;
                    cntrl.eventType = 'Link';
                }
            } else if ((r = (element.getAttribute('ref_page_event') || element.getAttribute('ref-page-event') || element.getAttribute('data-ref-page-event'))) && !(tags.hasOwnProperty('ref_page_event'))) {
                tags['ref_page_event'] = r;
                if (cntrl.eventType === 'undefined') cntrl.eventType = 'TBD'
                cntrl.tagAssigned = true;
            } else if (r = element.getAttribute('dkview') || element.getAttribute('data-dkview')) {
                rawProp = utag.parseDataStr(r);
                for (nProperty in rawProp) {
                    if (nProperty !== 'header_flag') {
                        tags[nProperty] || (tags[nProperty] = rawProp[nProperty]);
                    }
                }
                if (cntrl.eventType === 'undefined') cntrl.eventType = 'APP'
                cntrl.tagAssigned = true;
            }

            // Capture the identifiers for the four html elements lowest in the element hierarchy
            if (cntrl.trackableElement && htmlIdx < 4) {
                var cType = element.tagName, ta = false;
                var trk_data = element.getAttribute('data-atag') || element.getAttribute('data-testid');
                //if (typeof cType !== 'undefined' && cType.match(/^a$|^button$|^div$|^li$|^ul$/i) !== null) {
                // updated to include add to cart button on Cornerstone PDP
                if (typeof cType !== 'undefined' && (cType.match(/^a$|^button$|^div$|^li$|^ul$/i) !== null || 
                    (cType.toLowerCase() === 'input' && element.id === 'addtoorderbutton'))) {
                    if ((element.id !== null && element.id !== "") || (element.className !== null && element.className !== "")) {
                        htmlLst[htmlProperties[htmlIdx]] = element.id || element.className;
                        tags[htmlProperties[htmlIdx]] = element.id || element.className;
                        ta = true;
                    }
                    if (trk_data !== null && trk_data !== "") {
                        htmlLst[htmlProperties[htmlIdx]] = tags[htmlProperties[htmlIdx]] = trk_data;
                        ta = true;
                    }
                    if (ta) {
                        htmlIdx++;
                    }
                }
            }

            // Check to see if we are generating a tag dynamically from the current element
            fStage = 'Collect Trackable Elements';
            utag.collectSpecKElements(element, sElements, cntrl);
            fStage = 'Start';
            element = element.parentElement;
            counter++;
        }

        fState = 'Process Tag'
        // Process all keypresses we've identified as a trackable
        if (cntrl.trackableElement) {
            // Our current rule is that any action (except looking at the privacy page) is consent to be tracked.
            // That is initiated here.
            if (utag.data.do_not_track_for_consent === 'yes' && typeof utag.clearDoNotTrack === 'function') {
                fStage = 'Clear Consent'
                utag.clearDoNotTrack(href, tags)
            }
            tags['ExtRun'] = utag.dkTrk('477.1')

            // The following processes the dynamic tags identified from the elements collected in 
            // processKSpecialElements and for which other tag data was collected from 
            // html attributes (i.e. cookie-tracking, etc.)
            if (cntrl.tagAssigned && !cntrl.repressTag) {
                tags['ExtRun'] = utag.dkTrk('477.2');
                fStage = 'Process Specialized Functions';
                utag.postDCSpecializedKeypressFunc(tags, sElements, cntrl);

                fStage = 'Send Tag';
                if (cntrl.eventType === 'TBD' && typeof utag.CookieOrLink != 'undefined') cntrl.eventType = utag.CookieOrLink(href);
                if (cntrl.eventType === 'Link') {
                    utag.dklink(tags, href);
                    cntrl.tagSent = true;
                } else if (cntrl.eventType === 'APP') {
                    utag.dkView(tags, href);
                    cntrl.tagSent = true;
                } else if (cntrl.eventType === 'Cookie' && utag.data.prorityCookie !== true) {  // tags created from the nav section, by user calls to dkCookie and by event handlers take precedence over cookies constructed by processing attributes
                    utag.newCookie(tags);
                    cntrl.tagSent = true;
                }
            }

            // If no tag data was collected when processing the html attributes, try generating
            // a dynamic tag from elements collected in the collectKSpecialElements.  The
            // generateTag function includes code to write the cookie or send the tag.
            if (!cntrl.tagSent) {
                fStage = 'Generate Tag';
                utag.generateTag(sElements, href, tags, cntrl);
            }

            // If a tag has not been sent, generate a tag for selected page type and page sub types.  This is mostly
            // done to track down issues or to audit pages for missing tags. It is, combined with lookup tables,
            // the primary way for tagging Maker.
            if ((!cntrl.tagAssigned && !cntrl.tagSent) || htmlLst.hasOwnProperty('html_element1')) {
                if (utag.data.hasOwnProperty('page_type') && (utag.data['page_type'].match(/^MK$/)
                    || utag.data['page_type'].match(/^SC$/)) && !(utag.data['page_sub_type'].match(/^PRG$/))) {
                    tags['ExtRun'] = utag.dkTrk('409.2');
                    cntrl.eventType = utag.CookieOrLink(href);
                    if (cntrl.eventType === 'Link') {
                        utag.dklink(tags, href);
                        cntrl.tagSent = true;
                    } else if (cntrl.eventType === 'Cookie' && utag.data.prorityCookie !== true) {  // tags created from the nav section, by user calls to dkCookie and by event handlers take precedence over cookies constructed by processing attributes
                        utag.newCookie(tags);
                        cntrl.tagSent = true;
                    }
                }
            }
        }
    } catch (err) {
        // In addition to tracking errors in the Tealium debug log, generate and sent to Google and
        // event tag with the error information.
        var x = i || 0; var errDisp = fStage, data = [];
        data['ExtRun'] = utag.dkTrk('477.1-e');
        utag.dkErrorTag(data, err.name, err.message + '--477 -- ' + errDisp);
        utag.DB(err)
    }
}
utag.loader.EV(document, 'keydown', utag.processKeypress)
} } catch(e){ utag.DB(e) }  }catch(e){utag.DB(e)};}})

  if(utag.cfg.readywait || utag.cfg.waittimer){
    utag.loader.EV('', 'ready', function(a) {
      if(utag.loader.rf==0){
        utag.loader.rf=1;
        utag.cfg.readywait=1;
        utag.DB('READY:utag.cfg.readywait');
        setTimeout(function(){utag.loader.PINIT()}, utag.cfg.waittimer || 1);
      }
    })
  }else{
    utag.loader.PINIT()
  }
}

